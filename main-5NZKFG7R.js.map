{"version":3,"sources":["src/app/app.component.ts","src/app/app.component.html","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","node_modules/@ngx-translate/http-loader/fesm2022/ngx-translate-http-loader.mjs","src/app/common/auth/guards/auth.guard.ts","src/app/app.routes.ts","src/app/common/auth/interceptors/auth.interceptor.ts","src/app/app.config.ts","src/main.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  standalone: true,\n  imports: [RouterOutlet],\n  selector: 'tnm-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n\n  private readonly elRef = inject(ElementRef);\n\n  constructor(private translate: TranslateService) {\n    const languages: string[] = ['de', 'en', 'uk', 'fr', 'es', 'pl'];\n    this.translate.addLangs(languages);\n    this.translate.setDefaultLang('en');\n    const browserLang: string | undefined = this.translate.getBrowserLang();\n    if (browserLang) {\n      const langToUse = languages.includes(browserLang) ? browserLang : 'en';\n      this.translate.use(langToUse);\n    }\n\n    const hostEl: HTMLElement = this.elRef.nativeElement;\n    hostEl.oncontextmenu = (event: MouseEvent): void => event.preventDefault();\n  }\n}\n","<router-outlet/>\n","/**\n * @license Angular v19.2.8\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ɵRuntimeError as _RuntimeError, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, Injectable, ɵperformanceMarkFeature as _performanceMarkFeature, makeEnvironmentProviders, NgZone, RendererFactory2, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { DomRendererFactory2 } from '../dom_renderer-DGKzginR.mjs';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    doc;\n    delegate;\n    zone;\n    animationType;\n    moduleImpl;\n    _rendererFactoryPromise = null;\n    scheduler = null;\n    injector = inject(Injector);\n    loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n      optional: true\n    });\n    _engine;\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n      // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n      // the set of imported symbols.\n      const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n      let moduleImplPromise;\n      if (this.loadingSchedulerFn) {\n        moduleImplPromise = this.loadingSchedulerFn(loadFn);\n      } else {\n        moduleImplPromise = loadFn();\n      }\n      return moduleImplPromise.catch(e => {\n        throw new _RuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n        this.scheduler ??= this.injector.get(_ChangeDetectionScheduler, null, {\n          optional: true\n        });\n        this.scheduler?.notify(10 /* NotificationSource.AsyncAnimationsLoaded */);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n      // Flush the engine since the renderer destruction waits for animations to be done.\n      this._engine?.flush();\n      this.delegate.componentReplaced?.(componentId);\n    }\n    static ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  delegate;\n  // List of callbacks that need to be replayed on the animation renderer once its loaded\n  replay = [];\n  ɵtype = 1 /* AnimationRendererType.Delegated */;\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback, options) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback, options));\n    }\n    return this.delegate.listen(target, eventName, callback, options);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  _performanceMarkFeature('NgAsyncAnimations');\n  // Animations don't work on the server so we switch them over to no-op automatically.\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    type = 'noop';\n  }\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, DomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nlet TranslateHttpLoader = /*#__PURE__*/(() => {\n  class TranslateHttpLoader {\n    http;\n    prefix;\n    suffix;\n    constructor(http, prefix = \"/assets/i18n/\", suffix = \".json\") {\n      this.http = http;\n      this.prefix = prefix;\n      this.suffix = suffix;\n    }\n    /**\n     * Gets the translations from the server\n     */\n    getTranslation(lang) {\n      return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n    }\n    static ɵfac = function TranslateHttpLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TranslateHttpLoader)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(String), i0.ɵɵinject(String));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TranslateHttpLoader,\n      factory: TranslateHttpLoader.ɵfac\n    });\n  }\n  return TranslateHttpLoader;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TranslateHttpLoader };\n","import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const router = inject(Router);\n  const authService = inject(AuthService);\n  if (!authService.authorised) {\n    router.navigate(['welcome'], { queryParams: { login: true } }).then();\n    return false;\n  }\n  return true;\n};\n","import { Routes } from '@angular/router';\n\nimport { authGuard } from './common/auth/guards/auth.guard';\n\nexport const routes: Routes = [\n  {\n    path: 'welcome',\n    loadComponent: () => import('./pages/welcome-page/welcome-page.component').then(m => m.WelcomePageComponent),\n  },\n  {\n    path: 'demo',\n    loadComponent: () => import('./pages/demo/demo.component').then(m => m.DemoComponent),\n  },\n  {\n    path: 'profile/:name',\n    loadComponent: () => import('./pages/profile/profile.component').then(m => m.ProfileComponent),\n    canActivate: [authGuard],\n  },\n  {\n    path: '**',\n    redirectTo: 'welcome',\n    pathMatch: 'full',\n  },\n];\n","import { HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { catchError, throwError } from 'rxjs';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthService } from '../services/auth/auth.service';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const token = authService.authToken ?? '';\n  const isApiRequest = req.url.startsWith(environment.apiUrl);\n\n  const handledReq = isApiRequest ? req.clone({\n    setHeaders: {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      Authorization: `Bearer ${token}`,\n    },\n  }) : req;\n\n  return next(handledReq).pipe(\n    catchError(error => {\n      if (error.status === 401) {\n        authService.logOut();\n        router.navigate(['welcome'], { queryParams: { login: true } }).then();\n      }\n      return throwError(() => error);\n    }),\n  );\n};\n","import { DOCUMENT } from '@angular/common';\nimport { HttpClient, provideHttpClient, withFetch, withInterceptors } from '@angular/common/http';\nimport { ApplicationConfig, importProvidersFrom } from '@angular/core';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { provideRouter } from '@angular/router';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { environment } from '../environments/environment';\n\nimport { routes } from './app.routes';\nimport { authInterceptor } from './common/auth/interceptors/auth.interceptor';\n\nimport {\n  FacebookLoginProvider,\n  GoogleLoginProvider,\n  SocialAuthServiceConfig,\n  SocialLoginModule,\n} from '@abacritt/angularx-social-login';\n\nconst httpLoaderFactory: (http: HttpClient, doc: Document) => TranslateHttpLoader = (http: HttpClient, doc: Document) => {\n  const baseHref = doc.getElementsByTagName('base')[0].href;\n  return new TranslateHttpLoader(http, `${baseHref}assets/i18n/`, '.json');\n};\n\nconst provideSocialAuth = {\n  provide: 'SocialAuthServiceConfig',\n  useValue: {\n    autoLogin: false,\n    providers: [\n      {\n        id: GoogleLoginProvider.PROVIDER_ID,\n        provider: new GoogleLoginProvider(environment.googleOAuthClientId),\n      },\n      {\n        id: FacebookLoginProvider.PROVIDER_ID,\n        provider: new FacebookLoginProvider(environment.facebookOAuthAppId),\n      },\n    ],\n    onError: err => console.error(err),\n  } as SocialAuthServiceConfig,\n};\n\nexport\nconst appConfig: ApplicationConfig = {\n  providers: [\n    importProvidersFrom([\n      TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: httpLoaderFactory,\n          deps: [HttpClient, DOCUMENT],\n        },\n      }),\n      SocialLoginModule,\n    ]),\n    provideRouter(routes),\n    provideAnimationsAsync(),\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([authInterceptor]),\n    ),\n    provideSocialAuth,\n  ],\n};\n","import { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch(err => console.error(err));\n"],"mappings":"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","names":["AppComponent","constructor","translate","elRef","inject","ElementRef","languages","addLangs","setDefaultLang","browserLang","getBrowserLang","langToUse","includes","use","hostEl","nativeElement","oncontextmenu","event","preventDefault","ɵɵdirectiveInject","TranslateService","selectors","decls","vars","template","rf","ctx","ɵɵelement","RouterOutlet","encapsulation","changeDetection","ANIMATION_PREFIX","AsyncAnimationRendererFactory","inject","Injector","ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN","doc","delegate","zone","animationType","moduleImpl","loadFn","m","moduleImplPromise","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","ChangeDetectionScheduler","componentId","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","options","propOrEventName","InjectionToken","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","TranslateHttpLoader","http","prefix","suffix","lang","__ngFactoryType__","ɵɵinject","HttpClient","ɵɵdefineInjectable","authGuard","route","state","router","inject","Router","AuthService","authorised","navigate","queryParams","login","then","routes","path","loadComponent","then","m","WelcomePageComponent","DemoComponent","ProfileComponent","canActivate","authGuard","redirectTo","pathMatch","authInterceptor","req","next","authService","inject","AuthService","router","Router","token","authToken","handledReq","url","startsWith","environment","apiUrl","clone","setHeaders","Authorization","pipe","catchError","error","status","logOut","navigate","queryParams","login","then","throwError","httpLoaderFactory","http","doc","baseHref","getElementsByTagName","href","TranslateHttpLoader","provideSocialAuth","provide","useValue","autoLogin","providers","id","GoogleLoginProvider","PROVIDER_ID","provider","environment","googleOAuthClientId","FacebookLoginProvider","facebookOAuthAppId","onError","err","console","error","appConfig","importProvidersFrom","TranslateModule","forRoot","loader","TranslateLoader","useFactory","deps","HttpClient","DOCUMENT","SocialLoginModule","provideRouter","routes","provideAnimationsAsync","provideHttpClient","withFetch","withInterceptors","authInterceptor","bootstrapApplication","AppComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[2,3]}