{"version":3,"sources":["node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/ngx-scrollbar/fesm2022/ngx-scrollbar-smooth-scroll.mjs","node_modules/ngx-scrollbar/fesm2022/ngx-scrollbar.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/material/fesm2022/form-field-BPX7ZLIc.mjs","node_modules/@angular/material/fesm2022/module-BOQEdUAz.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/material/fesm2022/input-value-accessor-cp3A3zMa.mjs","node_modules/@angular/material/fesm2022/error-options-BPhcAVoK.mjs","node_modules/@angular/material/fesm2022/error-state-DAicm3pw.mjs","node_modules/@angular/material/fesm2022/input.mjs","src/app/shared/components/validation/validation-errors.enum.ts","src/app/shared/components/validation/validation-service/validation.service.ts","src/app/shared/components/input-text/input-height-pipe/input-height.pipe.ts","src/app/shared/components/input-text/input-text.component.ts","src/app/shared/components/input-text/input-text.component.html","src/app/shared/directives/noop-value-accessor/noop-value-accessor.directive.ts","src/app/shared/components/validation/validation.component.ts","src/app/shared/components/validation/validation.component.html","src/app/common/auth/directives/base-auth/base-auth.directive.ts","src/app/common/auth/enums/auth.enum.ts","src/app/common/auth/components/change-password/change-password.component.ts","src/app/common/auth/components/change-password/change-password.component.html","src/app/common/auth/components/forgot-password/forgot-password.component.ts","src/app/common/auth/components/forgot-password/forgot-password.component.html","src/app/common/auth/components/send-email/send-email.component.ts","src/app/common/auth/components/send-email/send-email.component.html","src/app/common/auth/directives/sign-in-up/sign-in-up.directive.ts","src/app/common/auth/components/sign-in/sign-in.component.ts","src/app/common/auth/components/sign-in/sign-in.component.html","src/app/common/auth/components/sign-up/sign-up.component.ts","src/app/common/auth/components/sign-up/sign-up.component.html","src/app/common/auth/components/user-name/user-name.component.ts","src/app/common/auth/components/user-name/user-name.component.html","src/app/common/auth/directives/auth/auth.directive.ts","src/app/common/footer/footer.component.ts","src/app/common/footer/footer.component.html","node_modules/@angular/cdk/fesm2022/unique-selection-dispatcher-Cnrf4muk.mjs","node_modules/@angular/cdk/fesm2022/dispose-view-repeater-strategy-BLw1RSwm.mjs","node_modules/@angular/cdk/fesm2022/selection-model-B9K3FAzc.mjs","node_modules/@angular/material/fesm2022/pseudo-checkbox-Dy35mUmj.mjs","node_modules/@angular/material/fesm2022/button-toggle.mjs","node_modules/@angular/material/fesm2022/internal-form-field-C8swiHbL.mjs","node_modules/@angular/material/fesm2022/radio.mjs","node_modules/@angular/material/fesm2022/option-B6mQ8PwE.mjs","node_modules/@angular/material/fesm2022/pseudo-checkbox-module-CUFRN-kl.mjs","node_modules/@angular/material/fesm2022/index-BU5avYQW.mjs","src/app/shared/components/toggle-btn/toggle-btn.component.ts","src/app/shared/components/toggle-btn/toggle-btn.component.html","src/app/pages/welcome-page/components/demo-settings-panel/demo-settings-panel.component.ts","src/app/pages/welcome-page/components/demo-settings-panel/demo-settings-panel.component.html","src/app/pages/welcome-page/components/position-settings/position-settings.component.ts","src/app/pages/welcome-page/components/position-settings/position-settings.component.html","node_modules/@angular/material/fesm2022/tabs.mjs","src/app/pages/welcome-page/services/tank-item-transaction/tank-item-transaction.service.ts","src/app/common/resources/pipes/rotate-bullet/rotate-bullet.pipe.ts","src/app/common/elements/game-containers/player-inventory/player-inventory.component.ts","src/app/common/elements/game-containers/player-inventory/player-inventory.component.html","src/app/common/elements/game-containers/tank-modernization/tank-modernization.component.ts","src/app/common/elements/game-containers/tank-modernization/tank-modernization.component.html","src/app/pages/welcome-page/services/war-room/war-room.service.ts","src/app/common/elements/game-containers/tank-view/tank-view.component.ts","src/app/common/elements/game-containers/tank-view/tank-view.component.html","src/app/shared/services/breakpoint/breakpoint.enum.ts","src/app/shared/services/breakpoint/breakpoint.service.ts","node_modules/@angular/cdk/fesm2022/table.mjs","node_modules/@angular/material/fesm2022/table.mjs","src/app/pages/welcome-page/enums/user-statistics.enum.ts","src/app/pages/welcome-page/pipes/map-battle.pipe.ts","src/app/pages/welcome-page/components/battles-table/battles-table.component.ts","src/app/pages/welcome-page/components/battles-table/battles-table.component.html","node_modules/@angular/material/fesm2022/menu.mjs","src/app/common/elements/game-containers/quantity-menu/quantity-menu.component.ts","src/app/common/elements/game-containers/quantity-menu/quantity-menu.component.html","src/app/common/elements/game-containers/tank-inventions/tank-inventions.component.ts","src/app/common/elements/game-containers/tank-inventions/tank-inventions.component.html","src/app/common/elements/game-containers/tank-item-slot/tank-item-slot.component.ts","src/app/common/elements/game-containers/tank-item-slot/tank-item-slot.component.html","src/app/pages/welcome-page/components/war-room/components/tank-inventory/tank-inventory.component.ts","src/app/pages/welcome-page/components/war-room/components/tank-inventory/tank-inventory.component.html","src/app/common/elements/game-buttons/game-item-btn/game-item-btn.component.ts","src/app/common/elements/game-buttons/game-item-btn/game-item-btn.component.html","src/app/pages/welcome-page/components/war-room/components/tank-list/tank-list.component.ts","src/app/pages/welcome-page/components/war-room/components/tank-list/tank-list.component.html","src/app/common/elements/dialogs/shop-deal-dialog/shop-deal-dialog.component.ts","src/app/common/elements/dialogs/shop-deal-dialog/shop-deal-dialog.component.html","src/app/common/elements/game-containers/shop/shop.component.ts","src/app/common/elements/game-containers/shop/shop.component.html","src/app/common/resources/constants/shops.ts","src/app/pages/welcome-page/components/war-room/components/tank-shops/tank-shops.component.ts","src/app/pages/welcome-page/components/war-room/components/tank-shops/tank-shops.component.html","src/app/pages/welcome-page/components/war-room/components/war-room-header/war-room-header.component.ts","src/app/pages/welcome-page/components/war-room/components/war-room-header/war-room-header.component.html","src/app/pages/welcome-page/components/war-room/war-room.component.ts","src/app/pages/welcome-page/components/war-room/war-room.component.html","src/app/pages/welcome-page/components/demo-settings/demo-settings.component.ts","src/app/pages/welcome-page/components/demo-settings/demo-settings.component.html","node_modules/@angular/material/fesm2022/toolbar.mjs","node_modules/@angular/material/fesm2022/module-Dzh-auMR.mjs","src/app/shared/modules/svg-material/svg-material.module.ts","src/app/shared/components/select-language/select-language.ts","src/app/shared/components/select-language/select-language.component.ts","src/app/shared/components/select-language/select-language.component.html","src/app/pages/welcome-page/components/welcome-header/welcome-header.component.ts","src/app/pages/welcome-page/components/welcome-header/welcome-header.component.html","src/app/pages/welcome-page/welcome-page.component.ts","src/app/pages/welcome-page/welcome-page.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, NgZone, RendererFactory2, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  _box;\n  /** Stream that emits when the shared observer is destroyed. */\n  _destroyed = /*#__PURE__*/new Subject();\n  /** Stream of all events from the ResizeObserver. */\n  _resizeSubject = /*#__PURE__*/new Subject();\n  /** ResizeObserver used to observe element resize events. */\n  _resizeObserver;\n  /** A map of elements to streams of their resize events. */\n  _elementObservables = /*#__PURE__*/new Map();\n  constructor(/** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    _cleanupErrorListener;\n    /** Map of box type to shared resize observer. */\n    _observers = new Map();\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    constructor() {\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          const renderer = inject(RendererFactory2).createRenderer(null, null);\n          this._cleanupErrorListener = renderer.listen('window', 'error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      this._cleanupErrorListener?.();\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static ɵfac = function SharedResizeObserver_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SharedResizeObserver)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedResizeObserver,\n      factory: SharedResizeObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, Injectable, ElementRef, Directive } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable, takeWhile, switchMap, merge, fromEvent, take, takeUntil, finalize } from 'rxjs';\n\n/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nconst NEWTON_ITERATIONS = 4;\nconst NEWTON_MIN_SLOPE = 0.001;\nconst SUBDIVISION_PRECISION = 0.0000001;\nconst SUBDIVISION_MAX_ITERATIONS = 10;\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nconst float32ArraySupported = typeof Float32Array === 'function';\nfunction A(aA1, aA2) {\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1, aA2) {\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1) {\n  return 3.0 * aA1;\n}\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT, aA1, aA2) {\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT, aA1, aA2) {\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  let currentX,\n    currentT,\n    i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\nfunction LinearEasing(x) {\n  return x;\n}\nfunction bezier(mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n  // Precompute samples table\n  const sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (let i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n  function getTForX(aX) {\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n    // Interpolate to provide an initial guess for t\n    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n  return function BezierEasing(x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\nconst defaultSmoothScrollOptions = {\n  duration: 468,\n  easing: {\n    x1: 0.42,\n    y1: 0,\n    x2: 0.58,\n    y2: 1\n  }\n};\nconst SMOOTH_SCROLL_OPTIONS = new InjectionToken('SMOOTH_SCROLL_OPTIONS', {\n  providedIn: 'root',\n  factory: () => defaultSmoothScrollOptions\n});\nfunction provideSmoothScrollOptions(options) {\n  return [{\n    provide: SMOOTH_SCROLL_OPTIONS,\n    useValue: {\n      ...defaultSmoothScrollOptions,\n      ...options\n    }\n  }];\n}\nlet SmoothScrollManager = /*#__PURE__*/(() => {\n  class SmoothScrollManager {\n    constructor() {\n      this.document = inject(DOCUMENT);\n      this.zone = inject(NgZone);\n      // Default options\n      this._defaultOptions = inject(SMOOTH_SCROLL_OPTIONS);\n      // Keeps track of the ongoing SmoothScroll functions, so they can be handled in case of duplication.\n      // Each scrolled element gets a destroyer stream which gets deleted immediately after it completes.\n      // Purpose: If user called a scroll function again on the same element before the scrolls completes,\n      // it cancels the ongoing scroll and starts a new one\n      this.onGoingScrolls = new Map();\n    }\n    /**\n     * Timing method\n     */\n    get now() {\n      return this.document.defaultView.performance?.now?.bind(this.document.defaultView.performance) || Date.now;\n    }\n    /**\n     * changes scroll position inside an element\n     */\n    scrollElement(el, x, y) {\n      el.scrollLeft = x;\n      el.scrollTop = y;\n    }\n    /**\n     * Handles a given parameter of type HTMLElement, ElementRef or selector\n     */\n    getElement(el, parent) {\n      if (typeof el === 'string') {\n        return (parent || this.document).querySelector(el);\n      }\n      return coerceElement(el);\n    }\n    /**\n     * Initializes a destroyer stream, re-initializes it if the element is already being scrolled\n     */\n    getScrollDestroyerRef(el) {\n      if (this.onGoingScrolls.has(el)) {\n        this.onGoingScrolls.get(el).next();\n      }\n      return this.onGoingScrolls.set(el, new Subject()).get(el);\n    }\n    /**\n     * A function called recursively that, given a context, steps through scrolling\n     */\n    step(context) {\n      return new Observable(subscriber => {\n        let elapsed = (this.now() - context.startTime) / context.duration;\n        // avoid elapsed times higher than one\n        elapsed = elapsed > 1 ? 1 : elapsed;\n        // apply easing to elapsed time\n        const value = context.easing(elapsed);\n        context.currentX = context.startX + (context.x - context.startX) * value;\n        context.currentY = context.startY + (context.y - context.startY) * value;\n        this.scrollElement(context.scrollable, context.currentX, context.currentY);\n        // Proceed to the step\n        requestAnimationFrame(() => {\n          subscriber.next();\n          subscriber.complete();\n        });\n      });\n    }\n    /**\n     * Checks if smooth scroll has reached, cleans up the smooth scroll stream\n     */\n    isReached(context, destroyed) {\n      if (context.currentX === context.x && context.currentY === context.y) {\n        // IMPORTANT: Destroy the stream when scroll is reached ASAP!\n        destroyed.next();\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Scroll recursively until coordinates are reached\n     * @param context\n     * @param destroyed\n     */\n    scrolling(context, destroyed) {\n      return this.step(context).pipe(\n      // Continue while target coordinates hasn't reached yet\n      takeWhile(() => !this.isReached(context, destroyed)), switchMap(() => this.scrolling(context, destroyed)));\n    }\n    /**\n     * Deletes the destroyer function, runs if the smooth scroll has finished or interrupted\n     */\n    onScrollReached(el, resolve, destroyed) {\n      destroyed.complete();\n      this.onGoingScrolls.delete(el);\n      this.zone.run(() => resolve());\n    }\n    /**\n     * Terminates an ongoing smooth scroll\n     */\n    interrupted(el, destroyed) {\n      return merge(fromEvent(el, 'wheel', {\n        passive: true,\n        capture: true\n      }), fromEvent(el, 'touchmove', {\n        passive: true,\n        capture: true\n      }), destroyed).pipe(take(1));\n    }\n    applyScrollToOptions(el, options) {\n      if (!options.duration) {\n        this.scrollElement(el, options.left, options.top);\n        return Promise.resolve();\n      }\n      return new Promise(resolve => {\n        this.zone.runOutsideAngular(() => {\n          // Initialize a destroyer stream, reinitialize it if the element is already being scrolled\n          const destroyed = this.getScrollDestroyerRef(el);\n          const context = {\n            scrollable: el,\n            startTime: this.now(),\n            startX: el.scrollLeft,\n            startY: el.scrollTop,\n            x: options.left == null ? el.scrollLeft : ~~options.left,\n            y: options.top == null ? el.scrollTop : ~~options.top,\n            duration: options.duration,\n            easing: bezier(options.easing.x1, options.easing.y1, options.easing.x2, options.easing.y2)\n          };\n          this.scrolling(context, destroyed).pipe(\n          // Continue until interrupted by another scroll (new smooth scroll / wheel / touchmove)\n          takeUntil(this.interrupted(el, destroyed)),\n          // Once finished, clean up the destroyer stream and resolve the promise\n          finalize(() => this.onScrollReached(el, resolve, destroyed))).subscribe();\n        });\n      });\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param scrollable element\n     * @param customOptions specified the offsets to scroll to.\n     */\n    scrollTo(scrollable, customOptions) {\n      const el = this.getElement(scrollable);\n      const isRtl = getComputedStyle(el).direction === 'rtl';\n      const options = {\n        ...this._defaultOptions,\n        ...customOptions,\n        ...{\n          // Rewrite start & end offsets as right or left offsets.\n          left: customOptions.left == null ? isRtl ? customOptions.end : customOptions.start : customOptions.left,\n          right: customOptions.right == null ? isRtl ? customOptions.start : customOptions.end : customOptions.right\n        }\n      };\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        options.top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n      // Rewrite the right offset as a left offset.\n      if (isRtl) {\n        if (options.left != null) {\n          options.right = el.scrollWidth - el.clientWidth - options.left;\n        }\n        options.left = options.right ? -options.right : options.right;\n      } else {\n        if (options.right != null) {\n          options.left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      return this.applyScrollToOptions(el, options);\n    }\n    /**\n     * Scroll to element by reference or selector\n     */\n    scrollToElement(scrollable, target, customOptions = {}) {\n      const scrollableEl = this.getElement(scrollable);\n      const targetEl = this.getElement(target, scrollableEl);\n      const isRtl = getComputedStyle(scrollableEl).direction === 'rtl';\n      if (!targetEl || !scrollableEl) {\n        return Promise.resolve();\n      }\n      const scrollableRect = scrollableEl.getBoundingClientRect();\n      const targetRect = targetEl.getBoundingClientRect();\n      const options = {\n        ...this._defaultOptions,\n        ...customOptions,\n        ...{\n          top: targetRect.top + scrollableEl.scrollTop - scrollableRect.top + (customOptions.top || 0),\n          // Rewrite start & end offsets as right or left offsets.\n          left: customOptions.left == null ? isRtl ? customOptions.end : customOptions.start : customOptions.left,\n          right: customOptions.right == null ? isRtl ? customOptions.start : customOptions.end : customOptions.right\n        }\n      };\n      if (customOptions.center) {\n        // Calculate the center of the container\n        const containerCenterX = scrollableRect.left + scrollableRect.width / 2;\n        const containerCenterY = scrollableRect.top + scrollableRect.height / 2;\n        // Calculate the target's position relative to the container\n        const targetCenterX = targetRect.left + targetRect.width / 2;\n        const targetCenterY = targetRect.top + targetRect.height / 2;\n        // Calculate the scroll position to center the target element in the container\n        options.left = targetCenterX - containerCenterX + scrollableEl.scrollLeft;\n        options.top = targetCenterY - containerCenterY + scrollableEl.scrollTop;\n        return this.applyScrollToOptions(scrollableEl, options);\n      }\n      if (options.bottom != null) {\n        const bottomEdge = scrollableRect.height - targetRect.height;\n        options.top = targetRect.top + scrollableEl.scrollTop - scrollableRect.top - bottomEdge + (customOptions.bottom || 0);\n      }\n      // Rewrite the right offset as a left offset.\n      if (isRtl) {\n        options.left = targetRect.left - scrollableRect.left + scrollableEl.scrollLeft + (options.left || 0);\n        if (options.right != null) {\n          options.left = targetRect.right - scrollableRect.left + scrollableEl.scrollLeft - scrollableRect.width + (options.right || 0);\n        }\n      } else {\n        options.left = targetRect.left - scrollableRect.left + scrollableEl.scrollLeft + (options.left || 0);\n        if (options.right != null) {\n          options.left = targetRect.right - scrollableRect.left + scrollableEl.scrollLeft - scrollableRect.width + (options.right || 0);\n        }\n      }\n      const computedOptions = {\n        top: options.top,\n        left: options.left,\n        easing: options.easing,\n        duration: options.duration\n      };\n      return this.applyScrollToOptions(scrollableEl, computedOptions);\n    }\n    static {\n      this.ɵfac = function SmoothScrollManager_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SmoothScrollManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SmoothScrollManager,\n        factory: SmoothScrollManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SmoothScrollManager;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SmoothScroll = /*#__PURE__*/(() => {\n  class SmoothScroll {\n    constructor() {\n      this.smoothScroll = inject(SmoothScrollManager);\n      this.element = inject(ElementRef);\n    }\n    scrollTo(options) {\n      return this.smoothScroll.scrollTo(this.element, options);\n    }\n    scrollToElement(target, options) {\n      return this.smoothScroll.scrollToElement(this.element, target, options);\n    }\n    static {\n      this.ɵfac = function SmoothScroll_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SmoothScroll)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SmoothScroll,\n        selectors: [[\"\", \"smoothScroll\", \"\"]],\n        exportAs: [\"smoothScroll\"]\n      });\n    }\n  }\n  return SmoothScroll;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SMOOTH_SCROLL_OPTIONS, SmoothScroll, SmoothScrollManager, provideSmoothScrollOptions };\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, signal, Injectable, InjectionToken, NgZone, input, booleanAttribute, numberAttribute, computed, output, afterRenderEffect, untracked, effect, PLATFORM_ID, Component, ChangeDetectionStrategy, viewChild, Renderer2, ApplicationRef, linkedSignal, contentChild, createComponent, Injector, NgModule, makeEnvironmentProviders } from '@angular/core';\nimport { tap, throttleTime, combineLatest, fromEvent, map, merge, startWith, switchMap, takeUntil, delay, EMPTY, takeWhile, from, of, interval, animationFrameScheduler } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { SmoothScrollManager } from 'ngx-scrollbar/smooth-scroll';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { ContentObserver } from '@angular/cdk/observers';\nconst _c0 = [\"scrollbarButton\", \"\"];\nfunction ScrollbarY_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 4)(1, \"button\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-button \", ctx_r0.cmp.buttonClass(), \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-button \", ctx_r0.cmp.buttonClass(), \"\");\n  }\n}\nfunction ScrollbarX_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 4)(1, \"button\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-button \", ctx_r0.cmp.buttonClass(), \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-button \", ctx_r0.cmp.buttonClass(), \"\");\n  }\n}\nconst _c1 = \"[_nghost-%COMP%]{position:absolute;inset:0;pointer-events:none;min-width:calc(var(--viewport-width) * 1px);min-height:calc(var(--viewport-height) * 1px)}.ng-scrollbar-sticky[_ngcontent-%COMP%]{top:calc(var(--_scrollbar-wrapper-top) * 1px);left:calc(var(--_scrollbar-wrapper-left) * 1px);right:calc(var(--_scrollbar-wrapper-right) * 1px);height:calc(var(--_scrollbar-wrapper-height) * 1px);width:calc(var(--_scrollbar-wrapper-width) * 1px);position:sticky;z-index:100;opacity:var(--_scrollbar-hover-opacity);transition:var(--_scrollbar-opacity-transition);pointer-events:var(--_scrollbar-pointer-events)}.ng-scrollbar-track-wrapper[_ngcontent-%COMP%]{touch-action:none;-webkit-user-select:none;user-select:none;top:var(--_scrollbar-track-top);bottom:var(--_scrollbar-track-bottom);right:var(--_scrollbar-track-right);left:var(--_scrollbar-track-left);transition:var(--INTERNAL-scrollbar-track-wrapper-transition);position:absolute;overflow:hidden;display:flex;place-items:center}.ng-scrollbar-track[_ngcontent-%COMP%]{position:relative;width:100%;height:100%;background-color:var(--INTERNAL-scrollbar-track-color);border-radius:var(--INTERNAL-scrollbar-border-radius);cursor:default;z-index:1;order:2}.ng-scrollbar-thumb[_ngcontent-%COMP%]{box-sizing:border-box;position:absolute;transition:var(--INTERNAL-scrollbar-thumb-transition);border-radius:var(--INTERNAL-scrollbar-border-radius);height:var(--_thumb-height);width:var(--_thumb-width);animation-name:_ngcontent-%COMP%_scrollbarThumbAnimation;animation-duration:1ms;animation-timing-function:linear}@keyframes _ngcontent-%COMP%_scrollbarThumbAnimation{0%{translate:var(--_scrollbar-thumb-transform-from)}to{translate:var(--_scrollbar-thumb-transform-to)}}\";\nfunction Scrollbars_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"scrollbar-y\");\n  }\n}\nfunction Scrollbars_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"scrollbar-x\");\n  }\n}\nconst _c2 = [\"contentWrapper\"];\nconst _c3 = [\"*\"];\nconst _c4 = [\"externalViewport\", \"\"];\nconst _c5 = \"[_nghost-%COMP%]{display:block;position:relative;max-height:100%;max-width:100%;--INTERNAL-scrollbar-border-radius: var(--scrollbar-border-radius, 0px);--INTERNAL-scrollbar-thickness: var(--scrollbar-thickness, 5);--INTERNAL-scrollbar-offset: var(--scrollbar-offset, 0);--INTERNAL-scrollbar-track-wrapper-transition: var(--scrollbar-track-wrapper-transition, width 60ms linear, height 60ms linear);--INTERNAL-scrollbar-track-color: var(--scrollbar-track-color, transparent);--INTERNAL-scrollbar-thumb-color: var(--scrollbar-thumb-color, rgb(0 0 0 / 20%));--INTERNAL-scrollbar-thumb-hover-color: var(--scrollbar-thumb-hover-color, var(--INTERNAL-scrollbar-thumb-color));--INTERNAL-scrollbar-hover-thickness: var(--scrollbar-hover-thickness, var(--INTERNAL-scrollbar-thickness));--INTERNAL-scrollbar-thumb-transition: var(--scrollbar-thumb-transition, none);--INTERNAL-scrollbar-thumb-min-size: var(--scrollbar-thumb-min-size, 20);--INTERNAL-scrollbar-button-color: var(--scrollbar-button-color, var(--INTERNAL-scrollbar-thumb-color));--INTERNAL-scrollbar-button-hover-color: var(--scrollbar-button-hover-color, var(--INTERNAL-scrollbar-button-color));--INTERNAL-scrollbar-button-active-color: var(--scrollbar-button-active-color, var(--INTERNAL-scrollbar-button-hover-color));--INTERNAL-scrollbar-button-fill: var(--scrollbar-button-fill, white);--INTERNAL-scrollbar-button-hover-fill: var(--scrollbar-button-hover-fill, var(--INTERNAL-scrollbar-button-fill));--INTERNAL-scrollbar-button-active-fill: var(--scrollbar-button-active-fill, var(--INTERNAL-scrollbar-button-hover-fill));--INTERNAL-scrollbar-button-size: var(--scrollbar-button-size, 20px);--INTERNAL-scrollbar-hover-opacity-transition-enter-duration: var(--scrollbar-hover-opacity-transition-enter-duration, 0);--INTERNAL-scrollbar-hover-opacity-transition-leave-duration: var(--scrollbar-hover-opacity-transition-leave-duration, .4s);--INTERNAL-scrollbar-hover-opacity-transition-leave-delay: var(--scrollbar-hover-opacity-transition-leave-delay, 1s);--INTERNAL-scrollbar-overscroll-behavior: var(--scrollbar-overscroll-behavior, initial);--INTERNAL-scrollbar-mobile-overscroll-behavior: var(--scrollbar-mobile-overscroll-behavior, none);--_scrollbar-thickness: calc(var(--INTERNAL-scrollbar-thickness) + var(--INTERNAL-scrollbar-offset) * 2);--_scrollbar-pointer-events: auto;--_scrollbar-offset-px: calc(var(--INTERNAL-scrollbar-offset) * 1px);--_scrollbar-thickness-px: calc(var(--INTERNAL-scrollbar-thickness) * 1px);--_scrollbar-hover-thickness-px: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_viewport-padding-top: 0;--_viewport-padding-bottom: 0;--_viewport-padding-left: 0;--_viewport-padding-right: 0;--_horizontal-thumb-display: block;--_vertical-thumb-display: block;--_viewport-overflow: auto;--_viewport-pointer-events: auto;--_thumb-x-color: var(--INTERNAL-scrollbar-thumb-color);--_thumb-y-color: var(--INTERNAL-scrollbar-thumb-color);--_track-y-thickness: var(--_scrollbar-thickness-px);--_track-x-thickness: var(--_scrollbar-thickness-px);--_viewport-overscroll-behavior: var(--INTERNAL-scrollbar-overscroll-behavior);--_scrollbar-content-width: fit-content}[_nghost-%COMP%]{--_spacer-width: var(--spacer-width);--_spacer-height: var(--spacer-height);--_vertical-top: var(--_scrollbar-offset-px);--_vertical-bottom: var(--_scrollbar-offset-px);--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-offset-px);--_horizontal-top: initial;--_horizontal-bottom: var(--_scrollbar-offset-px);--_scrollbar-wrapper-x-top: calc(var(--viewport-height) - var(--_scrollbar-thickness));--reached-offset: 1px;--reached-offset-top: var(--reached-offset);--reached-offset-bottom: var(--reached-offset);--reached-offset-start: var(--reached-offset);--reached-offset-end: var(--reached-offset);--dropped-offset: 1px;--dropped-offset-top: var(--dropped-offset);--dropped-offset-bottom: var(--dropped-offset);--dropped-offset-start: var(--dropped-offset);--dropped-offset-end: var(--dropped-offset);--_viewport_scroll-timeline: unset;--_animation-timeline-y: unset;--_scrollbar-y-thumb-transform-to-value: unset;--_scrollbar-x-thumb-transform-to-value: unset;--_scrollbar-thumb-transform-from: unset;--_scrollbar-thumb-transform-to: unset}.ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{min-height:100%;min-width:100%;height:100%;max-height:100%;max-width:100%}.ng-scroll-viewport[_nghost-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{position:relative;overflow:var(--_viewport-overflow);scroll-timeline:var(--_viewport_scroll-timeline);box-sizing:border-box!important;-webkit-overflow-scrolling:touch;will-change:scroll-position;-webkit-user-select:var(--_viewport-user-select);user-select:var(--_viewport-user-select);overscroll-behavior:var(--_viewport-overscroll-behavior);pointer-events:var(--_viewport-pointer-events)}.ng-scroll-viewport[_nghost-%COMP%] > .ng-scroll-content[_ngcontent-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport>.ng-scroll-content{width:var(--_scrollbar-content-width);z-index:1;min-width:100%;min-height:100%;contain:content;padding:var(--_viewport-padding-top, 0) var(--_viewport-padding-right, 0) var(--_viewport-padding-bottom, 0) var(--_viewport-padding-left, 0)}[appearance=native][_nghost-%COMP%]{--_spacer-width: calc(var(--spacer-width) + var(--_scrollbar-thickness));--_spacer-height: calc(var(--spacer-height) + var(--_scrollbar-thickness))}.ng-scroll-viewport[_nghost-%COMP%] > .ng-scroll-spacer[_ngcontent-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport>.ng-scroll-spacer{position:relative;width:calc(var(--_spacer-width) * 1px);height:calc(var(--_spacer-height) * 1px)}.ng-scroll-viewport[_nghost-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{scrollbar-width:none!important}.ng-scroll-viewport[_nghost-%COMP%]::-webkit-scrollbar, .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport::-webkit-scrollbar{display:none!important}[position=invertX][_nghost-%COMP%], [position=invertAll][_nghost-%COMP%]{--_horizontal-top: var(--_scrollbar-offset-px);--_horizontal-bottom: initial;--_scrollbar-wrapper-x-top: 0}[dir=ltr][_nghost-%COMP%]{--_scrollbar-wrapper-y-right: initial;--_vertical-right: var(--_scrollbar-offset-px);--_vertical-left: initial;--_scrollbar-wrapper-y-left: calc(var(--viewport-width) - var(--_scrollbar-thickness))}[dir=ltr][position=invertY][_nghost-%COMP%], [dir=ltr][position=invertAll][_nghost-%COMP%]{--_vertical-left: var(--_scrollbar-offset-px);--_vertical-right: initial;--_scrollbar-wrapper-y-left: 0}[dir=rtl][_nghost-%COMP%]{--_scrollbar-wrapper-y-left: initial;--_vertical-left: var(--_scrollbar-offset-px);--_vertical-right: initial;--_scrollbar-wrapper-y-right: calc(var(--viewport-width) - var(--_scrollbar-thickness))}[dir=rtl][position=invertY][_nghost-%COMP%], [dir=rtl][position=invertAll][_nghost-%COMP%]{--_vertical-right: var(--_scrollbar-offset-px);--_vertical-left: initial;--_scrollbar-wrapper-y-right: 0}[verticalUsed=true][horizontalUsed=true][_nghost-%COMP%]{--_scrollbar-thickness-margin: calc(var(--INTERNAL-scrollbar-thickness) + var(--INTERNAL-scrollbar-offset) * 3);--_scrollbar-thickness-margin-px: calc(var(--_scrollbar-thickness-margin) * 1px)}[horizontalUsed=true][_nghost-%COMP%]{--_vertical-top: var(--_scrollbar-offset-px);--_vertical-bottom: var(--_scrollbar-thickness-margin-px)}[horizontalUsed=true][position=invertX][_nghost-%COMP%], [horizontalUsed=true][position=invertAll][_nghost-%COMP%]{--_vertical-top: var(--_scrollbar-thickness-margin-px);--_vertical-bottom: var(--_scrollbar-offset-px)}[verticalUsed=true][dir=ltr][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-thickness-margin-px)}[verticalUsed=true][dir=rtl][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-thickness-margin-px);--_horizontal-right: var(--_scrollbar-offset-px)}[verticalUsed=true][position=invertY][dir=ltr][_nghost-%COMP%], [verticalUsed=true][position=invertAll][dir=ltr][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-thickness-margin-px);--_horizontal-right: var(--_scrollbar-offset-px)}[verticalUsed=true][position=invertY][dir=rtl][_nghost-%COMP%], [verticalUsed=true][position=invertAll][dir=rtl][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-thickness-margin-px)}[appearance=native][verticalUsed=true][dir=ltr][_nghost-%COMP%]{--_viewport-padding-left: 0;--_viewport-padding-right: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][verticalUsed=true][dir=rtl][_nghost-%COMP%]{--_viewport-padding-left: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-right: 0}[appearance=native][verticalUsed=true][position=invertY][dir=ltr][_nghost-%COMP%], [appearance=native][verticalUsed=true][position=invertAll][dir=ltr][_nghost-%COMP%]{--_viewport-padding-left: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-right: 0}[appearance=native][verticalUsed=true][position=invertY][dir=rtl][_nghost-%COMP%], [appearance=native][verticalUsed=true][position=invertAll][dir=rtl][_nghost-%COMP%]{--_viewport-padding-left: 0;--_viewport-padding-right: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][horizontalUsed=true][_nghost-%COMP%]{--_viewport-padding-top: 0;--_viewport-padding-bottom: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][horizontalUsed=true][position=invertX][_nghost-%COMP%], [appearance=native][horizontalUsed=true][position=invertAll][_nghost-%COMP%]{--_viewport-padding-top: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-bottom: 0}[visibility=hover][_nghost-%COMP%]{--_scrollbar-hover-opacity: 0;--_scrollbar-opacity-transition: opacity var(--INTERNAL-scrollbar-hover-opacity-transition-leave-duration) var(--INTERNAL-scrollbar-hover-opacity-transition-leave-delay)}[visibility=hover][_nghost-%COMP%]:hover, [visibility=hover][_nghost-%COMP%]:active, [visibility=hover][_nghost-%COMP%]:focus{--_scrollbar-hover-opacity: 1;--_scrollbar-opacity-transition: opacity var(--INTERNAL-scrollbar-hover-opacity-transition-enter-duration)}[dir=ltr][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [dir=ltr][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=start]{left:0;right:unset}[dir=ltr][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end], [dir=ltr][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=end]{right:0;left:unset}[dir=rtl][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [dir=rtl][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=start]{right:0;left:unset}[dir=rtl][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end], [dir=rtl][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=end]{left:0;right:unset}[_nghost-%COMP%]     .ng-scroll-reached-wrapper, [_nghost-%COMP%]     .ng-scroll-dropped-wrapper, [_nghost-%COMP%]     .scroll-reached-trigger-element, [_nghost-%COMP%]     .scroll-dropped-trigger-element{position:absolute;-webkit-user-select:none;user-select:none;pointer-events:none;z-index:-9999}[_nghost-%COMP%]     .ng-scroll-reached-wrapper, [_nghost-%COMP%]     .ng-scroll-dropped-wrapper{visibility:hidden;inset:0;min-width:calc(var(--viewport-width) * 1px);min-height:calc(var(--viewport-height) * 1px)}[_nghost-%COMP%]     [isHorizontallyScrollable=false] .scroll-reached-trigger-element[trigger=end], [_nghost-%COMP%]     [isHorizontallyScrollable=false] .scroll-dropped-trigger-element[trigger=end]{display:none}[_nghost-%COMP%]     [isVerticallyScrollable=false] .scroll-reached-trigger-element[trigger=bottom], [_nghost-%COMP%]     [isVerticallyScrollable=false] .scroll-dropped-trigger-element[trigger=bottom]{display:none}[_nghost-%COMP%]     .scroll-reached-trigger-element{background:red}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=top], [_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=bottom]{left:0;right:0}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end]{top:0;bottom:0}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=top]{top:0;height:var(--reached-offset-top)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=bottom]{bottom:0;height:var(--reached-offset-bottom)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start]{width:var(--reached-offset-start)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end]{width:var(--reached-offset-end)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[_ngcontent-%COMP%]{background:#00f}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=top][_ngcontent-%COMP%], [_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=bottom][_ngcontent-%COMP%]{left:0;right:0}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=start][_ngcontent-%COMP%], [_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=end][_ngcontent-%COMP%]{top:0;bottom:0}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=top][_ngcontent-%COMP%]{top:0;height:var(--dropped-offset-top)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=bottom][_ngcontent-%COMP%]{bottom:0;height:var(--dropped-offset-bottom)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=start][_ngcontent-%COMP%]{width:var(--dropped-offset-start)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=end][_ngcontent-%COMP%]{width:var(--dropped-offset-end)}[verticalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerY;--_animation-timeline-y: --scrollerY;--_viewport_scroll-timeline: --scrollerY y}[horizontalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerX;--_animation-timeline-x: --scrollerX;--_viewport_scroll-timeline: --scrollerX x}[verticalUsed=true][horizontalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerX, --scrollerY;--_viewport_scroll-timeline: --scrollerX x, --scrollerY y}[orientation=vertical][_nghost-%COMP%]{--_viewport-overflow: hidden auto;--_scrollbar-content-width: unset}[orientation=horizontal][_nghost-%COMP%]{--_viewport-overflow: auto hidden}[disableInteraction=true][_nghost-%COMP%]{--_viewport-pointer-events: none;--_scrollbar-pointer-events: none}[isVerticallyScrollable=false][_nghost-%COMP%]{--_vertical-thumb-display: none}[isHorizontallyScrollable=false][_nghost-%COMP%]{--_horizontal-thumb-display: none}[dragging=x][_nghost-%COMP%], [dragging=y][_nghost-%COMP%]{--_viewport-user-select: none}[dragging=x][_nghost-%COMP%]{--_track-x-thickness: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_thumb-x-color: var(var(--INTERNAL-scrollbar-thumb-min-size))}[dragging=y][_nghost-%COMP%]{--_track-y-thickness: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_thumb-y-color: var(var(--INTERNAL-scrollbar-thumb-min-size))}[mobile=true][_nghost-%COMP%]{--_viewport-overscroll-behavior: var(--INTERNAL-scrollbar-mobile-overscroll-behavior)}\";\nlet ScrollViewport = /*#__PURE__*/(() => {\n  class ScrollViewport {\n    constructor() {\n      this.nativeElement = inject(ElementRef).nativeElement;\n    }\n    static {\n      this.ɵfac = function ScrollViewport_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollViewport)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ScrollViewport,\n        selectors: [[\"\", \"scrollViewport\", \"\"]]\n      });\n    }\n  }\n  return ScrollViewport;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction preventSelection(doc) {\n  return tap(() => doc.onselectstart = () => false);\n}\nfunction enableSelection(doc) {\n  return tap(() => doc.onselectstart = null);\n}\nfunction stopPropagation() {\n  return tap(e => {\n    // Have to prevent default to avoid unexpected movement whe you grab object beneath scrollbar #476\n    // https://github.com/MurhafSousli/ngx-scrollbar/issues/476\n    e.preventDefault();\n    e.stopPropagation();\n  });\n}\nfunction getThrottledStream(stream, duration) {\n  return stream.pipe(throttleTime(duration || 0, null, {\n    leading: false,\n    trailing: true\n  }));\n}\nvar ViewportClasses = /*#__PURE__*/function (ViewportClasses) {\n  ViewportClasses[\"Viewport\"] = \"ng-scroll-viewport\";\n  ViewportClasses[\"Content\"] = \"ng-scroll-content\";\n  ViewportClasses[\"Spacer\"] = \"ng-scroll-spacer\";\n  return ViewportClasses;\n}(ViewportClasses || {});\n/**\n * Class representing a viewport adapter.\n * Provides methods and properties to interact with a viewport and its content.\n */\nlet ViewportAdapter = /*#__PURE__*/(() => {\n  class ViewportAdapter {\n    constructor() {\n      /*\n       * A signal that indicates when viewport adapter is initialized\n       */\n      this.initialized = signal(false);\n    }\n    /** Viewport clientHeight */\n    get offsetHeight() {\n      return this.nativeElement.offsetHeight;\n    }\n    /** Viewport clientWidth */\n    get offsetWidth() {\n      return this.nativeElement.offsetWidth;\n    }\n    /** Viewport scrollTop */\n    get scrollTop() {\n      return this.nativeElement.scrollTop;\n    }\n    /** Viewport scrollLeft */\n    get scrollLeft() {\n      return this.nativeElement.scrollLeft;\n    }\n    /** Content height */\n    get contentHeight() {\n      return this.contentWrapperElement.offsetHeight;\n    }\n    /** Content width */\n    get contentWidth() {\n      return this.contentWrapperElement.offsetWidth;\n    }\n    /** The remaining vertical scrollable distance. */\n    get scrollMaxX() {\n      return this.contentWidth - this.offsetWidth;\n    }\n    /** The vertical remaining scrollable distance */\n    get scrollMaxY() {\n      return this.contentHeight - this.offsetHeight;\n    }\n    /**\n     * Initialize viewport\n     */\n    init(viewportElement, contentElement, spacerElement) {\n      // Add viewport class\n      viewportElement.classList.add(ViewportClasses.Viewport);\n      this.nativeElement = viewportElement;\n      // Add content wrapper class\n      contentElement.classList.add(ViewportClasses.Content);\n      // When integrating the scrollbar with virtual scroll, the content wrapper will have fake size,\n      // and a spacer element will have the real size\n      // Therefore, if spaceElement is provided, it will be observed instead of the content wrapper\n      if (spacerElement) {\n        spacerElement.classList.add(ViewportClasses.Spacer);\n        this.contentWrapperElement = spacerElement;\n      } else {\n        // If spacer is not provided, set it as the content wrapper\n        this.contentWrapperElement = contentElement;\n      }\n      this.initialized.set(true);\n    }\n    reset() {\n      this.nativeElement = null;\n      this.contentWrapperElement = null;\n      this.initialized.set(false);\n    }\n    /**\n     * Scrolls the viewport vertically to the specified value.\n     */\n    scrollYTo(value) {\n      this.nativeElement.scrollTop = value;\n    }\n    /**\n     * Scrolls the viewport horizontally to the specified value.\n     */\n    scrollXTo(value) {\n      this.nativeElement.scrollLeft = value;\n    }\n    static {\n      this.ɵfac = function ViewportAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ViewportAdapter)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ViewportAdapter,\n        factory: ViewportAdapter.ɵfac\n      });\n    }\n  }\n  return ViewportAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to query for a `NgScrollbar`.\n * Used primarily to avoid circular imports.\n */\nconst NG_SCROLLBAR = new InjectionToken('NG_SCROLLBAR');\nconst defaultOptions = {\n  trackClass: '',\n  thumbClass: '',\n  buttonClass: '',\n  orientation: 'auto',\n  appearance: 'native',\n  visibility: 'native',\n  position: 'native',\n  trackScrollDuration: 50,\n  sensorThrottleTime: 0,\n  disableSensor: false,\n  disableInteraction: false,\n  buttons: false,\n  hoverOffset: false\n};\n// This CDN link for a modified version of the polyfill to fix firefox bug https://github.com/MurhafSousli/ngx-scrollbar/issues/615\nconst defaultScrollTimelinePolyfill = 'https://cdn.statically.io/gist/MurhafSousli/c852b6a672069396953f06ddd4b64620/raw/ef55db72e2abb7bc002ed79f4ad4cf408bfdb72f/scroll-timeline-lite.js';\nvar ScrollbarUpdateReason = /*#__PURE__*/function (ScrollbarUpdateReason) {\n  ScrollbarUpdateReason[\"AfterInit\"] = \"AfterInit\";\n  ScrollbarUpdateReason[\"Resized\"] = \"ResizeObserver\";\n  return ScrollbarUpdateReason;\n}(ScrollbarUpdateReason || {});\nconst NG_SCROLLBAR_OPTIONS = new InjectionToken('NG_SCROLLBAR_OPTIONS', {\n  providedIn: 'root',\n  factory: () => defaultOptions\n});\nconst NG_SCROLLBAR_POLYFILL = new InjectionToken('NG_SCROLLBAR_POLYFILL', {\n  providedIn: 'root',\n  factory: () => defaultScrollTimelinePolyfill\n});\nfunction filterResizeEntries(entries, target) {\n  return entries.filter(entry => entry.target === target)[0]?.contentRect;\n}\nlet NgScrollbarCore = /*#__PURE__*/(() => {\n  class NgScrollbarCore {\n    constructor() {\n      /** Global options */\n      this.options = inject(NG_SCROLLBAR_OPTIONS);\n      this.sharedResizeObserver = inject(SharedResizeObserver);\n      this.zone = inject(NgZone);\n      this.platform = inject(Platform);\n      /** A flag that indicates if the platform is mobile */\n      this.isMobile = this.platform.IOS || this.platform.ANDROID;\n      this.dir = inject(Directionality);\n      this.smoothScroll = inject(SmoothScrollManager);\n      /** Viewport adapter instance */\n      this.viewport = inject(ViewportAdapter, {\n        self: true\n      });\n      this.nativeElement = inject(ElementRef).nativeElement;\n      /**\n       * Indicates if the direction is 'ltr' or 'rtl'\n       */\n      this.direction = toSignal(this.dir.change, {\n        initialValue: this.dir.value\n      });\n      /**\n       * Indicates when scrollbar thumb is being dragged\n       */\n      this.dragging = signal('none');\n      /**\n       * Sets the supported scroll track of the viewport, there are 3 options:\n       *\n       * - `vertical` Use both vertical and horizontal scrollbar\n       * - `horizontal` Use both vertical and horizontal scrollbar\n       * - `auto` Use both vertical and horizontal scrollbar\n       */\n      this.orientation = input(this.options.orientation);\n      /**\n       * When to show the scrollbar, and there are 3 options:\n       *\n       * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\n       * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\n       * - `always` Scrollbars are always shown even if the viewport is not scrollable\n       */\n      this.visibility = input(this.options.visibility);\n      /** Show scrollbar buttons */\n      this.buttons = input(this.options.buttons, {\n        transform: booleanAttribute\n      });\n      /** Disables scrollbar interaction like dragging thumb and jumping by track click */\n      this.disableInteraction = input(this.options.disableInteraction, {\n        transform: booleanAttribute\n      });\n      /** Whether ResizeObserver is disabled */\n      this.disableSensor = input(this.options.disableSensor, {\n        transform: booleanAttribute\n      });\n      /** Throttle interval for detecting changes via ResizeObserver */\n      this.sensorThrottleTime = input(this.options.sensorThrottleTime, {\n        transform: numberAttribute\n      });\n      /** A flag used to activate hover effect on the offset area around the scrollbar */\n      this.hoverOffset = input(this.options.hoverOffset, {\n        transform: booleanAttribute\n      });\n      /** Viewport dimension */\n      this.viewportDimension = signal({\n        width: 0,\n        height: 0\n      });\n      /** Content dimension */\n      this.contentDimension = signal({\n        width: 0,\n        height: 0\n      });\n      this.state = computed(() => {\n        let verticalUsed = false;\n        let horizontalUsed = false;\n        let isVerticallyScrollable = false;\n        let isHorizontallyScrollable = false;\n        const orientation = this.orientation();\n        const visibility = this.visibility();\n        const viewportDimensions = this.viewportDimension();\n        const contentDimensions = this.contentDimension();\n        // Check if vertical scrollbar should be displayed\n        if (orientation === 'auto' || orientation === 'vertical') {\n          isVerticallyScrollable = contentDimensions.height > viewportDimensions.height;\n          verticalUsed = visibility === 'visible' || isVerticallyScrollable;\n        }\n        // Check if horizontal scrollbar should be displayed\n        if (orientation === 'auto' || orientation === 'horizontal') {\n          isHorizontallyScrollable = contentDimensions.width > viewportDimensions.width;\n          horizontalUsed = visibility === 'visible' || isHorizontallyScrollable;\n        }\n        return {\n          verticalUsed,\n          horizontalUsed,\n          isVerticallyScrollable,\n          isHorizontallyScrollable\n        };\n      });\n      this.isVerticallyScrollable = computed(() => this.state().isVerticallyScrollable);\n      this.isHorizontallyScrollable = computed(() => this.state().isHorizontallyScrollable);\n      this.verticalUsed = computed(() => this.state().verticalUsed);\n      this.horizontalUsed = computed(() => this.state().horizontalUsed);\n      /** Scroll duration when the scroll track is clicked */\n      this.trackScrollDuration = input(this.options.trackScrollDuration, {\n        transform: numberAttribute\n      });\n      /**\n       *  Sets the appearance of the scrollbar, there are 2 options:\n       *\n       * - `native` (default) scrollbar space will be reserved just like with native scrollbar.\n       * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\n       */\n      this.appearance = input(this.options.appearance);\n      /**\n       * Sets the position of each scrollbar, there are 4 options:\n       *\n       * - `native` (Default) Use the default position like in native scrollbar.\n       * - `invertY` Inverts vertical scrollbar position\n       * - `invertX` Inverts Horizontal scrollbar position\n       * - `invertAll` Inverts both scrollbar positions\n       */\n      this.position = input(this.options.position);\n      /** A class forwarded to the scrollbar track element */\n      this.trackClass = input(this.options.trackClass);\n      /** A class forwarded to the scrollbar thumb element */\n      this.thumbClass = input(this.options.thumbClass);\n      /** A class forwarded to the scrollbar button element */\n      this.buttonClass = input(this.options.thumbClass);\n      /** Steam that emits when scrollbar is initialized */\n      this.afterInit = output();\n      /** Steam that emits when scrollbar is updated */\n      this.afterUpdate = output();\n      let resizeSub$;\n      let hasInitialized;\n      afterRenderEffect({\n        earlyRead: onCleanup => {\n          const disableSensor = this.disableSensor();\n          const throttleDuration = this.sensorThrottleTime();\n          const viewportInit = this.viewport.initialized();\n          untracked(() => {\n            if (viewportInit) {\n              // If resize sensor is disabled, update manually the first time\n              if (disableSensor) {\n                requestAnimationFrame(() => this.update(ScrollbarUpdateReason.AfterInit));\n              } else {\n                // Observe size changes for viewport and content wrapper\n                this.zone.runOutsideAngular(() => {\n                  resizeSub$ = getThrottledStream(combineLatest([this.sharedResizeObserver.observe(this.viewport.nativeElement), this.sharedResizeObserver.observe(this.viewport.contentWrapperElement)]), throttleDuration).subscribe(() => {\n                    // After deep investigation, it appears that setting the dimension directly from the element properties\n                    // is much faster than to set them from resize callback values\n                    this.zone.run(() => {\n                      this.updateDimensions();\n                      if (hasInitialized) {\n                        this.afterUpdate.emit();\n                      } else {\n                        this.afterInit.emit();\n                      }\n                      hasInitialized = true;\n                    });\n                  });\n                });\n              }\n            }\n            onCleanup(() => resizeSub$?.unsubscribe());\n          });\n        }\n      });\n    }\n    /**\n     * Manual update\n     */\n    update(reason) {\n      this.updateDimensions();\n      if (reason === ScrollbarUpdateReason.AfterInit) {\n        this.afterInit.emit();\n      } else {\n        this.afterUpdate.emit();\n      }\n    }\n    /**\n     * Smooth scroll functions\n     */\n    scrollTo(options) {\n      return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\n    }\n    /**\n     * Scroll to element by reference or selector\n     */\n    scrollToElement(target, options) {\n      return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\n    }\n    updateDimensions() {\n      this.viewportDimension.set({\n        width: this.viewport.offsetWidth,\n        height: this.viewport.offsetHeight\n      });\n      this.contentDimension.set({\n        width: this.viewport.contentWidth,\n        height: this.viewport.contentHeight\n      });\n    }\n    static {\n      this.ɵfac = function NgScrollbarCore_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgScrollbarCore)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgScrollbarCore,\n        hostVars: 22,\n        hostBindings: function NgScrollbarCore_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"verticalUsed\", ctx.verticalUsed())(\"horizontalUsed\", ctx.horizontalUsed())(\"isVerticallyScrollable\", ctx.isVerticallyScrollable())(\"isHorizontallyScrollable\", ctx.isHorizontallyScrollable())(\"mobile\", ctx.isMobile)(\"dir\", ctx.direction())(\"position\", ctx.position())(\"dragging\", ctx.dragging())(\"appearance\", ctx.appearance())(\"visibility\", ctx.visibility())(\"orientation\", ctx.orientation())(\"disableInteraction\", ctx.disableInteraction());\n            i0.ɵɵstyleProp(\"--content-height\", ctx.contentDimension().height)(\"--content-width\", ctx.contentDimension().width)(\"--viewport-height\", ctx.viewportDimension().height)(\"--viewport-width\", ctx.viewportDimension().width);\n            i0.ɵɵclassProp(\"ng-scrollbar\", true);\n          }\n        },\n        inputs: {\n          orientation: [1, \"orientation\"],\n          visibility: [1, \"visibility\"],\n          buttons: [1, \"buttons\"],\n          disableInteraction: [1, \"disableInteraction\"],\n          disableSensor: [1, \"disableSensor\"],\n          sensorThrottleTime: [1, \"sensorThrottleTime\"],\n          hoverOffset: [1, \"hoverOffset\"],\n          trackScrollDuration: [1, \"trackScrollDuration\"],\n          appearance: [1, \"appearance\"],\n          position: [1, \"position\"],\n          trackClass: [1, \"trackClass\"],\n          thumbClass: [1, \"thumbClass\"],\n          buttonClass: [1, \"buttonClass\"]\n        },\n        outputs: {\n          afterInit: \"afterInit\",\n          afterUpdate: \"afterUpdate\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_SCROLLBAR,\n          useExisting: NgScrollbarCore\n        }])]\n      });\n    }\n  }\n  return NgScrollbarCore;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SCROLLBAR_CONTROL = new InjectionToken('SCROLLBAR_CONTROL');\nlet ScrollbarAdapter = /*#__PURE__*/(() => {\n  class ScrollbarAdapter {\n    constructor() {\n      this.trackSize = signal(0);\n      // Host component reference\n      this.cmp = inject(NG_SCROLLBAR);\n    }\n    static {\n      this.ɵfac = function ScrollbarAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollbarAdapter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ScrollbarAdapter\n      });\n    }\n  }\n  return ScrollbarAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PointerEventsAdapter = /*#__PURE__*/(() => {\n  class PointerEventsAdapter {\n    constructor() {\n      // Reference to the NgScrollbar component\n      this.cmp = inject(NG_SCROLLBAR);\n      // Reference to the Scrollbar control component\n      this.control = inject(SCROLLBAR_CONTROL);\n      // Reference to the Document element\n      this.document = inject(DOCUMENT);\n      // Reference to angular zone\n      this.zone = inject(NgZone);\n      // The native element of the directive\n      this.nativeElement = inject(ElementRef).nativeElement;\n      effect(onCleanup => {\n        const disableInteraction = this.cmp.disableInteraction();\n        untracked(() => {\n          if (!disableInteraction) {\n            this.zone.runOutsideAngular(() => {\n              this._pointerEventsSub = this.pointerEvents.subscribe();\n            });\n          }\n          onCleanup(() => this._pointerEventsSub?.unsubscribe());\n        });\n      });\n    }\n    static {\n      this.ɵfac = function PointerEventsAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PointerEventsAdapter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: PointerEventsAdapter\n      });\n    }\n  }\n  return PointerEventsAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TrackAdapter = /*#__PURE__*/(() => {\n  class TrackAdapter extends PointerEventsAdapter {\n    // Returns viewport client size\n    get viewportSize() {\n      return this.cmp.viewport[this.control.sizeProperty];\n    }\n    // Get track client rect\n    get clientRect() {\n      return this.nativeElement.getBoundingClientRect();\n    }\n    // Scrollbar track offset\n    get offset() {\n      return this.clientRect[this.control.rectOffsetProperty];\n    }\n    // Scrollbar track length\n    get size() {\n      // Noticed that clientHeight is evaluated before getClientRect.height,\n      // causing a wrong track size when integrated in dropdown integration\n      return this.nativeElement[this.control.sizeProperty];\n    }\n    // Observable for track dragging events\n    get pointerEvents() {\n      // Observable streams for pointer events\n      const pointerDown$ = fromEvent(this.nativeElement, 'pointerdown').pipe(stopPropagation(), preventSelection(this.document));\n      const pointerUp$ = fromEvent(this.document, 'pointerup', {\n        passive: true\n      }).pipe(enableSelection(this.document));\n      const pointerEnter$ = fromEvent(this.nativeElement, 'pointerover', {\n        passive: true\n      }).pipe(\n      // When mouse is out and enters again, must set the current position first\n      tap(e => this.currMousePosition = e[this.control.offsetProperty]), map(() => true));\n      const pointerLeave$ = fromEvent(this.nativeElement, 'pointerout', {\n        passive: true\n      }).pipe(map(() => false));\n      const pointerOver$ = merge(pointerEnter$, pointerLeave$).pipe(startWith(true));\n      // Keep track of current mouse location while dragging\n      const pointerMove$ = fromEvent(this.nativeElement, 'pointermove', {\n        passive: true\n      }).pipe(tap(e => this.currMousePosition = e[this.control.offsetProperty]));\n      return pointerDown$.pipe(switchMap(startEvent => {\n        // Track pointer location while dragging\n        pointerMove$.pipe(takeUntil(pointerUp$)).subscribe();\n        return this.onTrackFirstClick(startEvent).pipe(delay(200), switchMap(() => {\n          // Otherwise, activate pointermove and pointerout events and switch to ongoing scroll calls\n          return pointerOver$.pipe(switchMap(over => {\n            const currDirection = this.getScrollDirection(this.currMousePosition);\n            const sameDirection = this.scrollDirection === currDirection;\n            // If mouse is out the track pause the scroll calls, otherwise keep going\n            return over && sameDirection ? this.onTrackOngoingMousedown() : EMPTY;\n          }));\n        }), takeUntil(pointerUp$));\n      }));\n    }\n    constructor() {\n      afterRenderEffect({\n        earlyRead: () => {\n          this.cmp.viewportDimension();\n          this.cmp.contentDimension();\n          untracked(() => {\n            this.control.trackSize.set(this.size);\n            if (!this.size) {\n              // In some rare cases size could be 0 due to first render, use animation frame to give the track element time to render\n              requestAnimationFrame(() => this.control.trackSize.set(this.size));\n            }\n          });\n        }\n      });\n      super();\n    }\n    /**\n     *  Callback when mouse is first clicked on the track\n     */\n    onTrackFirstClick(e) {\n      // Initialize variables and determine scroll direction\n      this.currMousePosition = e[this.control.offsetProperty];\n      this.scrollDirection = this.getScrollDirection(this.currMousePosition);\n      this.scrollMax = this.control.viewportScrollMax;\n      return this.scrollTo(this.nextStep());\n    }\n    nextStep() {\n      // Check which direction should the scroll go (forward or backward)\n      if (this.scrollDirection === 'forward') {\n        // Scroll forward\n        const scrollForwardIncrement = this.getScrollForwardStep();\n        // Check if the incremental position is bigger than the scroll max\n        if (scrollForwardIncrement >= this.scrollMax) {\n          return this.scrollMax;\n        }\n        return scrollForwardIncrement;\n      }\n      // Scroll backward\n      const scrollBackwardIncrement = this.getScrollBackwardStep();\n      if (scrollBackwardIncrement <= 0) {\n        return 0;\n      }\n      return scrollBackwardIncrement;\n    }\n    /**\n     * Callback when mouse is still down on the track\n     * Incrementally scrolls towards target position until reached\n     */\n    onTrackOngoingMousedown() {\n      const position = this.nextStep();\n      return this.scrollTo(position).pipe(takeWhile(() => !this.isReached(position)), switchMap(() => this.onTrackOngoingMousedown()));\n    }\n    /**\n     * Returns a flag that determines whether the scroll from the given position is the final step or not\n     */\n    isReached(position) {\n      if (this.scrollDirection === 'forward') {\n        return position >= this.scrollMax;\n      }\n      return position <= 0;\n    }\n    static {\n      this.ɵfac = function TrackAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TrackAdapter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: TrackAdapter,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return TrackAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TrackXDirective = /*#__PURE__*/(() => {\n  class TrackXDirective extends TrackAdapter {\n    get contentSize() {\n      return this.cmp.viewport.contentWidth;\n    }\n    constructor() {\n      effect(() => {\n        if (this.cmp.direction() === 'rtl') {\n          this.getCurrPosition = () => {\n            const offset = this.contentSize - this.viewportSize - this.control.viewportScrollOffset;\n            return offset * this.size / this.contentSize;\n          };\n          this.getScrollDirection = position => {\n            return position < this.getCurrPosition() ? 'forward' : 'backward';\n          };\n        } else {\n          this.getCurrPosition = () => {\n            return this.control.viewportScrollOffset * this.size / this.contentSize;\n          };\n          this.getScrollDirection = position => {\n            return position > this.getCurrPosition() ? 'forward' : 'backward';\n          };\n        }\n      });\n      super();\n    }\n    scrollTo(start) {\n      return from(this.cmp.scrollTo({\n        start,\n        duration: this.cmp.trackScrollDuration()\n      }));\n    }\n    getScrollForwardStep() {\n      return this.control.viewportScrollOffset + this.viewportSize;\n    }\n    getScrollBackwardStep() {\n      return this.control.viewportScrollOffset - this.viewportSize;\n    }\n    static {\n      this.ɵfac = function TrackXDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TrackXDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: TrackXDirective,\n        selectors: [[\"\", \"scrollbarTrackX\", \"\"]],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: TrackAdapter,\n          useExisting: TrackXDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return TrackXDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TrackYDirective = /*#__PURE__*/(() => {\n  class TrackYDirective extends TrackAdapter {\n    get contentSize() {\n      return this.cmp.viewport.contentHeight;\n    }\n    getCurrPosition() {\n      return this.control.viewportScrollOffset * this.size / this.contentSize;\n    }\n    getScrollDirection(position) {\n      return position > this.getCurrPosition() ? 'forward' : 'backward';\n    }\n    scrollTo(top) {\n      return from(this.cmp.scrollTo({\n        top,\n        duration: this.cmp.trackScrollDuration()\n      }));\n    }\n    getScrollForwardStep() {\n      return this.control.viewportScrollOffset + this.viewportSize;\n    }\n    getScrollBackwardStep() {\n      return this.control.viewportScrollOffset - this.viewportSize;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵTrackYDirective_BaseFactory;\n        return function TrackYDirective_Factory(__ngFactoryType__) {\n          return (ɵTrackYDirective_BaseFactory || (ɵTrackYDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TrackYDirective)))(__ngFactoryType__ || TrackYDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: TrackYDirective,\n        selectors: [[\"\", \"scrollbarTrackY\", \"\"]],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: TrackAdapter,\n          useExisting: TrackYDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return TrackYDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ScrollbarManager = /*#__PURE__*/(() => {\n  class ScrollbarManager {\n    constructor() {\n      this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n      this._polyfillUrl = inject(NG_SCROLLBAR_POLYFILL);\n      this.document = inject(DOCUMENT);\n      this.window = this.document.defaultView;\n      this.scrollTimelinePolyfill = signal(null);\n      if (this.isBrowser && (!this.window['ScrollTimeline'] || !CSS.supports('animation-timeline', 'scroll()'))) {\n        this.initPolyfill();\n      }\n    }\n    async initPolyfill() {\n      try {\n        // Create a script element\n        const script = this.document.createElement('script');\n        script.src = this._polyfillUrl;\n        // Wait for the script to load\n        await new Promise((resolve, reject) => {\n          script.onload = resolve;\n          script.onerror = reject;\n          this.document.head.appendChild(script);\n        });\n        // Once loaded, access and execute the function attached to the window object\n        if (this.window['ScrollTimeline']) {\n          this.scrollTimelinePolyfill.set(this.window['ScrollTimeline']);\n        } else {\n          console.error('[NgScrollbar]: ScrollTimeline is not attached to the window object.');\n        }\n      } catch (error) {\n        console.error('[NgScrollbar]: Error loading ScrollTimeline script:', error);\n      }\n    }\n    static {\n      this.ɵfac = function ScrollbarManager_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollbarManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ScrollbarManager,\n        factory: ScrollbarManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollbarManager;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ThumbAdapter = /*#__PURE__*/(() => {\n  class ThumbAdapter extends PointerEventsAdapter {\n    // Returns thumb size\n    get size() {\n      return this.nativeElement.getBoundingClientRect()[this.control.rectSizeProperty];\n    }\n    // The maximum space available for scrolling.\n    get trackMax() {\n      return this.track.size - this.size;\n    }\n    /**\n     * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\n     * This function is called by thumb drag event using viewport or scrollbar pointer events\n     */\n    get pointerEvents() {\n      return fromEvent(this.nativeElement, 'pointerdown').pipe(stopPropagation(), preventSelection(this.document), switchMap(e => {\n        let startTrackMax;\n        let startScrollMax;\n        const dragStart = of(e).pipe(tap(() => {\n          // Capture scrollMax and trackMax once\n          startTrackMax = this.trackMax;\n          startScrollMax = this.control.viewportScrollMax;\n          this.setDragging(this.control.axis);\n        }));\n        const dragging = fromEvent(this.document, 'pointermove').pipe(stopPropagation());\n        const dragEnd = fromEvent(this.document, 'pointerup', {\n          capture: true\n        }).pipe(stopPropagation(), enableSelection(this.document), tap(() => this.setDragging('none')));\n        return dragStart.pipe(map(startEvent => startEvent[this.control.offsetProperty]), switchMap(startOffset => dragging.pipe(map(moveEvent => moveEvent[this.control.clientProperty]),\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\n        map(moveClient => moveClient - this.track.offset), map(trackRelativeOffset => startScrollMax * (trackRelativeOffset - startOffset) / startTrackMax), tap(scrollPosition => this.control.instantScrollTo(scrollPosition, startScrollMax)), takeUntil(dragEnd))));\n      }));\n    }\n    constructor() {\n      afterRenderEffect({\n        earlyRead: () => {\n          const script = this.manager.scrollTimelinePolyfill();\n          untracked(() => {\n            if (script && !this._animation) {\n              this._animation = startPolyfill(script, this.nativeElement, this.cmp.viewport.nativeElement, this.control.axis);\n            }\n          });\n        }\n      });\n      super();\n      this.manager = inject(ScrollbarManager);\n      this.track = inject(TrackAdapter);\n    }\n    setDragging(value) {\n      this.zone.run(() => this.cmp.dragging.set(value));\n    }\n    static {\n      this.ɵfac = function ThumbAdapter_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ThumbAdapter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ThumbAdapter,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return ThumbAdapter;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction startPolyfill(ScrollTimeline, element, source, axis) {\n  return element.animate({\n    translate: ['var(--_scrollbar-thumb-transform-from)', 'var(--_scrollbar-thumb-transform-to)']\n  }, {\n    fill: 'both',\n    easing: 'linear',\n    timeline: new ScrollTimeline({\n      source,\n      axis\n    })\n  });\n}\nlet ThumbXDirective = /*#__PURE__*/(() => {\n  class ThumbXDirective extends ThumbAdapter {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵThumbXDirective_BaseFactory;\n        return function ThumbXDirective_Factory(__ngFactoryType__) {\n          return (ɵThumbXDirective_BaseFactory || (ɵThumbXDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ThumbXDirective)))(__ngFactoryType__ || ThumbXDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ThumbXDirective,\n        selectors: [[\"\", \"scrollbarThumbX\", \"\"]],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: ThumbAdapter,\n          useExisting: ThumbXDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return ThumbXDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ThumbYDirective = /*#__PURE__*/(() => {\n  class ThumbYDirective extends ThumbAdapter {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵThumbYDirective_BaseFactory;\n        return function ThumbYDirective_Factory(__ngFactoryType__) {\n          return (ɵThumbYDirective_BaseFactory || (ɵThumbYDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ThumbYDirective)))(__ngFactoryType__ || ThumbYDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ThumbYDirective,\n        selectors: [[\"\", \"scrollbarThumbY\", \"\"]],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: ThumbAdapter,\n          useExisting: ThumbYDirective\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return ThumbYDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// canScroll function can work for y-axis and x-axis for both LTR and RTL directions\nconst canScrollFunc = {\n  forward: (scrollOffset, scrollMax) => scrollOffset < scrollMax,\n  backward: scrollOffset => scrollOffset > 0\n};\nconst scrollStepFunc = {\n  forward: (scrollBy, offset) => offset + scrollBy,\n  backward: (scrollBy, offset) => offset - scrollBy\n};\nconst horizontalScrollStepFunc = {\n  rtl: {\n    forward: (scrollBy, offset, scrollMax) => scrollMax - offset - scrollBy,\n    backward: (scrollBy, offset, scrollMax) => scrollMax - offset + scrollBy\n  },\n  ltr: scrollStepFunc\n};\nlet ScrollbarButton = /*#__PURE__*/(() => {\n  class ScrollbarButton extends PointerEventsAdapter {\n    get pointerEvents() {\n      const pointerDown$ = fromEvent(this.nativeElement, 'pointerdown').pipe(stopPropagation(), preventSelection(this.document));\n      const pointerUp$ = fromEvent(this.document, 'pointerup', {\n        passive: true\n      }).pipe(enableSelection(this.document));\n      const pointerLeave$ = fromEvent(this.nativeElement, 'pointerleave', {\n        passive: true\n      });\n      // Combine pointerup and pointerleave events into one stream\n      const pointerUpOrLeave$ = merge(pointerUp$, pointerLeave$);\n      return pointerDown$.pipe(switchMap(() => this.firstScrollStep().pipe(delay(this.afterFirstClickDelay), switchMap(() => this.onOngoingPointerdown()), takeUntil(pointerUpOrLeave$))));\n    }\n    constructor() {\n      effect(() => {\n        const scrollDirection = this.scrollDirection();\n        const dir = this.cmp.direction();\n        untracked(() => {\n          // Get the canScroll function according to scroll direction (forward/backward)\n          this.canScroll = canScrollFunc[scrollDirection];\n          if (this.control.axis === 'x') {\n            // Get the nextStep function according to scroll direction (forward/backward) and layout direction (LTR/RTL)\n            this.nextStep = horizontalScrollStepFunc[dir][scrollDirection];\n          } else {\n            // Get the nextStep function according to scroll direction (forward/backward)\n            this.nextStep = scrollStepFunc[scrollDirection];\n          }\n        });\n      });\n      super();\n      this.scrollbarButton = input.required();\n      this.scrollDirection = input.required();\n      this.afterFirstClickDelay = 120;\n      this.firstClickDuration = 100;\n      this.scrollBy = 50;\n      this.onGoingScrollBy = 12;\n    }\n    firstScrollStep() {\n      const value = this.nextStep(this.scrollBy, this.control.viewportScrollOffset, this.control.viewportScrollMax);\n      return this.control.scrollTo(value, this.firstClickDuration);\n    }\n    onGoingScrollStep() {\n      const scrollMax = this.control.viewportScrollMax;\n      const value = this.nextStep(this.onGoingScrollBy, this.control.viewportScrollOffset, scrollMax);\n      this.control.instantScrollTo(value, scrollMax);\n    }\n    onOngoingPointerdown() {\n      return interval(0, animationFrameScheduler).pipe(takeWhile(() => this.canScroll(this.control.viewportScrollOffset, this.control.viewportScrollMax)), tap(() => this.onGoingScrollStep()));\n    }\n    static {\n      this.ɵfac = function ScrollbarButton_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollbarButton)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ScrollbarButton,\n        selectors: [[\"button\", \"scrollbarButton\", \"\"]],\n        inputs: {\n          scrollbarButton: [1, \"scrollbarButton\"],\n          scrollDirection: [1, \"scrollDirection\"]\n        },\n        features: [i0.ɵɵInheritDefinitionFeature],\n        attrs: _c0,\n        decls: 3,\n        vars: 0,\n        consts: [[1, \"ng-scrollbar-button-icon\"], [\"viewBox\", \"0 0 512 512\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M413.1,327.3l-1.8-2.1l-136-156.5c-4.6-5.3-11.5-8.6-19.2-8.6c-7.7,0-14.6,3.4-19.2,8.6L101,324.9l-2.3,2.6  C97,330,96,333,96,336.2c0,8.7,7.4,15.8,16.6,15.8v0h286.8v0c9.2,0,16.6-7.1,16.6-15.8C416,332.9,414.9,329.8,413.1,327.3z\"]],\n        template: function ScrollbarButton_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"svg\", 1);\n            i0.ɵɵelement(2, \"path\", 2);\n            i0.ɵɵelementEnd()();\n          }\n        },\n        styles: [\"[_nghost-%COMP%]{position:relative;border:none;margin:0;padding:0;border-radius:0;appearance:none;background-color:var(--INTERNAL-scrollbar-button-color)}[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{width:100%;height:100%;fill:var(--INTERNAL-scrollbar-button-fill)}[_nghost-%COMP%]:hover{background:var(--INTERNAL-scrollbar-button-hover-color)}[_nghost-%COMP%]:hover   svg[_ngcontent-%COMP%]{fill:var(--INTERNAL-scrollbar-button-hover-fill)}[_nghost-%COMP%]:active{background:var(--INTERNAL-scrollbar-button-active-color)}[_nghost-%COMP%]:active   svg[_ngcontent-%COMP%]{fill:var(--INTERNAL-scrollbar-button-active-fill)}[scrollbarButton=top][_nghost-%COMP%], [scrollbarButton=start][_nghost-%COMP%]{order:1}[scrollbarButton=bottom][_nghost-%COMP%], [scrollbarButton=end][_nghost-%COMP%]{order:3}[scrollbarButton=top][_nghost-%COMP%], [scrollbarButton=bottom][_nghost-%COMP%]{width:100%;height:var(--INTERNAL-scrollbar-button-size)}[scrollbarButton=start][_nghost-%COMP%], [scrollbarButton=end][_nghost-%COMP%]{width:var(--INTERNAL-scrollbar-button-size);height:100%}[scrollbarButton=bottom][_nghost-%COMP%]{--_button-rotate: 180deg}[scrollbarButton=start][_nghost-%COMP%]{--_button-rotate: -90deg}[scrollbarButton=start][_nghost-%COMP%]   .ng-scrollbar-button-icon[_ngcontent-%COMP%]{writing-mode:vertical-lr}[scrollbarButton=end][_nghost-%COMP%]{--_button-rotate: 90deg}[scrollbarButton=end][_nghost-%COMP%]   .ng-scrollbar-button-icon[_ngcontent-%COMP%]{writing-mode:vertical-rl}.ng-scrollbar-button-icon[_ngcontent-%COMP%]{rotate:var(--_button-rotate);display:flex;place-content:center;place-items:center;width:100%;height:100%}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return ScrollbarButton;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ScrollbarY = /*#__PURE__*/(() => {\n  class ScrollbarY extends ScrollbarAdapter {\n    constructor() {\n      super(...arguments);\n      this.rectOffsetProperty = 'top';\n      this.rectSizeProperty = 'height';\n      this.sizeProperty = 'offsetHeight';\n      this.clientProperty = 'clientY';\n      this.offsetProperty = 'offsetY';\n      this.axis = 'y';\n    }\n    get viewportScrollMax() {\n      return this.cmp.viewport.scrollMaxY;\n    }\n    get viewportScrollOffset() {\n      return this.cmp.viewport.scrollTop;\n    }\n    scrollTo(top, duration) {\n      return from(this.cmp.scrollTo({\n        top,\n        duration\n      }));\n    }\n    instantScrollTo(value) {\n      this.cmp.viewport.scrollYTo(value);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵScrollbarY_BaseFactory;\n        return function ScrollbarY_Factory(__ngFactoryType__) {\n          return (ɵScrollbarY_BaseFactory || (ɵScrollbarY_BaseFactory = i0.ɵɵgetInheritedFactory(ScrollbarY)))(__ngFactoryType__ || ScrollbarY);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ScrollbarY,\n        selectors: [[\"scrollbar-y\"]],\n        hostVars: 2,\n        hostBindings: function ScrollbarY_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"--track-size\", ctx.trackSize());\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: SCROLLBAR_CONTROL,\n          useExisting: ScrollbarY\n        }]), i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 11,\n        consts: [[1, \"ng-scrollbar-sticky\"], [1, \"ng-scrollbar-track-wrapper\"], [\"scrollbarTrackY\", \"\"], [\"scrollbarThumbY\", \"\"], [\"scrollbarButton\", \"top\", \"scrollDirection\", \"backward\"], [\"scrollbarButton\", \"bottom\", \"scrollDirection\", \"forward\"]],\n        template: function ScrollbarY_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n            i0.ɵɵelement(3, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, ScrollbarY_Conditional_4_Template, 2, 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-scrollbar-hover\", ctx.cmp.hoverOffset());\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"ng-scrollbar-hover\", !ctx.cmp.hoverOffset());\n            i0.ɵɵadvance();\n            i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-track \", ctx.cmp.trackClass(), \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-thumb \", ctx.cmp.thumbClass(), \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.cmp.buttons() ? 4 : -1);\n          }\n        },\n        dependencies: [TrackYDirective, ThumbYDirective, ScrollbarButton],\n        styles: [\"[_nghost-%COMP%]{position:absolute;inset:0;pointer-events:none;min-width:calc(var(--viewport-width) * 1px);min-height:calc(var(--viewport-height) * 1px)}.ng-scrollbar-sticky[_ngcontent-%COMP%]{top:calc(var(--_scrollbar-wrapper-top) * 1px);left:calc(var(--_scrollbar-wrapper-left) * 1px);right:calc(var(--_scrollbar-wrapper-right) * 1px);height:calc(var(--_scrollbar-wrapper-height) * 1px);width:calc(var(--_scrollbar-wrapper-width) * 1px);position:sticky;z-index:100;opacity:var(--_scrollbar-hover-opacity);transition:var(--_scrollbar-opacity-transition);pointer-events:var(--_scrollbar-pointer-events)}.ng-scrollbar-track-wrapper[_ngcontent-%COMP%]{touch-action:none;-webkit-user-select:none;user-select:none;top:var(--_scrollbar-track-top);bottom:var(--_scrollbar-track-bottom);right:var(--_scrollbar-track-right);left:var(--_scrollbar-track-left);transition:var(--INTERNAL-scrollbar-track-wrapper-transition);position:absolute;overflow:hidden;display:flex;place-items:center}.ng-scrollbar-track[_ngcontent-%COMP%]{position:relative;width:100%;height:100%;background-color:var(--INTERNAL-scrollbar-track-color);border-radius:var(--INTERNAL-scrollbar-border-radius);cursor:default;z-index:1;order:2}.ng-scrollbar-thumb[_ngcontent-%COMP%]{box-sizing:border-box;position:absolute;transition:var(--INTERNAL-scrollbar-thumb-transition);border-radius:var(--INTERNAL-scrollbar-border-radius);height:var(--_thumb-height);width:var(--_thumb-width);animation-name:_ngcontent-%COMP%_scrollbarThumbAnimation;animation-duration:1ms;animation-timing-function:linear}@keyframes _ngcontent-%COMP%_scrollbarThumbAnimation{0%{translate:var(--_scrollbar-thumb-transform-from)}to{translate:var(--_scrollbar-thumb-transform-to)}}\", \"[_nghost-%COMP%]{--_scrollbar-wrapper-top: 0;--_scrollbar-wrapper-left: var(--_scrollbar-wrapper-y-left);--_scrollbar-wrapper-right: var(--_scrollbar-wrapper-y-right);--_scrollbar-wrapper-height: var(--viewport-height);--_scrollbar-wrapper-width: var(--_scrollbar-thickness);--_scrollbar-track-top: var(--_vertical-top);--_scrollbar-track-bottom: var(--_vertical-bottom);--_scrollbar-track-right: var(--_vertical-right);--_scrollbar-track-left: var(--_vertical-left);--thumb-size: max(calc(var(--viewport-height) * var(--track-size) / var(--content-height)), var(--INTERNAL-scrollbar-thumb-min-size));--_thumb-height: calc(var(--thumb-size) * 1px);--_thumb-width: 100%;--_scrollbar-y-thumb-transform-to-value: calc(var(--track-size) - var(--thumb-size));--_scrollbar-thumb-transform-from: 0 0;--_scrollbar-thumb-transform-to: 0 calc(var(--_scrollbar-y-thumb-transform-to-value) * 1px)}.ng-scrollbar-track-wrapper[_ngcontent-%COMP%]{width:var(--_track-y-thickness);flex-direction:column}.ng-scrollbar-hover[_ngcontent-%COMP%]:hover, .ng-scrollbar-hover[_ngcontent-%COMP%]:active{--_track-y-thickness: var(--_scrollbar-hover-thickness-px);--_thumb-y-color: var(--INTERNAL-scrollbar-thumb-hover-color)}.ng-scrollbar-thumb[_ngcontent-%COMP%]{animation-timeline:var(--_animation-timeline-y);min-height:calc(var(--INTERNAL-scrollbar-thumb-min-size) * 1px);display:var(--_vertical-thumb-display);background-color:var(--_thumb-y-color)}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return ScrollbarY;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ScrollbarX = /*#__PURE__*/(() => {\n  class ScrollbarX extends ScrollbarAdapter {\n    get viewportScrollMax() {\n      return this.cmp.viewport.scrollMaxX;\n    }\n    get viewportScrollOffset() {\n      // Keep scrollLeft value positive for horizontal scrollbar\n      return Math.abs(this.cmp.viewport.scrollLeft);\n    }\n    constructor() {\n      effect(() => {\n        if (this.cmp.direction() === 'rtl') {\n          this.handlePosition = (position, scrollMax) => -(scrollMax - position);\n        } else {\n          this.handlePosition = position => position;\n        }\n      });\n      super();\n      this.manager = inject(ScrollbarManager);\n      this.rectOffsetProperty = 'left';\n      this.rectSizeProperty = 'width';\n      this.sizeProperty = 'offsetWidth';\n      this.clientProperty = 'clientX';\n      this.offsetProperty = 'offsetX';\n      this.axis = 'x';\n    }\n    scrollTo(left, duration) {\n      return from(this.cmp.scrollTo({\n        left,\n        duration\n      }));\n    }\n    instantScrollTo(value, scrollMax) {\n      this.cmp.viewport.scrollXTo(this.handlePosition(value, scrollMax));\n    }\n    static {\n      this.ɵfac = function ScrollbarX_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollbarX)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ScrollbarX,\n        selectors: [[\"scrollbar-x\"]],\n        hostVars: 3,\n        hostBindings: function ScrollbarX_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"dir\", ctx.cmp.direction());\n            i0.ɵɵstyleProp(\"--track-size\", ctx.trackSize());\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: SCROLLBAR_CONTROL,\n          useExisting: ScrollbarX\n        }]), i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 11,\n        consts: [[1, \"ng-scrollbar-sticky\"], [1, \"ng-scrollbar-track-wrapper\"], [\"scrollbarTrackX\", \"\"], [\"scrollbarThumbX\", \"\"], [\"scrollbarButton\", \"start\", \"scrollDirection\", \"backward\"], [\"scrollbarButton\", \"end\", \"scrollDirection\", \"forward\"]],\n        template: function ScrollbarX_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n            i0.ɵɵelement(3, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, ScrollbarX_Conditional_4_Template, 2, 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-scrollbar-hover\", ctx.cmp.hoverOffset());\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"ng-scrollbar-hover\", !ctx.cmp.hoverOffset());\n            i0.ɵɵadvance();\n            i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-track \", ctx.cmp.trackClass(), \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-thumb \", ctx.cmp.thumbClass(), \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.cmp.buttons() ? 4 : -1);\n          }\n        },\n        dependencies: [TrackXDirective, ThumbXDirective, ScrollbarButton],\n        styles: [_c1, \"[_nghost-%COMP%]{--_scrollbar-wrapper-top: var(--_scrollbar-wrapper-x-top);--_scrollbar-wrapper-left: 0;--_scrollbar-wrapper-right: 0;--_scrollbar-wrapper-height: var(--_scrollbar-thickness);--_scrollbar-wrapper-width: var(--viewport-width);--_scrollbar-track-top: var(--_horizontal-top);--_scrollbar-track-bottom: var(--_horizontal-bottom);--_scrollbar-track-right: var(--_horizontal-right);--_scrollbar-track-left: var(--_horizontal-left);--thumb-size: max(calc(var(--viewport-width) * var(--track-size) / var(--content-width)), var(--INTERNAL-scrollbar-thumb-min-size));--_thumb-height: 100%;--_thumb-width: calc(var(--thumb-size) * 1px);--_scrollbar-x-thumb-transform-to-value: calc(var(--track-size) - var(--thumb-size));--_scrollbar-thumb-transform-from: 0;--_scrollbar-thumb-transform-to: calc(var(--_scrollbar-x-thumb-transform-to-value) * 1px)}[_nghost-%COMP%]   .ng-scrollbar-button[scrollbarButton=start][_ngcontent-%COMP%]{_--button-rotate:90}[_nghost-%COMP%]   .ng-scrollbar-button[scrollbarButton=end][_ngcontent-%COMP%]{_--button-rotate:-90}[dir=rtl][_nghost-%COMP%]   .ng-scrollbar-thumb[_ngcontent-%COMP%]{animation-name:_ngcontent-%COMP%_scrollbarThumbRTLAnimation;will-change:right;--_scrollbar-thumb-transform-to: calc(var(--_scrollbar-x-thumb-transform-to-value) * -1px)}[dir=rtl][_nghost-%COMP%]   .ng-scrollbar-button[scrollbarButton=start][_ngcontent-%COMP%]{--_button-rotate: 90deg}[dir=rtl][_nghost-%COMP%]   .ng-scrollbar-button[scrollbarButton=end][_ngcontent-%COMP%]{--_button-rotate: -90deg}.ng-scrollbar-track-wrapper[_ngcontent-%COMP%]{height:var(--_track-x-thickness);flex-direction:row}.ng-scrollbar-hover[_ngcontent-%COMP%]:hover, .ng-scrollbar-hover[_ngcontent-%COMP%]:active{--_track-x-thickness: var(--_scrollbar-hover-thickness-px);--_thumb-x-color: var(--INTERNAL-scrollbar-thumb-hover-color)}.ng-scrollbar-thumb[_ngcontent-%COMP%]{animation-timeline:var(--_animation-timeline-x);min-width:calc(var(--INTERNAL-scrollbar-thumb-min-size) * 1px);display:var(--_horizontal-thumb-display);background-color:var(--_thumb-x-color)}@keyframes _ngcontent-%COMP%_scrollbarThumbRTLAnimation{0%{right:var(--_scrollbar-thumb-transform-from)}to{right:calc(var(--_scrollbar-thumb-transform-to) * -1)}}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return ScrollbarX;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Scrollbars = /*#__PURE__*/(() => {\n  class Scrollbars {\n    constructor() {\n      this.cmp = inject(NG_SCROLLBAR);\n    }\n    static {\n      this.ɵfac = function Scrollbars_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Scrollbars)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: Scrollbars,\n        selectors: [[\"scrollbars\"]],\n        decls: 2,\n        vars: 2,\n        template: function Scrollbars_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, Scrollbars_Conditional_0_Template, 1, 0, \"scrollbar-y\")(1, Scrollbars_Conditional_1_Template, 1, 0, \"scrollbar-x\");\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(ctx.cmp.verticalUsed() ? 0 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.cmp.horizontalUsed() ? 1 : -1);\n          }\n        },\n        dependencies: [ScrollbarX, ScrollbarY],\n        styles: [\"[_nghost-%COMP%]{display:contents}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return Scrollbars;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgScrollbar = /*#__PURE__*/(() => {\n  class NgScrollbar extends NgScrollbarCore {\n    constructor() {\n      effect(() => {\n        const contentWrapper = this.contentWrapper().nativeElement;\n        untracked(() => {\n          this.viewport.init(this.nativeElement, contentWrapper);\n        });\n      });\n      super();\n      this.contentWrapper = viewChild.required('contentWrapper');\n      this._scrollbars = viewChild.required(Scrollbars);\n    }\n    static {\n      this.ɵfac = function NgScrollbar_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgScrollbar)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: NgScrollbar,\n        selectors: [[\"ng-scrollbar\", 3, \"externalViewport\", \"\"]],\n        viewQuery: function NgScrollbar_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuerySignal(ctx.contentWrapper, _c2, 5);\n            i0.ɵɵviewQuerySignal(ctx._scrollbars, Scrollbars, 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵqueryAdvance(2);\n          }\n        },\n        exportAs: [\"ngScrollbar\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_SCROLLBAR,\n          useExisting: NgScrollbar\n        }, ViewportAdapter]), i0.ɵɵInheritDefinitionFeature],\n        ngContentSelectors: _c3,\n        decls: 4,\n        vars: 0,\n        consts: [[\"contentWrapper\", \"\"]],\n        template: function NgScrollbar_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", null, 0);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelement(3, \"scrollbars\");\n            i0.ɵɵelementEnd();\n          }\n        },\n        dependencies: [Scrollbars],\n        styles: [\"[_nghost-%COMP%]{display:block;position:relative;max-height:100%;max-width:100%;--INTERNAL-scrollbar-border-radius: var(--scrollbar-border-radius, 0px);--INTERNAL-scrollbar-thickness: var(--scrollbar-thickness, 5);--INTERNAL-scrollbar-offset: var(--scrollbar-offset, 0);--INTERNAL-scrollbar-track-wrapper-transition: var(--scrollbar-track-wrapper-transition, width 60ms linear, height 60ms linear);--INTERNAL-scrollbar-track-color: var(--scrollbar-track-color, transparent);--INTERNAL-scrollbar-thumb-color: var(--scrollbar-thumb-color, rgb(0 0 0 / 20%));--INTERNAL-scrollbar-thumb-hover-color: var(--scrollbar-thumb-hover-color, var(--INTERNAL-scrollbar-thumb-color));--INTERNAL-scrollbar-hover-thickness: var(--scrollbar-hover-thickness, var(--INTERNAL-scrollbar-thickness));--INTERNAL-scrollbar-thumb-transition: var(--scrollbar-thumb-transition, none);--INTERNAL-scrollbar-thumb-min-size: var(--scrollbar-thumb-min-size, 20);--INTERNAL-scrollbar-button-color: var(--scrollbar-button-color, var(--INTERNAL-scrollbar-thumb-color));--INTERNAL-scrollbar-button-hover-color: var(--scrollbar-button-hover-color, var(--INTERNAL-scrollbar-button-color));--INTERNAL-scrollbar-button-active-color: var(--scrollbar-button-active-color, var(--INTERNAL-scrollbar-button-hover-color));--INTERNAL-scrollbar-button-fill: var(--scrollbar-button-fill, white);--INTERNAL-scrollbar-button-hover-fill: var(--scrollbar-button-hover-fill, var(--INTERNAL-scrollbar-button-fill));--INTERNAL-scrollbar-button-active-fill: var(--scrollbar-button-active-fill, var(--INTERNAL-scrollbar-button-hover-fill));--INTERNAL-scrollbar-button-size: var(--scrollbar-button-size, 20px);--INTERNAL-scrollbar-hover-opacity-transition-enter-duration: var(--scrollbar-hover-opacity-transition-enter-duration, 0);--INTERNAL-scrollbar-hover-opacity-transition-leave-duration: var(--scrollbar-hover-opacity-transition-leave-duration, .4s);--INTERNAL-scrollbar-hover-opacity-transition-leave-delay: var(--scrollbar-hover-opacity-transition-leave-delay, 1s);--INTERNAL-scrollbar-overscroll-behavior: var(--scrollbar-overscroll-behavior, initial);--INTERNAL-scrollbar-mobile-overscroll-behavior: var(--scrollbar-mobile-overscroll-behavior, none);--_scrollbar-thickness: calc(var(--INTERNAL-scrollbar-thickness) + var(--INTERNAL-scrollbar-offset) * 2);--_scrollbar-pointer-events: auto;--_scrollbar-offset-px: calc(var(--INTERNAL-scrollbar-offset) * 1px);--_scrollbar-thickness-px: calc(var(--INTERNAL-scrollbar-thickness) * 1px);--_scrollbar-hover-thickness-px: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_viewport-padding-top: 0;--_viewport-padding-bottom: 0;--_viewport-padding-left: 0;--_viewport-padding-right: 0;--_horizontal-thumb-display: block;--_vertical-thumb-display: block;--_viewport-overflow: auto;--_viewport-pointer-events: auto;--_thumb-x-color: var(--INTERNAL-scrollbar-thumb-color);--_thumb-y-color: var(--INTERNAL-scrollbar-thumb-color);--_track-y-thickness: var(--_scrollbar-thickness-px);--_track-x-thickness: var(--_scrollbar-thickness-px);--_viewport-overscroll-behavior: var(--INTERNAL-scrollbar-overscroll-behavior);--_scrollbar-content-width: fit-content}[_nghost-%COMP%]{--_spacer-width: var(--spacer-width);--_spacer-height: var(--spacer-height);--_vertical-top: var(--_scrollbar-offset-px);--_vertical-bottom: var(--_scrollbar-offset-px);--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-offset-px);--_horizontal-top: initial;--_horizontal-bottom: var(--_scrollbar-offset-px);--_scrollbar-wrapper-x-top: calc(var(--viewport-height) - var(--_scrollbar-thickness));--reached-offset: 1px;--reached-offset-top: var(--reached-offset);--reached-offset-bottom: var(--reached-offset);--reached-offset-start: var(--reached-offset);--reached-offset-end: var(--reached-offset);--dropped-offset: 1px;--dropped-offset-top: var(--dropped-offset);--dropped-offset-bottom: var(--dropped-offset);--dropped-offset-start: var(--dropped-offset);--dropped-offset-end: var(--dropped-offset);--_viewport_scroll-timeline: unset;--_animation-timeline-y: unset;--_scrollbar-y-thumb-transform-to-value: unset;--_scrollbar-x-thumb-transform-to-value: unset;--_scrollbar-thumb-transform-from: unset;--_scrollbar-thumb-transform-to: unset}.ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{min-height:100%;min-width:100%;height:100%;max-height:100%;max-width:100%}.ng-scroll-viewport[_nghost-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{position:relative;overflow:var(--_viewport-overflow);scroll-timeline:var(--_viewport_scroll-timeline);box-sizing:border-box!important;-webkit-overflow-scrolling:touch;will-change:scroll-position;-webkit-user-select:var(--_viewport-user-select);user-select:var(--_viewport-user-select);overscroll-behavior:var(--_viewport-overscroll-behavior);pointer-events:var(--_viewport-pointer-events)}.ng-scroll-viewport[_nghost-%COMP%] > .ng-scroll-content[_ngcontent-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport>.ng-scroll-content{width:var(--_scrollbar-content-width);z-index:1;min-width:100%;min-height:100%;contain:content;padding:var(--_viewport-padding-top, 0) var(--_viewport-padding-right, 0) var(--_viewport-padding-bottom, 0) var(--_viewport-padding-left, 0)}[appearance=native][_nghost-%COMP%]{--_spacer-width: calc(var(--spacer-width) + var(--_scrollbar-thickness));--_spacer-height: calc(var(--spacer-height) + var(--_scrollbar-thickness))}.ng-scroll-viewport[_nghost-%COMP%] > .ng-scroll-spacer[_ngcontent-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport>.ng-scroll-spacer{position:relative;width:calc(var(--_spacer-width) * 1px);height:calc(var(--_spacer-height) * 1px)}.ng-scroll-viewport[_nghost-%COMP%], .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport{scrollbar-width:none!important}.ng-scroll-viewport[_nghost-%COMP%]::-webkit-scrollbar, .ng-scrollbar-external-viewport[_nghost-%COMP%]     .ng-scroll-viewport::-webkit-scrollbar{display:none!important}[position=invertX][_nghost-%COMP%], [position=invertAll][_nghost-%COMP%]{--_horizontal-top: var(--_scrollbar-offset-px);--_horizontal-bottom: initial;--_scrollbar-wrapper-x-top: 0}[dir=ltr][_nghost-%COMP%]{--_scrollbar-wrapper-y-right: initial;--_vertical-right: var(--_scrollbar-offset-px);--_vertical-left: initial;--_scrollbar-wrapper-y-left: calc(var(--viewport-width) - var(--_scrollbar-thickness))}[dir=ltr][position=invertY][_nghost-%COMP%], [dir=ltr][position=invertAll][_nghost-%COMP%]{--_vertical-left: var(--_scrollbar-offset-px);--_vertical-right: initial;--_scrollbar-wrapper-y-left: 0}[dir=rtl][_nghost-%COMP%]{--_scrollbar-wrapper-y-left: initial;--_vertical-left: var(--_scrollbar-offset-px);--_vertical-right: initial;--_scrollbar-wrapper-y-right: calc(var(--viewport-width) - var(--_scrollbar-thickness))}[dir=rtl][position=invertY][_nghost-%COMP%], [dir=rtl][position=invertAll][_nghost-%COMP%]{--_vertical-right: var(--_scrollbar-offset-px);--_vertical-left: initial;--_scrollbar-wrapper-y-right: 0}[verticalUsed=true][horizontalUsed=true][_nghost-%COMP%]{--_scrollbar-thickness-margin: calc(var(--INTERNAL-scrollbar-thickness) + var(--INTERNAL-scrollbar-offset) * 3);--_scrollbar-thickness-margin-px: calc(var(--_scrollbar-thickness-margin) * 1px)}[horizontalUsed=true][_nghost-%COMP%]{--_vertical-top: var(--_scrollbar-offset-px);--_vertical-bottom: var(--_scrollbar-thickness-margin-px)}[horizontalUsed=true][position=invertX][_nghost-%COMP%], [horizontalUsed=true][position=invertAll][_nghost-%COMP%]{--_vertical-top: var(--_scrollbar-thickness-margin-px);--_vertical-bottom: var(--_scrollbar-offset-px)}[verticalUsed=true][dir=ltr][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-thickness-margin-px)}[verticalUsed=true][dir=rtl][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-thickness-margin-px);--_horizontal-right: var(--_scrollbar-offset-px)}[verticalUsed=true][position=invertY][dir=ltr][_nghost-%COMP%], [verticalUsed=true][position=invertAll][dir=ltr][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-thickness-margin-px);--_horizontal-right: var(--_scrollbar-offset-px)}[verticalUsed=true][position=invertY][dir=rtl][_nghost-%COMP%], [verticalUsed=true][position=invertAll][dir=rtl][_nghost-%COMP%]{--_horizontal-left: var(--_scrollbar-offset-px);--_horizontal-right: var(--_scrollbar-thickness-margin-px)}[appearance=native][verticalUsed=true][dir=ltr][_nghost-%COMP%]{--_viewport-padding-left: 0;--_viewport-padding-right: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][verticalUsed=true][dir=rtl][_nghost-%COMP%]{--_viewport-padding-left: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-right: 0}[appearance=native][verticalUsed=true][position=invertY][dir=ltr][_nghost-%COMP%], [appearance=native][verticalUsed=true][position=invertAll][dir=ltr][_nghost-%COMP%]{--_viewport-padding-left: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-right: 0}[appearance=native][verticalUsed=true][position=invertY][dir=rtl][_nghost-%COMP%], [appearance=native][verticalUsed=true][position=invertAll][dir=rtl][_nghost-%COMP%]{--_viewport-padding-left: 0;--_viewport-padding-right: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][horizontalUsed=true][_nghost-%COMP%]{--_viewport-padding-top: 0;--_viewport-padding-bottom: calc(var(--_scrollbar-thickness) * 1px)}[appearance=native][horizontalUsed=true][position=invertX][_nghost-%COMP%], [appearance=native][horizontalUsed=true][position=invertAll][_nghost-%COMP%]{--_viewport-padding-top: calc(var(--_scrollbar-thickness) * 1px);--_viewport-padding-bottom: 0}[visibility=hover][_nghost-%COMP%]{--_scrollbar-hover-opacity: 0;--_scrollbar-opacity-transition: opacity var(--INTERNAL-scrollbar-hover-opacity-transition-leave-duration) var(--INTERNAL-scrollbar-hover-opacity-transition-leave-delay)}[visibility=hover][_nghost-%COMP%]:hover, [visibility=hover][_nghost-%COMP%]:active, [visibility=hover][_nghost-%COMP%]:focus{--_scrollbar-hover-opacity: 1;--_scrollbar-opacity-transition: opacity var(--INTERNAL-scrollbar-hover-opacity-transition-enter-duration)}[dir=ltr][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [dir=ltr][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=start]{left:0;right:unset}[dir=ltr][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end], [dir=ltr][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=end]{right:0;left:unset}[dir=rtl][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [dir=rtl][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=start]{right:0;left:unset}[dir=rtl][_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end], [dir=rtl][_nghost-%COMP%]     .scroll-dropped-trigger-element[trigger=end]{left:0;right:unset}[_nghost-%COMP%]     .ng-scroll-reached-wrapper, [_nghost-%COMP%]     .ng-scroll-dropped-wrapper, [_nghost-%COMP%]     .scroll-reached-trigger-element, [_nghost-%COMP%]     .scroll-dropped-trigger-element{position:absolute;-webkit-user-select:none;user-select:none;pointer-events:none;z-index:-9999}[_nghost-%COMP%]     .ng-scroll-reached-wrapper, [_nghost-%COMP%]     .ng-scroll-dropped-wrapper{visibility:hidden;inset:0;min-width:calc(var(--viewport-width) * 1px);min-height:calc(var(--viewport-height) * 1px)}[_nghost-%COMP%]     [isHorizontallyScrollable=false] .scroll-reached-trigger-element[trigger=end], [_nghost-%COMP%]     [isHorizontallyScrollable=false] .scroll-dropped-trigger-element[trigger=end]{display:none}[_nghost-%COMP%]     [isVerticallyScrollable=false] .scroll-reached-trigger-element[trigger=bottom], [_nghost-%COMP%]     [isVerticallyScrollable=false] .scroll-dropped-trigger-element[trigger=bottom]{display:none}[_nghost-%COMP%]     .scroll-reached-trigger-element{background:red}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=top], [_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=bottom]{left:0;right:0}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start], [_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end]{top:0;bottom:0}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=top]{top:0;height:var(--reached-offset-top)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=bottom]{bottom:0;height:var(--reached-offset-bottom)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=start]{width:var(--reached-offset-start)}[_nghost-%COMP%]     .scroll-reached-trigger-element[trigger=end]{width:var(--reached-offset-end)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[_ngcontent-%COMP%]{background:#00f}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=top][_ngcontent-%COMP%], [_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=bottom][_ngcontent-%COMP%]{left:0;right:0}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=start][_ngcontent-%COMP%], [_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=end][_ngcontent-%COMP%]{top:0;bottom:0}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=top][_ngcontent-%COMP%]{top:0;height:var(--dropped-offset-top)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=bottom][_ngcontent-%COMP%]{bottom:0;height:var(--dropped-offset-bottom)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=start][_ngcontent-%COMP%]{width:var(--dropped-offset-start)}[_nghost-%COMP%]   .scroll-dropped-trigger-element[trigger=end][_ngcontent-%COMP%]{width:var(--dropped-offset-end)}[verticalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerY;--_animation-timeline-y: --scrollerY;--_viewport_scroll-timeline: --scrollerY y}[horizontalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerX;--_animation-timeline-x: --scrollerX;--_viewport_scroll-timeline: --scrollerX x}[verticalUsed=true][horizontalUsed=true][_nghost-%COMP%]{--_timeline-scope: --scrollerX, --scrollerY;--_viewport_scroll-timeline: --scrollerX x, --scrollerY y}[orientation=vertical][_nghost-%COMP%]{--_viewport-overflow: hidden auto;--_scrollbar-content-width: unset}[orientation=horizontal][_nghost-%COMP%]{--_viewport-overflow: auto hidden}[disableInteraction=true][_nghost-%COMP%]{--_viewport-pointer-events: none;--_scrollbar-pointer-events: none}[isVerticallyScrollable=false][_nghost-%COMP%]{--_vertical-thumb-display: none}[isHorizontallyScrollable=false][_nghost-%COMP%]{--_horizontal-thumb-display: none}[dragging=x][_nghost-%COMP%], [dragging=y][_nghost-%COMP%]{--_viewport-user-select: none}[dragging=x][_nghost-%COMP%]{--_track-x-thickness: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_thumb-x-color: var(var(--INTERNAL-scrollbar-thumb-min-size))}[dragging=y][_nghost-%COMP%]{--_track-y-thickness: calc(var(--INTERNAL-scrollbar-hover-thickness) * 1px);--_thumb-y-color: var(var(--INTERNAL-scrollbar-thumb-min-size))}[mobile=true][_nghost-%COMP%]{--_viewport-overscroll-behavior: var(--INTERNAL-scrollbar-mobile-overscroll-behavior)}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return NgScrollbar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgScrollbarExt = /*#__PURE__*/(() => {\n  class NgScrollbarExt extends NgScrollbarCore {\n    constructor() {\n      // Using `afterRenderEffect` would run twice, one when viewport directive is detected\n      // and one when content wrapper is detected, therefore `effect` is better because it runs only once.\n      effect(() => {\n        const viewportElement = this.viewportElement();\n        const contentWrapperElement = this.contentWrapperElement();\n        const spacerElement = this.spacerElement();\n        const viewportError = this.viewportError();\n        const contentWrapperError = this.contentWrapperError();\n        const spacerError = this.spacerError();\n        untracked(() => {\n          if (!this.skipInit) {\n            const error = viewportError || contentWrapperError || spacerError;\n            if (error) {\n              console.error(error);\n            } else {\n              this.initialize(viewportElement, contentWrapperElement, spacerElement);\n            }\n          }\n        });\n      });\n      super();\n      this.renderer = inject(Renderer2);\n      this.appRef = inject(ApplicationRef);\n      this._scrollbars = signal(null);\n      /**\n       * Selector used to query the viewport element.\n       */\n      this.externalViewport = input();\n      /**\n       * Selector used to query the content wrapper element.\n       */\n      this.externalContentWrapper = input();\n      /**\n       * Selector used to query the spacer element (virtual scroll integration).\n       * In the case of integrating the scrollbar with a virtual scroll component,\n       * a spacer element is typically created to match the real size of the content.\n       * The scrollbar will use the size of this spacer element for calculations instead of the content wrapper size.\n       */\n      this.externalSpacer = input();\n      this.viewportElement = linkedSignal({\n        source: this.externalViewport,\n        // If viewport selector was defined, query the element\n        computation: selector => this.getElement(selector) || this.customViewport()?.nativeElement\n      });\n      this.viewportError = computed(() => {\n        return !this.viewportElement() ? `[NgScrollbar]: Could not find the viewport element for the provided selector \"${this.externalViewport()}\"` : null;\n      });\n      this.contentWrapperElement = linkedSignal({\n        source: this.externalContentWrapper,\n        computation: selector => this.getElement(selector)\n      });\n      this.contentWrapperError = computed(() => {\n        return !this.contentWrapperElement() && this.externalContentWrapper() ? `[NgScrollbar]: Content wrapper element not found for the provided selector \"${this.externalContentWrapper()}\"` : null;\n      });\n      this.spacerElement = linkedSignal({\n        source: this.externalSpacer,\n        computation: selector => this.getElement(selector)\n      });\n      this.spacerError = computed(() => {\n        return !this.spacerElement() && this.externalSpacer() ? `[NgScrollbar]: Spacer element not found for the provided selector \"${this.externalSpacer()}\"` : null;\n      });\n      /**\n       * Reference to the external viewport directive if used\n       */\n      this.customViewport = contentChild(ScrollViewport, {\n        descendants: true\n      });\n    }\n    ngOnDestroy() {\n      if (this._scrollbarsRef) {\n        this.appRef.detachView(this._scrollbarsRef.hostView);\n        this._scrollbarsRef.destroy();\n      }\n    }\n    initialize(viewportElement, contentWrapperElement, spacerElement) {\n      if (this.skipInit) {\n        // If initialized via async detection, then we should set the signals\n        this.viewportElement.set(viewportElement);\n        this.contentWrapperElement.set(contentWrapperElement);\n        this.spacerElement.set(spacerElement);\n      }\n      // If no external spacer and no content wrapper are provided, create a content wrapper element\n      if (!spacerElement && !contentWrapperElement) {\n        contentWrapperElement = this.renderer.createElement('div');\n        // Move all content of the viewport into the content wrapper\n        const childNodes = Array.from(viewportElement.childNodes);\n        childNodes.forEach(node => this.renderer.appendChild(contentWrapperElement, node));\n        // Append the content wrapper to the viewport\n        this.renderer.appendChild(viewportElement, contentWrapperElement);\n      }\n      // Make sure content wrapper element is defined to proceed\n      if (contentWrapperElement) {\n        // Initialize viewport\n        this.viewport.init(viewportElement, contentWrapperElement, spacerElement);\n        // Attach scrollbars\n        this._attachScrollbars();\n      }\n    }\n    _attachScrollbars() {\n      // Create the scrollbars component\n      this._scrollbarsRef = createComponent(Scrollbars, {\n        environmentInjector: this.appRef.injector,\n        elementInjector: Injector.create({\n          providers: [{\n            provide: NG_SCROLLBAR,\n            useValue: this\n          }]\n        })\n      });\n      // Attach scrollbar to the content wrapper\n      this.renderer.appendChild(this.viewport.contentWrapperElement, this._scrollbarsRef.location.nativeElement);\n      // Attach the host view of the component to the main change detection tree, so that its lifecycle hooks run.\n      this.appRef.attachView(this._scrollbarsRef.hostView);\n      // Set the scrollbars instance\n      this._scrollbars.set(this._scrollbarsRef.instance);\n    }\n    getElement(selector) {\n      return selector ? this.nativeElement.querySelector(selector) : null;\n    }\n    static {\n      this.ɵfac = function NgScrollbarExt_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgScrollbarExt)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: NgScrollbarExt,\n        selectors: [[\"ng-scrollbar\", \"externalViewport\", \"\"]],\n        contentQueries: function NgScrollbarExt_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuerySignal(dirIndex, ctx.customViewport, ScrollViewport, 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵqueryAdvance();\n          }\n        },\n        hostAttrs: [\"ngSkipHydration\", \"true\"],\n        hostVars: 2,\n        hostBindings: function NgScrollbarExt_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-scrollbar-external-viewport\", true);\n          }\n        },\n        inputs: {\n          externalViewport: [1, \"externalViewport\"],\n          externalContentWrapper: [1, \"externalContentWrapper\"],\n          externalSpacer: [1, \"externalSpacer\"]\n        },\n        exportAs: [\"ngScrollbar\"],\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_SCROLLBAR,\n          useExisting: NgScrollbarExt\n        }, {\n          provide: NgScrollbarCore,\n          useExisting: NgScrollbar\n        }, ViewportAdapter]), i0.ɵɵInheritDefinitionFeature],\n        attrs: _c4,\n        ngContentSelectors: _c3,\n        decls: 1,\n        vars: 0,\n        template: function NgScrollbarExt_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c5],\n        changeDetection: 0\n      });\n    }\n  }\n  return NgScrollbarExt;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AsyncDetection = /*#__PURE__*/(() => {\n  class AsyncDetection {\n    constructor() {\n      this.scrollbar = inject(NgScrollbarExt, {\n        self: true\n      });\n      this.zone = inject(NgZone);\n      this.contentObserver = inject(ContentObserver);\n      this.asyncDetection = input();\n      this.scrollbar.skipInit = true;\n      let sub$;\n      effect(onCleanup => {\n        const init = this.scrollbar.viewport.initialized();\n        const externalViewport = this.scrollbar.externalViewport();\n        const externalContentWrapper = this.scrollbar.externalContentWrapper();\n        const externalSpacer = this.scrollbar.externalSpacer();\n        const asyncDetection = this.asyncDetection();\n        untracked(() => {\n          let viewportElement;\n          let contentWrapperElement;\n          this.zone.runOutsideAngular(() => {\n            // The content observer should not be throttled using the same function we use for ResizeObserver,\n            // It should detect the content change asap to attach the scrollbar\n            sub$ = this.contentObserver.observe(this.scrollbar.nativeElement).pipe(throttleTime(100, null, {\n              leading: true,\n              trailing: true\n            })).subscribe(() => {\n              // Search for external viewport\n              viewportElement = this.scrollbar.nativeElement.querySelector(externalViewport);\n              // Search for external content wrapper\n              contentWrapperElement = this.scrollbar.nativeElement.querySelector(externalContentWrapper);\n              this.zone.run(() => {\n                if (!init && viewportElement && contentWrapperElement) {\n                  // If an external spacer selector is provided, search for it\n                  let spacerElement;\n                  if (externalSpacer) {\n                    spacerElement = this.scrollbar.nativeElement.querySelector(externalSpacer);\n                  }\n                  this.scrollbar.initialize(viewportElement, contentWrapperElement, spacerElement);\n                } else if (!viewportElement || !contentWrapperElement) {\n                  this.scrollbar.viewport.reset();\n                }\n              });\n              if (asyncDetection !== 'auto') {\n                sub$.unsubscribe();\n              }\n            });\n          });\n          onCleanup(() => sub$?.unsubscribe());\n        });\n      });\n    }\n    static {\n      this.ɵfac = function AsyncDetection_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AsyncDetection)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AsyncDetection,\n        selectors: [[\"ng-scrollbar\", \"externalViewport\", \"\", \"asyncDetection\", \"\"]],\n        inputs: {\n          asyncDetection: [1, \"asyncDetection\"]\n        }\n      });\n    }\n  }\n  return AsyncDetection;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SyncSpacer = /*#__PURE__*/(() => {\n  class SyncSpacer {\n    constructor() {\n      this.sharedResizeObserver = inject(SharedResizeObserver);\n      this.scrollbar = inject(NgScrollbarExt, {\n        self: true\n      });\n      this.zone = inject(NgZone);\n      /**\n       * A signal used to sync spacer dimension when content dimension changes\n       */\n      this.spacerDimension = signal({});\n      let sub$;\n      effect(onCleanup => {\n        const spacerElement = this.scrollbar.spacerElement();\n        const contentWrapperElement = this.scrollbar.contentWrapperElement();\n        const throttleDuration = this.scrollbar.sensorThrottleTime();\n        const disableSensor = this.scrollbar.disableSensor();\n        untracked(() => {\n          if (!disableSensor && contentWrapperElement && spacerElement) {\n            // Sync spacer dimension with content wrapper dimensions to allow both scrollbars to be displayed\n            this.zone.runOutsideAngular(() => {\n              sub$ = getThrottledStream(this.sharedResizeObserver.observe(contentWrapperElement), throttleDuration).pipe(map(entries => filterResizeEntries(entries, contentWrapperElement))).subscribe(() => {\n                this.zone.run(() => {\n                  // Use animation frame to avoid \"ResizeObserver loop completed with undelivered notifications.\" error\n                  requestAnimationFrame(() => {\n                    this.spacerDimension.set({\n                      width: contentWrapperElement.offsetWidth,\n                      height: contentWrapperElement.offsetHeight\n                    });\n                  });\n                });\n              });\n            });\n          }\n          onCleanup(() => sub$?.unsubscribe());\n        });\n      });\n    }\n    static {\n      this.ɵfac = function SyncSpacer_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SyncSpacer)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SyncSpacer,\n        selectors: [[\"ng-scrollbar\", \"externalViewport\", \"\", \"syncSpacer\", \"\"]],\n        hostVars: 4,\n        hostBindings: function SyncSpacer_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"--spacer-width\", ctx.spacerDimension().width)(\"--spacer-height\", ctx.spacerDimension().height);\n          }\n        }\n      });\n    }\n  }\n  return SyncSpacer;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgScrollbarModule = /*#__PURE__*/(() => {\n  class NgScrollbarModule {\n    static {\n      this.ɵfac = function NgScrollbarModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgScrollbarModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NgScrollbarModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return NgScrollbarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideScrollbarOptions(options) {\n  return [{\n    provide: NG_SCROLLBAR_OPTIONS,\n    useValue: {\n      ...defaultOptions,\n      ...options\n    }\n  }];\n}\nfunction provideScrollbarPolyfill(url) {\n  return makeEnvironmentProviders([{\n    provide: NG_SCROLLBAR_POLYFILL,\n    useValue: url\n  }]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsyncDetection, NG_SCROLLBAR, NG_SCROLLBAR_OPTIONS, NG_SCROLLBAR_POLYFILL, NgScrollbar, NgScrollbarExt, NgScrollbarModule, ScrollViewport, ScrollbarUpdateReason, SyncSpacer, filterResizeEntries, provideScrollbarOptions, provideScrollbarPolyfill };\n","/**\n * @license Angular v19.2.8\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, forwardRef, Optional, Inject, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, ɵRuntimeError as _RuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, inject, Injectable, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM as _getDOM } from '@angular/common';\nimport { from, forkJoin, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    _renderer;\n    _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    onTouched = () => {};\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static ɵfac = function BaseControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(__ngFactoryType__ || BuiltInControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(__ngFactoryType__ || CheckboxControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = _getDOM() ? _getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    _composing = false;\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static ɵfac = function DefaultValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  return value == null || lengthOrSize(value) === 0;\n}\n/**\n * Extract the length property in case it's an array or a string.\n * Extract the size property in case it's a set.\n * Return null else.\n * @param value Either an array, set or undefined.\n */\nfunction lengthOrSize(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  if (value == null) {\n    return null;\n  } else if (Array.isArray(value) || typeof value === 'string') {\n    return value.length;\n  } else if (value instanceof Set) {\n    return value.size;\n  }\n  return null;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```ts\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```ts\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```ts\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```ts\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```ts\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets. The `minLength` validator logic is also not invoked for values when their `length` or\n   * `size` property is 0 (for example in case of an empty string or an empty array), to support\n   * optional controls. You can use the standard `required` validator if empty values should not be\n   * considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```ts\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```ts\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```ts\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```ts\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator();\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (control.value == null || min == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (control.value == null || max == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n *\n * The minLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length === null || length === 0) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` or `size` property\n      return null;\n    }\n    return length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n *\n * The maxLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length !== null && length > maxLength) {\n      return {\n        'maxlength': {\n          'requiredLength': maxLength,\n          'actualLength': length\n        }\n      };\n    }\n    return null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = _isPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !_isSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new _RuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Set of synchronous validators as they were provided while calling `setValidators` function.\n   * @internal\n   */\n  _rawValidators = [];\n  /**\n   * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n   * function.\n   * @internal\n   */\n  _rawAsyncValidators = [];\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /*\n   * The set of callbacks to be invoked when directive instance is being destroyed.\n   */\n  _onDestroyCallbacks = [];\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The name for the control\n   */\n  name;\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent = null;\n  /**\n   * @description\n   * The name for the control\n   */\n  name = null;\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  _cd;\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // track the submitted signal\n    this._cd?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatus_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatusGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException(nameOrIndex) {\n  return new _RuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n  if (nameOrIndex == null || nameOrIndex === '') {\n    return '';\n  }\n  const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n  return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n  return new _RuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new _RuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new _RuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new _RuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n  value;\n  source;\n  constructor(value, source) {\n    super();\n    this.value = value;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n  pristine;\n  source;\n  constructor(pristine, source) {\n    super();\n    this.pristine = pristine;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n  touched;\n  source;\n  constructor(touched, source) {\n    super();\n    this.touched = touched;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n  status;\n  source;\n  constructor(status, source) {\n    super();\n    this.status = status;\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new _RuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new _RuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new _RuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /** @internal */\n  _pendingDirty = false;\n  /**\n   * Indicates that a control has its own pending asynchronous validation in progress.\n   * It also stores if the control should emit events when the validation status changes.\n   *\n   * @internal\n   */\n  _hasOwnPendingAsyncValidator = null;\n  /** @internal */\n  _pendingTouched = false;\n  /** @internal */\n  _onCollectionChange = () => {};\n  /** @internal */\n  _updateOn;\n  _parent = null;\n  _asyncValidationSubscription;\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   *\n   * @internal\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   *\n   * @internal\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Synchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setValidators` function\n   *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n   *\n   * @internal\n   */\n  _rawValidators;\n  /**\n   * Asynchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setAsyncValidators` function\n   *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n   * asyncValidatorFn`)\n   *\n   * @internal\n   */\n  _rawAsyncValidators;\n  /**\n   * The current value of the control.\n   *\n   * * For a `FormControl`, the current value.\n   * * For an enabled `FormGroup`, the values of enabled controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a disabled `FormGroup`, the values of all controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a `FormArray`, the values of enabled controls as an array.\n   *\n   */\n  value;\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * The validation status of the control.\n   *\n   * @see {@link FormControlStatus}\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  get status() {\n    return untracked(this.statusReactive);\n  }\n  set status(v) {\n    untracked(() => this.statusReactive.set(v));\n  }\n  /** @internal */\n  _status = /*#__PURE__*/computed(() => this.statusReactive());\n  statusReactive = /*#__PURE__*/signal(undefined);\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * An object containing any errors generated by failing validation,\n   * or null if there are no errors.\n   */\n  errors;\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get pristine() {\n    return untracked(this.pristineReactive);\n  }\n  set pristine(v) {\n    untracked(() => this.pristineReactive.set(v));\n  }\n  /** @internal */\n  _pristine = /*#__PURE__*/computed(() => this.pristineReactive());\n  pristineReactive = /*#__PURE__*/signal(true);\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  get touched() {\n    return untracked(this.touchedReactive);\n  }\n  set touched(v) {\n    untracked(() => this.touchedReactive.set(v));\n  }\n  /** @internal */\n  _touched = /*#__PURE__*/computed(() => this.touchedReactive());\n  touchedReactive = /*#__PURE__*/signal(false);\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Exposed as observable, see below.\n   *\n   * @internal\n   */\n  _events = /*#__PURE__*/new Subject();\n  /**\n   * A multicasting observable that emits an event every time the state of the control changes.\n   * It emits for value, status, pristine or touched changes.\n   *\n   * **Note**: On value change, the emit happens right after a value of this control is updated. The\n   * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n   * later, so accessing a value of a parent control (using the `value` property) from the callback\n   * of this event might result in getting a value that has not been updated yet. Subscribe to the\n   * `events` of the parent control instead.\n   * For other event types, the events are emitted after the parent control has been updated.\n   *\n   */\n  events = /*#__PURE__*/this._events.asObservable();\n  /**\n   * A multicasting observable that emits an event every time the value of the control changes, in\n   * the UI or programmatically. It also emits an event each time you call enable() or disable()\n   * without passing along {emitEvent: false} as a function argument.\n   *\n   * **Note**: the emit happens right after a value of this control is updated. The value of a\n   * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n   * accessing a value of a parent control (using the `value` property) from the callback of this\n   * event might result in getting a value that has not been updated yet. Subscribe to the\n   * `valueChanges` event of the parent control instead.\n   */\n  valueChanges;\n  /**\n   * A multicasting observable that emits an event every time the validation `status` of the control\n   * recalculates.\n   *\n   * @see {@link FormControlStatus}\n   * @see {@link AbstractControl.status}\n   */\n  statusChanges;\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  markAsTouched(opts = {}) {\n    const changed = this.touched === false;\n    this.touched = true;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(true, sourceControl));\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n   * When false, no events are emitted.\n   */\n  markAllAsTouched(opts = {}) {\n    this.markAsTouched({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsTouched(opts));\n  }\n  markAsUntouched(opts = {}) {\n    const changed = this.touched === true;\n    this.touched = false;\n    this._pendingTouched = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true,\n        emitEvent: opts.emitEvent,\n        sourceControl\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(false, sourceControl));\n    }\n  }\n  markAsDirty(opts = {}) {\n    const changed = this.pristine === true;\n    this.pristine = false;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(false, sourceControl));\n    }\n  }\n  markAsPristine(opts = {}) {\n    const changed = this.pristine === false;\n    this.pristine = true;\n    this._pendingDirty = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.markAsPristine({\n        onlySelf: true,\n        emitEvent: opts.emitEvent\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(true, sourceControl));\n    }\n  }\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n   * `valueChanges` and `events`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts, sourceControl) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine({}, sourceControl);\n      }\n      this._parent._updateTouched({}, sourceControl);\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      const shouldHaveEmitted = this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        // If the canceled subscription should have emitted\n        // we make sure the async validator emits the status change on completion\n        this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n      }\n    }\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = {\n        emitEvent: emitEvent !== false\n      };\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = null;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent,\n          shouldHaveEmitted\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      // we're cancelling the validator subscribtion, we keep if it should have emitted\n      // because we want to emit eventually if it was required at least once.\n      const shouldHaveEmitted = this._hasOwnPendingAsyncValidator?.emitEvent ?? false;\n      this._hasOwnPendingAsyncValidator = null;\n      return shouldHaveEmitted;\n    }\n    return false;\n  }\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    // The Events Observable expose a slight different bevahior than the statusChanges obs\n    // An async validator will still emit a StatusChangeEvent is a previously cancelled\n    // async validator has emitEvent set to true\n    if (emitEvent || shouldHaveEmitted) {\n      this._events.next(new StatusChangeEvent(this.status, changedControl));\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    // TODO: this should be piped from events() but is breaking in G3\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts, changedControl) {\n    const newPristine = !this._anyControlsDirty();\n    const changed = this.pristine !== newPristine;\n    this.pristine = newPristine;\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, changedControl);\n    }\n    if (changed) {\n      this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}, changedControl) {\n    this.touched = this._anyControlsTouched();\n    this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, changedControl);\n    }\n  }\n  /** @internal */\n  _onDisabledChange = [];\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue(/* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this.submittedReactive);\n    }\n    /** @internal */\n    _submitted = computed(() => this.submittedReactive());\n    submittedReactive = signal(false);\n    _directives = new Set();\n    /**\n     * @description\n     * The `FormGroup` instance created for this form.\n     */\n    form;\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    ngSubmit = new EventEmitter();\n    /**\n     * @description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submittedReactive.set(true);\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      this.form._events.next(new FormSubmittedEvent(this.control));\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submittedReactive.set(false);\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static ɵfac = function NgForm_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [0, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  /** @publicApi */\n  defaultValue = null;\n  /** @internal */\n  _onChange = [];\n  /** @internal */\n  _pendingValue;\n  /** @internal */\n  _pendingChange = false;\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * The parent control for the group\n     *\n     * @internal\n     */\n    _parent;\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(__ngFactoryType__) {\n        return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(__ngFactoryType__ || AbstractFormGroupDirective);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractFormGroupDirective,\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new _RuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new _RuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new _RuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new _RuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    name = '';\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static ɵfac = function NgModelGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [0, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    _changeDetectorRef;\n    callSetDisabledState;\n    control = new FormControl();\n    // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n    // This is not reflected in the type of the property because outside of templates, consumers\n    // should only deal with booleans. In templates, a string is allowed for convenience and to\n    // match the native \"disabled attribute\" semantics which can be observed on input elements.\n    // This static member tells the compiler that values of type \"string\" can also be assigned\n    // to the input in a template.\n    /** @nodoc */\n    static ngAcceptInputType_isDisabled;\n    /** @internal */\n    _registered = false;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    name = '';\n    /**\n     * @description\n     * Tracks whether the control is disabled.\n     */\n    isDisabled;\n    /**\n     * @description\n     * Tracks the value bound to this directive.\n     */\n    model;\n    /**\n     * @description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n     * has no effect.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    update = new EventEmitter();\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n        checkParentType$1(this._parent);\n      }\n      this._checkName();\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static ɵfac = function NgModel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"],\n        options: [0, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction checkParentType$1(parent) {\n  if (!(parent instanceof NgModelGroup) && parent instanceof AbstractFormGroupDirective) {\n    throw formGroupNameException();\n  } else if (!(parent instanceof NgModelGroup) && !(parent instanceof NgForm)) {\n    throw modelParentException();\n  }\n}\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static ɵfac = function ɵNgNoValidate_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgNoValidate)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"],\n      standalone: false\n    });\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(__ngFactoryType__ || NumberValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new _RuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    _accessors = [];\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static ɵfac = function RadioControlRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlRegistry)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    _registry;\n    _injector;\n    /** @internal */\n    _state;\n    /** @internal */\n    _control;\n    /** @internal */\n    _fn;\n    setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    onChange = () => {};\n    /**\n     * @description\n     * Tracks the name of the radio input element.\n     */\n    name;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     */\n    formControlName;\n    /**\n     * @description\n     * Tracks the value of the radio input element\n     */\n    value;\n    callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static ɵfac = function RadioControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(__ngFactoryType__ || RangeValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    _ngModelWarningConfig;\n    callSetDisabledState;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    form;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static ɵfac = function FormControlDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [0, \"formControl\", \"form\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n      this._submittedReactive.set(value);\n    }\n    /** @internal */\n    _submitted = computed(() => this._submittedReactive());\n    _submittedReactive = signal(false);\n    /**\n     * Reference to an old form group input value, which is needed to cleanup\n     * old instance in case it was replaced with a new one.\n     */\n    _oldForm;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    _onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    ngSubmit = new EventEmitter();\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n        throw missingFormException();\n      }\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this._submittedReactive.set(true);\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      this.form._events.next(new FormSubmittedEvent(this.control));\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this._submittedReactive.set(false);\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    static ɵfac = function FormGroupDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [0, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static ɵfac = function FormGroupName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [0, \"formGroupName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    /** @internal */\n    _parent;\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      this.formDirective?.removeFormArray(this);\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    static ɵfac = function FormArrayName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [0, \"formArrayName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    _ngModelWarningConfig;\n    _added = false;\n    /**\n     * Internal reference to the view model value.\n     * @internal\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    control;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    name = null;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _setUpControl() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        checkParentType(this._parent, this.name);\n      }\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static ɵfac = function FormControlName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [0, \"formControlName\", \"name\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction checkParentType(parent, name) {\n  if (!(parent instanceof FormGroupName) && parent instanceof AbstractFormGroupDirective) {\n    throw ngModelGroupException();\n  } else if (!(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName)) {\n    throw controlParentException(name);\n  }\n}\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    /** @nodoc */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(__ngFactoryType__ || SelectControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    _element;\n    _renderer;\n    _select;\n    /**\n     * @description\n     * ID of the option element\n     */\n    id;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function NgSelectOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * The current value.\n     * @nodoc\n     */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(__ngFactoryType__ || SelectMultipleControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    _element;\n    _renderer;\n    _select;\n    id;\n    /** @internal */\n    _value;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function ɵNgSelectMultipleOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    _validator = nullValidator;\n    _onChange;\n    /**\n     * A flag that tracks whether this validator is enabled.\n     *\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n     * directive classes that extend this base class.\n     * @internal\n     */\n    _enabled;\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n    static ɵfac = function AbstractValidatorDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AbstractValidatorDirective)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the max bound to this directive.\n     */\n    max;\n    /** @internal */\n    inputName = 'max';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = max => maxValidator(max);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(__ngFactoryType__ || MaxValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the min bound to this directive.\n     */\n    min;\n    /** @internal */\n    inputName = 'min';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = min => minValidator(min);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinValidator_BaseFactory;\n      return function MinValidator_Factory(__ngFactoryType__) {\n        return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(__ngFactoryType__ || MinValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    required;\n    /** @internal */\n    inputName = 'required';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => requiredValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(__ngFactoryType__ || RequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    /** @internal */\n    createValidator = input => requiredTrueValidator;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(__ngFactoryType__ || CheckboxRequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    email;\n    /** @internal */\n    inputName = 'email';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => emailValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(__ngFactoryType__) {\n        return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(__ngFactoryType__ || EmailValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the minimum length bound to this directive.\n     */\n    minlength;\n    /** @internal */\n    inputName = 'minlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = minlength => minLengthValidator(minlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(__ngFactoryType__ || MinLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the maximum length bound to this directive.\n     */\n    maxlength;\n    /** @internal */\n    inputName = 'maxlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = maxlength => maxLengthValidator(maxlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(__ngFactoryType__ || MaxLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the pattern bound to this directive.\n     */\n    pattern; // This input is always defined, since the name matches selector.\n    /** @internal */\n    inputName = 'pattern';\n    /** @internal */\n    normalizeInput = input => input;\n    /** @internal */\n    createValidator = input => patternValidator(input);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(__ngFactoryType__) {\n        return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(__ngFactoryType__ || PatternValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static ɵfac = function ɵInternalFormsSharedModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵInternalFormsSharedModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ɵInternalFormsSharedModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```ts\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    useNonNullable = false;\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static ɵfac = function FormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static ɵfac = function NonNullableFormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NonNullableFormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(__ngFactoryType__) {\n        return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(__ngFactoryType__ || UntypedFormBuilder);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.2.8');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function FormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function ReactiveFormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ReactiveFormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ReactiveFormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, ViewChild, ViewEncapsulation, ChangeDetectionStrategy, Component, ChangeDetectorRef, Injector, contentChild, ANIMATION_MODULE_TYPE, computed, afterRender, ContentChildren, ContentChild } from '@angular/core';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"textField\"];\nconst _c4 = [\"iconPrefixContainer\"];\nconst _c5 = [\"textPrefixContainer\"];\nconst _c6 = [\"iconSuffixContainer\"];\nconst _c7 = [\"textSuffixContainer\"];\nconst _c8 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c9 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(!ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 4);\n    i0.ɵɵprojection(2, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction MatFormField_Case_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 6);\n  }\n}\nfunction MatFormField_Case_19_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Case_19_Conditional_0_Template, 2, 2, \"mat-hint\", 21);\n    i0.ɵɵprojection(1, 7);\n    i0.ɵɵelement(2, \"div\", 22);\n    i0.ɵɵprojection(3, 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1.hintLabel ? 0 : -1);\n  }\n}\nlet MatLabel = /*#__PURE__*/(() => {\n  class MatLabel {\n    static ɵfac = function MatLabel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatLabel)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatLabel,\n      selectors: [[\"mat-label\"]]\n    });\n  }\n  return MatLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = /*#__PURE__*/new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nlet MatError = /*#__PURE__*/(() => {\n  class MatError {\n    id = inject(_IdGenerator).getId('mat-mdc-error-');\n    constructor() {}\n    static ɵfac = function MatError_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatError)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatError,\n      selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n      hostVars: 1,\n      hostBindings: function MatError_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }])]\n    });\n  }\n  return MatError;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Hint text to be shown underneath the form field control. */\nlet MatHint = /*#__PURE__*/(() => {\n  class MatHint {\n    /** Whether to align the hint label at the start or end of the line. */\n    align = 'start';\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n    id = inject(_IdGenerator).getId('mat-mdc-hint-');\n    static ɵfac = function MatHint_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatHint)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHint,\n      selectors: [[\"mat-hint\"]],\n      hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n      hostVars: 4,\n      hostBindings: function MatHint_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n        }\n      },\n      inputs: {\n        align: \"align\",\n        id: \"id\"\n      }\n    });\n  }\n  return MatHint;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = /*#__PURE__*/new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nlet MatPrefix = /*#__PURE__*/(() => {\n  class MatPrefix {\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = function MatPrefix_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPrefix)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPrefix,\n      selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n      inputs: {\n        _isTextSelector: [0, \"matTextPrefix\", \"_isTextSelector\"]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }])]\n    });\n  }\n  return MatPrefix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = /*#__PURE__*/new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nlet MatSuffix = /*#__PURE__*/(() => {\n  class MatSuffix {\n    set _isTextSelector(value) {\n      this._isText = true;\n    }\n    _isText = false;\n    static ɵfac = function MatSuffix_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSuffix)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSuffix,\n      selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n      inputs: {\n        _isTextSelector: [0, \"matTextSuffix\", \"_isTextSelector\"]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }])]\n    });\n  }\n  return MatSuffix;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = /*#__PURE__*/new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nlet MatFormFieldFloatingLabel = /*#__PURE__*/(() => {\n  class MatFormFieldFloatingLabel {\n    _elementRef = inject(ElementRef);\n    /** Whether the label is floating. */\n    get floating() {\n      return this._floating;\n    }\n    set floating(value) {\n      this._floating = value;\n      if (this.monitorResize) {\n        this._handleResize();\n      }\n    }\n    _floating = false;\n    /** Whether to monitor for resize events on the floating label. */\n    get monitorResize() {\n      return this._monitorResize;\n    }\n    set monitorResize(value) {\n      this._monitorResize = value;\n      if (this._monitorResize) {\n        this._subscribeToResize();\n      } else {\n        this._resizeSubscription.unsubscribe();\n      }\n    }\n    _monitorResize = false;\n    /** The shared ResizeObserver. */\n    _resizeObserver = inject(SharedResizeObserver);\n    /** The Angular zone. */\n    _ngZone = inject(NgZone);\n    /** The parent form-field. */\n    _parent = inject(FLOATING_LABEL_PARENT);\n    /** The current resize event subscription. */\n    _resizeSubscription = new Subscription();\n    constructor() {}\n    ngOnDestroy() {\n      this._resizeSubscription.unsubscribe();\n    }\n    /** Gets the width of the label. Used for the outline notch. */\n    getWidth() {\n      return estimateScrollWidth(this._elementRef.nativeElement);\n    }\n    /** Gets the HTML element for the floating label. */\n    get element() {\n      return this._elementRef.nativeElement;\n    }\n    /** Handles resize events from the ResizeObserver. */\n    _handleResize() {\n      // In the case where the label grows in size, the following sequence of events occurs:\n      // 1. The label grows by 1px triggering the ResizeObserver\n      // 2. The notch is expanded to accommodate the entire label\n      // 3. The label expands to its full width, triggering the ResizeObserver again\n      //\n      // This is expected, but If we allow this to all happen within the same macro task it causes an\n      // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n      // the next macro task.\n      setTimeout(() => this._parent._handleLabelResized());\n    }\n    /** Subscribes to resize events. */\n    _subscribeToResize() {\n      this._resizeSubscription.unsubscribe();\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n          box: 'border-box'\n        }).subscribe(() => this._handleResize());\n      });\n    }\n    static ɵfac = function MatFormFieldFloatingLabel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormFieldFloatingLabel)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldFloatingLabel,\n      selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n      hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n      hostVars: 2,\n      hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n        }\n      },\n      inputs: {\n        floating: \"floating\",\n        monitorResize: \"monitorResize\"\n      }\n    });\n  }\n  return MatFormFieldFloatingLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nlet MatFormFieldLineRipple = /*#__PURE__*/(() => {\n  class MatFormFieldLineRipple {\n    _elementRef = inject(ElementRef);\n    _cleanupTransitionEnd;\n    constructor() {\n      const ngZone = inject(NgZone);\n      const renderer = inject(Renderer2);\n      ngZone.runOutsideAngular(() => {\n        this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n      });\n    }\n    activate() {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove(DEACTIVATING_CLASS);\n      classList.add(ACTIVATE_CLASS);\n    }\n    deactivate() {\n      this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n    }\n    _handleTransitionEnd = event => {\n      const classList = this._elementRef.nativeElement.classList;\n      const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n      if (event.propertyName === 'opacity' && isDeactivating) {\n        classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n      }\n    };\n    ngOnDestroy() {\n      this._cleanupTransitionEnd();\n    }\n    static ɵfac = function MatFormFieldLineRipple_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormFieldLineRipple)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldLineRipple,\n      selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n      hostAttrs: [1, \"mdc-line-ripple\"]\n    });\n  }\n  return MatFormFieldLineRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nlet MatFormFieldNotchedOutline = /*#__PURE__*/(() => {\n  class MatFormFieldNotchedOutline {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    /** Whether the notch should be opened. */\n    open = false;\n    _notch;\n    constructor() {}\n    ngAfterViewInit() {\n      const label = this._elementRef.nativeElement.querySelector('.mdc-floating-label');\n      if (label) {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--upgraded');\n        if (typeof requestAnimationFrame === 'function') {\n          label.style.transitionDuration = '0s';\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => label.style.transitionDuration = '');\n          });\n        }\n      } else {\n        this._elementRef.nativeElement.classList.add('mdc-notched-outline--no-label');\n      }\n    }\n    _setNotchWidth(labelWidth) {\n      if (!this.open || !labelWidth) {\n        this._notch.nativeElement.style.width = '';\n      } else {\n        const NOTCH_ELEMENT_PADDING = 8;\n        const NOTCH_ELEMENT_BORDER = 1;\n        this._notch.nativeElement.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n      }\n    }\n    static ɵfac = function MatFormFieldNotchedOutline_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormFieldNotchedOutline)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFormFieldNotchedOutline,\n      selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n      viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mdc-notched-outline\"],\n      hostVars: 2,\n      hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n        }\n      },\n      inputs: {\n        open: [0, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n      },\n      attrs: _c1,\n      ngContentSelectors: _c2,\n      decls: 5,\n      vars: 0,\n      consts: [[\"notch\", \"\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__leading\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__notch\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__trailing\"]],\n      template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"div\", 1);\n          i0.ɵɵelementStart(1, \"div\", 2, 0);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"div\", 3);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatFormFieldNotchedOutline;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nlet MatFormFieldControl = /*#__PURE__*/(() => {\n  class MatFormFieldControl {\n    /** The value of the control. */\n    value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     */\n    stateChanges;\n    /** The element ID for this control. */\n    id;\n    /** The placeholder for this control. */\n    placeholder;\n    /** Gets the AbstractControlDirective for this control. */\n    ngControl;\n    /** Whether the control is focused. */\n    focused;\n    /** Whether the control is empty. */\n    empty;\n    /** Whether the `MatFormField` label should try to float. */\n    shouldLabelFloat;\n    /** Whether the control is required. */\n    required;\n    /** Whether the control is disabled. */\n    disabled;\n    /** Whether the control is in an error state. */\n    errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     */\n    controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     */\n    autofilled;\n    /**\n     * Value of `aria-describedby` that should be merged with the described-by ids\n     * which are set by the form-field.\n     */\n    userAriaDescribedBy;\n    /**\n     * Whether to automatically assign the ID of the form field as the `for` attribute\n     * on the `<label>` inside the form field. Set this to true to prevent the form\n     * field from associating the label with non-native elements.\n     */\n    disableAutomaticLabeling;\n    static ɵfac = function MatFormFieldControl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormFieldControl)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFormFieldControl\n    });\n  }\n  return MatFormFieldControl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = /*#__PURE__*/new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nlet MatFormField = /*#__PURE__*/(() => {\n  class MatFormField {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality);\n    _platform = inject(Platform);\n    _idGenerator = inject(_IdGenerator);\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    _textField;\n    _iconPrefixContainer;\n    _textPrefixContainer;\n    _iconSuffixContainer;\n    _textSuffixContainer;\n    _floatingLabel;\n    _notchedOutline;\n    _lineRipple;\n    _formFieldControl;\n    _prefixChildren;\n    _suffixChildren;\n    _errorChildren;\n    _hintChildren;\n    _labelChild = contentChild(MatLabel);\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n      return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n      this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    _hideRequiredMarker = false;\n    /**\n     * Theme color of the form field. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/form-field/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /** Whether the label should always float or float as the user types. */\n    get floatLabel() {\n      return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n    }\n    set floatLabel(value) {\n      if (value !== this._floatLabel) {\n        this._floatLabel = value;\n        // For backwards compatibility. Custom form field controls or directives might set\n        // the \"floatLabel\" input and expect the form field view to be updated automatically.\n        // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n        // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    _floatLabel;\n    /** The form field appearance style. */\n    get appearance() {\n      return this._appearance;\n    }\n    set appearance(value) {\n      const oldValue = this._appearance;\n      const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n          throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n        }\n      }\n      this._appearance = newAppearance;\n      if (this._appearance === 'outline' && this._appearance !== oldValue) {\n        // If the appearance has been switched to `outline`, the label offset needs to be updated.\n        // The update can happen once the view has been re-checked, but not immediately because\n        // the view has not been updated and the notched-outline floating label is not present.\n        this._needsOutlineLabelOffsetUpdate = true;\n      }\n    }\n    _appearance = DEFAULT_APPEARANCE;\n    /**\n     * Whether the form field should reserve space for one line of hint/error text (default)\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n     */\n    get subscriptSizing() {\n      return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    set subscriptSizing(value) {\n      this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n    }\n    _subscriptSizing = null;\n    /** Text for the form field hint. */\n    get hintLabel() {\n      return this._hintLabel;\n    }\n    set hintLabel(value) {\n      this._hintLabel = value;\n      this._processHints();\n    }\n    _hintLabel = '';\n    _hasIconPrefix = false;\n    _hasTextPrefix = false;\n    _hasIconSuffix = false;\n    _hasTextSuffix = false;\n    // Unique id for the internal form field label.\n    _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n    // Unique id for the hint label.\n    _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n    /** Gets the current form field control */\n    get _control() {\n      return this._explicitFormFieldControl || this._formFieldControl;\n    }\n    set _control(value) {\n      this._explicitFormFieldControl = value;\n    }\n    _destroyed = new Subject();\n    _isFocused = null;\n    _explicitFormFieldControl;\n    _needsOutlineLabelOffsetUpdate = false;\n    _previousControl = null;\n    _previousControlValidatorFn = null;\n    _stateChanges;\n    _valueChanges;\n    _describedByChanges;\n    _animationsDisabled;\n    constructor() {\n      const defaults = this._defaults;\n      if (defaults) {\n        if (defaults.appearance) {\n          this.appearance = defaults.appearance;\n        }\n        this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n        if (defaults.color) {\n          this.color = defaults.color;\n        }\n      }\n      this._animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      }) === 'NoopAnimations';\n    }\n    ngAfterViewInit() {\n      // Initial focus state sync. This happens rarely, but we want to account for\n      // it in case the form field control has \"focused\" set to true on init.\n      this._updateFocusState();\n      if (!this._animationsDisabled) {\n        this._ngZone.runOutsideAngular(() => {\n          // Enable animations after a certain amount of time so that they don't run on init.\n          setTimeout(() => {\n            this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n          }, 300);\n        });\n      }\n      // Because the above changes a value used in the template after it was checked, we need\n      // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n      this._changeDetectorRef.detectChanges();\n    }\n    ngAfterContentInit() {\n      this._assertFormFieldControl();\n      this._initializeSubscript();\n      this._initializePrefixAndSuffix();\n      this._initializeOutlineLabelOffsetSubscriptions();\n    }\n    ngAfterContentChecked() {\n      this._assertFormFieldControl();\n      // if form field was being used with an input in first place and then replaced by other\n      // component such as select.\n      if (this._control !== this._previousControl) {\n        this._initializeControl(this._previousControl);\n        // keep a reference for last validator we had.\n        if (this._control.ngControl && this._control.ngControl.control) {\n          this._previousControlValidatorFn = this._control.ngControl.control.validator;\n        }\n        this._previousControl = this._control;\n      }\n      // make sure the the control has been initialized.\n      if (this._control.ngControl && this._control.ngControl.control) {\n        // get the validators for current control.\n        const validatorFn = this._control.ngControl.control.validator;\n        // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n        // component will allow us to catch up.\n        if (validatorFn !== this._previousControlValidatorFn) {\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges?.unsubscribe();\n      this._valueChanges?.unsubscribe();\n      this._describedByChanges?.unsubscribe();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId = computed(() => this._hasFloatingLabel() ? this._labelId : null);\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field\n     * should be positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n      return this._textField || this._elementRef;\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n      // This is for backwards compatibility only. Consumers of the form field might use\n      // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n      // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n      // animation. This is different in MDC where the label always animates, so this method\n      // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n      // the floating label state without animations. The non-MDC implementation was inconsistent\n      // because it always animates if \"floatLabel\" is set away from \"always\".\n      // TODO(devversion): consider removing this method when releasing the MDC form field.\n      if (this._hasFloatingLabel()) {\n        this.floatLabel = 'always';\n      }\n    }\n    /** Initializes the registered form field control. */\n    _initializeControl(previousControl) {\n      const control = this._control;\n      const classPrefix = 'mat-mdc-form-field-type-';\n      if (previousControl) {\n        this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n      }\n      if (control.controlType) {\n        this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n      }\n      // Subscribe to changes in the child control state in order to update the form field UI.\n      this._stateChanges?.unsubscribe();\n      this._stateChanges = control.stateChanges.subscribe(() => {\n        this._updateFocusState();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n      this._describedByChanges?.unsubscribe();\n      this._describedByChanges = control.stateChanges.pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n        return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n      })).subscribe(() => this._syncDescribedByIds());\n      this._valueChanges?.unsubscribe();\n      // Run change detection if the value changes.\n      if (control.ngControl && control.ngControl.valueChanges) {\n        this._valueChanges = control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n      }\n    }\n    _checkPrefixAndSuffixTypes() {\n      this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n      this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n      this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n      this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n    }\n    /** Initializes the prefix and suffix containers. */\n    _initializePrefixAndSuffix() {\n      this._checkPrefixAndSuffixTypes();\n      // Mark the form field as dirty whenever the prefix or suffix children change. This\n      // is necessary because we conditionally display the prefix/suffix containers based\n      // on whether there is projected content.\n      merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n        this._checkPrefixAndSuffixTypes();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /**\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n     * with the custom form field control. Also subscribes to hint and error changes in order\n     * to be able to validate and synchronize ids on change.\n     */\n    _initializeSubscript() {\n      // Re-validate when the number of hints changes.\n      this._hintChildren.changes.subscribe(() => {\n        this._processHints();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Update the aria-described by when the number of errors changes.\n      this._errorChildren.changes.subscribe(() => {\n        this._syncDescribedByIds();\n        this._changeDetectorRef.markForCheck();\n      });\n      // Initial mat-hint validation and subscript describedByIds sync.\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /** Throws an error if the form field's control is missing. */\n    _assertFormFieldControl() {\n      if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatFormFieldMissingControlError();\n      }\n    }\n    _updateFocusState() {\n      // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n      // certain DOM events are emitted. This is not possible in our implementation of the\n      // form field because we support abstract form field controls which are not necessarily\n      // of type input, nor do we have a reference to a native form field control element. Instead\n      // we handle the focus by checking if the abstract form field control focused state changes.\n      if (this._control.focused && !this._isFocused) {\n        this._isFocused = true;\n        this._lineRipple?.activate();\n      } else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n        this._isFocused = false;\n        this._lineRipple?.deactivate();\n      }\n      this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n    }\n    /**\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\n     * trigger the label offset update.\n     */\n    _initializeOutlineLabelOffsetSubscriptions() {\n      // Whenever the prefix changes, schedule an update of the label offset.\n      // TODO(mmalerba): Use ResizeObserver to better support dynamically changing prefix content.\n      this._prefixChildren.changes.subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n      // TODO(mmalerba): Split this into separate `afterRender` calls using the `EarlyRead` and\n      //  `Write` phases.\n      afterRender(() => {\n        if (this._needsOutlineLabelOffsetUpdate) {\n          this._needsOutlineLabelOffsetUpdate = false;\n          this._updateOutlineLabelOffset();\n        }\n      }, {\n        injector: this._injector\n      });\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._needsOutlineLabelOffsetUpdate = true);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n      return this.floatLabel === 'always';\n    }\n    _hasOutline() {\n      return this.appearance === 'outline';\n    }\n    /**\n     * Whether the label should display in the infix. Labels in the outline appearance are\n     * displayed as part of the notched-outline and are horizontally offset to account for\n     * form field prefix content. This won't work in server side rendering since we cannot\n     * measure the width of the prefix container. To make the docked label appear as if the\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\n     * the label is part of the infix, the label cannot overflow the prefix content.\n     */\n    _forceDisplayInfixLabel() {\n      return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel = computed(() => !!this._labelChild());\n    _shouldLabelFloat() {\n      if (!this._hasFloatingLabel()) {\n        return false;\n      }\n      return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n      const control = this._control ? this._control.ngControl : null;\n      return control && control[prop];\n    }\n    /** Gets the type of subscript message to render (error or hint). */\n    _getSubscriptMessageType() {\n      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n    }\n    /** Handle label resize events. */\n    _handleLabelResized() {\n      this._refreshOutlineNotchWidth();\n    }\n    /** Refreshes the width of the outline-notch, if present. */\n    _refreshOutlineNotchWidth() {\n      if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n        this._notchedOutline?._setNotchWidth(0);\n      } else {\n        this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n      }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n      this._validateHints();\n      this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n     * label specified set through the input is being considered as \"start\" aligned.\n     *\n     * This method is a noop if Angular runs in production mode.\n     */\n    _validateHints() {\n      if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        let startHint;\n        let endHint;\n        this._hintChildren.forEach(hint => {\n          if (hint.align === 'start') {\n            if (startHint || this.hintLabel) {\n              throw getMatFormFieldDuplicatedHintError('start');\n            }\n            startHint = hint;\n          } else if (hint.align === 'end') {\n            if (endHint) {\n              throw getMatFormFieldDuplicatedHintError('end');\n            }\n            endHint = hint;\n          }\n        });\n      }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n      if (this._control) {\n        let ids = [];\n        // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n        if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n          ids.push(...this._control.userAriaDescribedBy.split(' '));\n        }\n        if (this._getSubscriptMessageType() === 'hint') {\n          const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n          const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n          if (startHint) {\n            ids.push(startHint.id);\n          } else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n          }\n          if (endHint) {\n            ids.push(endHint.id);\n          }\n        } else if (this._errorChildren) {\n          ids.push(...this._errorChildren.map(error => error.id));\n        }\n        this._control.setDescribedByIds(ids);\n      }\n    }\n    /**\n     * Updates the horizontal offset of the label in the outline appearance. In the outline\n     * appearance, the notched-outline and label are not relative to the infix container because\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n     * incorporate the horizontal offset into their default text-field styles.\n     */\n    _updateOutlineLabelOffset() {\n      if (!this._hasOutline() || !this._floatingLabel) {\n        return;\n      }\n      const floatingLabel = this._floatingLabel.element;\n      // If no prefix is displayed, reset the outline label offset from potential\n      // previous label offset updates.\n      if (!(this._iconPrefixContainer || this._textPrefixContainer)) {\n        floatingLabel.style.transform = '';\n        return;\n      }\n      // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n      // the label offset update until the zone stabilizes.\n      if (!this._isAttachedToDom()) {\n        this._needsOutlineLabelOffsetUpdate = true;\n        return;\n      }\n      const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n      const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n      const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n      const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n      const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n      const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n      const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n      // If the directionality is RTL, the x-axis transform needs to be inverted. This\n      // is because `transformX` does not change based on the page directionality.\n      const negate = this._dir.value === 'rtl' ? '-1' : '1';\n      const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n      const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n      const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n      // Update the translateX of the floating label to account for the prefix container,\n      // but allow the CSS to override this setting via a CSS variable when the label is\n      // floating.\n      floatingLabel.style.transform = `var(\n        --mat-mdc-form-field-label-transform,\n        ${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset})\n    )`;\n      // Prevent the label from overlapping the suffix when in resting position.\n      const prefixAndSuffixWidth = iconPrefixContainerWidth + textPrefixContainerWidth + iconSuffixContainerWidth + textSuffixContainerWidth;\n      this._elementRef.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDom() {\n      const element = this._elementRef.nativeElement;\n      if (element.getRootNode) {\n        const rootNode = element.getRootNode();\n        // If the element is inside the DOM the root node will be either the document\n        // or the closest shadow root, otherwise it'll be the element itself.\n        return rootNode && rootNode !== element;\n      }\n      // Otherwise fall back to checking if it's in the document. This doesn't account for\n      // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n      return document.documentElement.contains(element);\n    }\n    static ɵfac = function MatFormField_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormField)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFormField,\n      selectors: [[\"mat-form-field\"]],\n      contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuerySignal(dirIndex, ctx._labelChild, MatLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵqueryAdvance();\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        }\n      },\n      viewQuery: function MatFormField_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n          i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n          i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconSuffixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textSuffixContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-form-field\"],\n      hostVars: 40,\n      hostBindings: function MatFormField_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-focused\", ctx._control.focused)(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n        }\n      },\n      inputs: {\n        hideRequiredMarker: \"hideRequiredMarker\",\n        color: \"color\",\n        floatLabel: \"floatLabel\",\n        appearance: \"appearance\",\n        subscriptSizing: \"subscriptSizing\",\n        hintLabel: \"hintLabel\"\n      },\n      exportAs: [\"matFormField\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }, {\n        provide: FLOATING_LABEL_PARENT,\n        useExisting: MatFormField\n      }])],\n      ngContentSelectors: _c9,\n      decls: 20,\n      vars: 25,\n      consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [\"textSuffixContainer\", \"\"], [\"iconSuffixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [\"aria-atomic\", \"true\", \"aria-live\", \"polite\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n      template: function MatFormField_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c8);\n          i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(2, \"div\", 6, 1);\n          i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n          });\n          i0.ɵɵtemplate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 7);\n          i0.ɵɵelementStart(5, \"div\", 8);\n          i0.ɵɵtemplate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 9)(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 10)(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementStart(9, \"div\", 12);\n          i0.ɵɵtemplate(10, MatFormField_Conditional_10_Template, 1, 1, null, 13);\n          i0.ɵɵprojection(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, MatFormField_Conditional_12_Template, 3, 0, \"div\", 14)(13, MatFormField_Conditional_13_Template, 3, 0, \"div\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 17);\n          i0.ɵɵdeclareLet(16);\n          i0.ɵɵelementStart(17, \"div\", 18);\n          i0.ɵɵtemplate(18, MatFormField_Case_18_Template, 1, 0)(19, MatFormField_Case_19_Template, 4, 1);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_19_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(!ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._hasOutline() ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._hasIconPrefix ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._hasTextPrefix ? 8 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(!ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._hasTextSuffix ? 12 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._hasIconSuffix ? 13 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(!ctx._hasOutline() ? 14 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n          const subscriptMessageType_r4 = ctx._getSubscriptMessageType();\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mat-mdc-form-field-error-wrapper\", subscriptMessageType_r4 === \"error\")(\"mat-mdc-form-field-hint-wrapper\", subscriptMessageType_r4 === \"hint\");\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((tmp_19_0 = subscriptMessageType_r4) === \"error\" ? 18 : tmp_19_0 === \"hint\" ? 19 : -1);\n        }\n      },\n      dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n      styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-filled-text-field-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mdc-filled-text-field-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-filled-text-field-error-caret-color)}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-filled-text-field-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mdc-outlined-text-field-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mdc-outlined-text-field-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mdc-outlined-text-field-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mdc-outlined-text-field-error-caret-color)}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mdc-outlined-text-field-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mdc-filled-text-field-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mdc-filled-text-field-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mdc-filled-text-field-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mdc-filled-text-field-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-filled-text-field-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-filled-text-field-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-filled-text-field-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-filled-text-field-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-filled-text-field-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-filled-text-field-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mdc-filled-text-field-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mdc-filled-text-field-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mdc-filled-text-field-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mdc-filled-text-field-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-outlined-text-field-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mdc-outlined-text-field-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mdc-outlined-text-field-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mdc-outlined-text-field-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mdc-outlined-text-field-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mdc-outlined-text-field-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mdc-outlined-text-field-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mdc-outlined-text-field-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mdc-outlined-text-field-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-outline-color, var(--mat-sys-outline));border-width:var(--mdc-outlined-text-field-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mdc-outlined-text-field-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mdc-outlined-text-field-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),100% - max(12px,var(--mdc-outlined-text-field-container-shape, var(--mat-sys-corner-extra-small)))*2)}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none;--mat-form-field-notch-max-width: 100%}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mdc-filled-text-field-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-filled-text-field-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mdc-filled-text-field-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-filled-text-field-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError };\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix } from './form-field-BPX7ZLIc.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nlet MatFormFieldModule = /*#__PURE__*/(() => {\n  class MatFormFieldModule {\n    static ɵfac = function MatFormFieldModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatFormFieldModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatFormFieldModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, ObserversModule, MatCommonModule]\n    });\n  }\n  return MatFormFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MatFormFieldModule };\n","import * as i0 from '@angular/core';\nimport { ViewEncapsulation, ChangeDetectionStrategy, Component, inject, NgZone, RendererFactory2, ElementRef, EventEmitter, Injectable, Output, Directive, Renderer2, booleanAttribute, Input, NgModule } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { Platform } from './platform-Do3uqmxu.mjs';\nimport { _CdkPrivateStyleLoader } from './style-loader-WcmCyO2o.mjs';\nimport { coerceElement, coerceNumberProperty } from './element-CpqV8p-X.mjs';\nimport { _bindEventWithOptions } from './backwards-compatibility-DYuVCOXM.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport { auditTime } from 'rxjs/operators';\n\n/** Component used to load the structural styles of the text field. */\nlet _CdkTextFieldStyleLoader = /*#__PURE__*/(() => {\n  class _CdkTextFieldStyleLoader {\n    static ɵfac = function _CdkTextFieldStyleLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _CdkTextFieldStyleLoader)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: _CdkTextFieldStyleLoader,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [\"cdk-text-field-style-loader\", \"\"],\n      decls: 0,\n      vars: 0,\n      template: function _CdkTextFieldStyleLoader_Template(rf, ctx) {},\n      styles: [\"textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return _CdkTextFieldStyleLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = {\n  passive: true\n};\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nlet AutofillMonitor = /*#__PURE__*/(() => {\n  class AutofillMonitor {\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(RendererFactory2).createRenderer(null, null);\n    _styleLoader = inject(_CdkPrivateStyleLoader);\n    _monitoredElements = new Map();\n    constructor() {}\n    monitor(elementOrRef) {\n      if (!this._platform.isBrowser) {\n        return EMPTY;\n      }\n      this._styleLoader.load(_CdkTextFieldStyleLoader);\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        return info.subject;\n      }\n      const subject = new Subject();\n      const cssClass = 'cdk-text-field-autofilled';\n      const listener = event => {\n        // Animation events fire on initial element render, we check for the presence of the autofill\n        // CSS class to make sure this is a real change in state, not just the initial render before\n        // we fire off events.\n        if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {\n          element.classList.add(cssClass);\n          this._ngZone.run(() => subject.next({\n            target: event.target,\n            isAutofilled: true\n          }));\n        } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {\n          element.classList.remove(cssClass);\n          this._ngZone.run(() => subject.next({\n            target: event.target,\n            isAutofilled: false\n          }));\n        }\n      };\n      const unlisten = this._ngZone.runOutsideAngular(() => {\n        element.classList.add('cdk-text-field-autofill-monitored');\n        return _bindEventWithOptions(this._renderer, element, 'animationstart', listener, listenerOptions);\n      });\n      this._monitoredElements.set(element, {\n        subject,\n        unlisten\n      });\n      return subject;\n    }\n    stopMonitoring(elementOrRef) {\n      const element = coerceElement(elementOrRef);\n      const info = this._monitoredElements.get(element);\n      if (info) {\n        info.unlisten();\n        info.subject.complete();\n        element.classList.remove('cdk-text-field-autofill-monitored');\n        element.classList.remove('cdk-text-field-autofilled');\n        this._monitoredElements.delete(element);\n      }\n    }\n    ngOnDestroy() {\n      this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    static ɵfac = function AutofillMonitor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AutofillMonitor)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AutofillMonitor,\n      factory: AutofillMonitor.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AutofillMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nlet CdkAutofill = /*#__PURE__*/(() => {\n  class CdkAutofill {\n    _elementRef = inject(ElementRef);\n    _autofillMonitor = inject(AutofillMonitor);\n    /** Emits when the autofill state of the element changes. */\n    cdkAutofill = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      this._autofillMonitor.monitor(this._elementRef).subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n      this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n    static ɵfac = function CdkAutofill_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkAutofill)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkAutofill,\n      selectors: [[\"\", \"cdkAutofill\", \"\"]],\n      outputs: {\n        cdkAutofill: \"cdkAutofill\"\n      }\n    });\n  }\n  return CdkAutofill;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Directive to automatically resize a textarea to fit its content. */\nlet CdkTextareaAutosize = /*#__PURE__*/(() => {\n  class CdkTextareaAutosize {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _resizeEvents = new Subject();\n    /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\n    _previousValue;\n    _initialHeight;\n    _destroyed = new Subject();\n    _listenerCleanups;\n    _minRows;\n    _maxRows;\n    _enabled = true;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     */\n    _previousMinRows = -1;\n    _textareaElement;\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n      return this._minRows;\n    }\n    set minRows(value) {\n      this._minRows = coerceNumberProperty(value);\n      this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n      return this._maxRows;\n    }\n    set maxRows(value) {\n      this._maxRows = coerceNumberProperty(value);\n      this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n      return this._enabled;\n    }\n    set enabled(value) {\n      // Only act if the actual value changed. This specifically helps to not run\n      // resizeToFitContent too early (i.e. before ngAfterViewInit)\n      if (this._enabled !== value) {\n        (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n      }\n    }\n    get placeholder() {\n      return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n      this._cachedPlaceholderHeight = undefined;\n      if (value) {\n        this._textareaElement.setAttribute('placeholder', value);\n      } else {\n        this._textareaElement.removeAttribute('placeholder');\n      }\n      this._cacheTextareaPlaceholderHeight();\n    }\n    /** Cached height of a textarea with a single row. */\n    _cachedLineHeight;\n    /** Cached height of a textarea with only the placeholder. */\n    _cachedPlaceholderHeight;\n    /** Cached scroll top of a textarea */\n    _cachedScrollTop;\n    /** Used to reference correct document/window */\n    _document = inject(DOCUMENT, {\n      optional: true\n    });\n    _hasFocus;\n    _isViewInited = false;\n    constructor() {\n      const styleLoader = inject(_CdkPrivateStyleLoader);\n      styleLoader.load(_CdkTextFieldStyleLoader);\n      this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n      const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n      if (minHeight) {\n        this._textareaElement.style.minHeight = minHeight;\n      }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n      const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n      if (maxHeight) {\n        this._textareaElement.style.maxHeight = maxHeight;\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        // Remember the height which we started with in case autosizing is disabled\n        this._initialHeight = this._textareaElement.style.height;\n        this.resizeToFitContent();\n        this._ngZone.runOutsideAngular(() => {\n          this._listenerCleanups = [this._renderer.listen('window', 'resize', () => this._resizeEvents.next()), this._renderer.listen(this._textareaElement, 'focus', this._handleFocusEvent), this._renderer.listen(this._textareaElement, 'blur', this._handleFocusEvent)];\n          this._resizeEvents.pipe(auditTime(16)).subscribe(() => {\n            // Clear the cached heights since the styles can change\n            // when the window is resized (e.g. by media queries).\n            this._cachedLineHeight = this._cachedPlaceholderHeight = undefined;\n            this.resizeToFitContent(true);\n          });\n        });\n        this._isViewInited = true;\n        this.resizeToFitContent(true);\n      }\n    }\n    ngOnDestroy() {\n      this._listenerCleanups?.forEach(cleanup => cleanup());\n      this._resizeEvents.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n      if (this._cachedLineHeight) {\n        return;\n      }\n      // Use a clone element because we have to override some styles.\n      const textareaClone = this._textareaElement.cloneNode(false);\n      const cloneStyles = textareaClone.style;\n      textareaClone.rows = 1;\n      // Use `position: absolute` so that this doesn't cause a browser layout and use\n      // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n      // would affect the height.\n      cloneStyles.position = 'absolute';\n      cloneStyles.visibility = 'hidden';\n      cloneStyles.border = 'none';\n      cloneStyles.padding = '0';\n      cloneStyles.height = '';\n      cloneStyles.minHeight = '';\n      cloneStyles.maxHeight = '';\n      // App styles might be messing with the height through the positioning properties.\n      cloneStyles.top = cloneStyles.bottom = cloneStyles.left = cloneStyles.right = 'auto';\n      // In Firefox it happens that textarea elements are always bigger than the specified amount\n      // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n      // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n      // to hidden. This ensures that there is no invalid calculation of the line height.\n      // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n      cloneStyles.overflow = 'hidden';\n      this._textareaElement.parentNode.appendChild(textareaClone);\n      this._cachedLineHeight = textareaClone.clientHeight;\n      textareaClone.remove();\n      // Min and max heights have to be re-calculated if the cached line height changes\n      this._setMinHeight();\n      this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n      const element = this._textareaElement;\n      const previousMargin = element.style.marginBottom || '';\n      const isFirefox = this._platform.FIREFOX;\n      const needsMarginFiller = isFirefox && this._hasFocus;\n      const measuringClass = isFirefox ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';\n      // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n      // work around it by assigning a temporary margin with the same height as the `textarea` so that\n      // it occupies the same amount of space. See #23233.\n      if (needsMarginFiller) {\n        element.style.marginBottom = `${element.clientHeight}px`;\n      }\n      // Reset the textarea height to auto in order to shrink back to its default size.\n      // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n      element.classList.add(measuringClass);\n      // The measuring class includes a 2px padding to workaround an issue with Chrome,\n      // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n      const scrollHeight = element.scrollHeight - 4;\n      element.classList.remove(measuringClass);\n      if (needsMarginFiller) {\n        element.style.marginBottom = previousMargin;\n      }\n      return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n      if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n        return;\n      }\n      if (!this.placeholder) {\n        this._cachedPlaceholderHeight = 0;\n        return;\n      }\n      const value = this._textareaElement.value;\n      this._textareaElement.value = this._textareaElement.placeholder;\n      this._cachedPlaceholderHeight = this._measureScrollHeight();\n      this._textareaElement.value = value;\n    }\n    /** Handles `focus` and `blur` events. */\n    _handleFocusEvent = event => {\n      this._hasFocus = event.type === 'focus';\n    };\n    ngDoCheck() {\n      if (this._platform.isBrowser) {\n        this.resizeToFitContent();\n      }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n      // If autosizing is disabled, just skip everything else\n      if (!this._enabled) {\n        return;\n      }\n      this._cacheTextareaLineHeight();\n      this._cacheTextareaPlaceholderHeight();\n      this._cachedScrollTop = this._textareaElement.scrollTop;\n      // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n      // in checking the height of the textarea.\n      if (!this._cachedLineHeight) {\n        return;\n      }\n      const textarea = this._elementRef.nativeElement;\n      const value = textarea.value;\n      // Only resize if the value or minRows have changed since these calculations can be expensive.\n      if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n        return;\n      }\n      const scrollHeight = this._measureScrollHeight();\n      const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n      // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n      textarea.style.height = `${height}px`;\n      this._ngZone.runOutsideAngular(() => {\n        if (typeof requestAnimationFrame !== 'undefined') {\n          requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n        } else {\n          setTimeout(() => this._scrollToCaretPosition(textarea));\n        }\n      });\n      this._previousValue = value;\n      this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n      // Do not try to change the textarea, if the initialHeight has not been determined yet\n      // This might potentially remove styles when reset() is called before ngAfterViewInit\n      if (this._initialHeight !== undefined) {\n        this._textareaElement.style.height = this._initialHeight;\n      }\n    }\n    _noopInputHandler() {\n      // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n      const {\n        selectionStart,\n        selectionEnd\n      } = textarea;\n      // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n      // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n      // between the time we requested the animation frame and when it was executed.\n      // Also note that we have to assert that the textarea is focused before we set the\n      // selection range. Setting the selection range on a non-focused textarea will cause\n      // it to receive focus on IE and Edge.\n      if (!this._destroyed.isStopped && this._hasFocus) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n        textarea.scrollTop = this._cachedScrollTop;\n      }\n    }\n    static ɵfac = function CdkTextareaAutosize_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkTextareaAutosize)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkTextareaAutosize,\n      selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]],\n      hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"],\n      hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() {\n            return ctx._noopInputHandler();\n          });\n        }\n      },\n      inputs: {\n        minRows: [0, \"cdkAutosizeMinRows\", \"minRows\"],\n        maxRows: [0, \"cdkAutosizeMaxRows\", \"maxRows\"],\n        enabled: [2, \"cdkTextareaAutosize\", \"enabled\", booleanAttribute],\n        placeholder: \"placeholder\"\n      },\n      exportAs: [\"cdkTextareaAutosize\"]\n    });\n  }\n  return CdkTextareaAutosize;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TextFieldModule = /*#__PURE__*/(() => {\n  class TextFieldModule {\n    static ɵfac = function TextFieldModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TextFieldModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TextFieldModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return TextFieldModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import { InjectionToken } from '@angular/core';\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\nexport { MAT_INPUT_VALUE_ACCESSOR };\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nlet ShowOnDirtyErrorStateMatcher = /*#__PURE__*/(() => {\n  class ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n    static ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ShowOnDirtyErrorStateMatcher)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ShowOnDirtyErrorStateMatcher,\n      factory: ShowOnDirtyErrorStateMatcher.ɵfac\n    });\n  }\n  return ShowOnDirtyErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nlet ErrorStateMatcher = /*#__PURE__*/(() => {\n  class ErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n    static ɵfac = function ErrorStateMatcher_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ErrorStateMatcher)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ErrorStateMatcher,\n      factory: ErrorStateMatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher };\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n  _defaultMatcher;\n  ngControl;\n  _parentFormGroup;\n  _parentForm;\n  _stateChanges;\n  /** Whether the tracker is currently in an error state. */\n  errorState = false;\n  /** User-defined matcher for the error state. */\n  matcher;\n  constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n    this._defaultMatcher = _defaultMatcher;\n    this.ngControl = ngControl;\n    this._parentFormGroup = _parentFormGroup;\n    this._parentForm = _parentForm;\n    this._stateChanges = _stateChanges;\n  }\n  /** Updates the error state based on the provided error state matcher. */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const matcher = this.matcher || this._defaultMatcher;\n    const control = this.ngControl ? this.ngControl.control : null;\n    const newState = matcher?.isErrorState(control, parent) ?? false;\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this._stateChanges.next();\n    }\n  }\n}\nexport { _ErrorStateTracker };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform, getSupportedInputTypes } from '@angular/cdk/platform';\nimport { AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Renderer2, isSignal, effect, booleanAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { MAT_INPUT_VALUE_ACCESSOR } from './input-value-accessor-cp3A3zMa.mjs';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from './form-field-BPX7ZLIc.mjs';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from './form-field-BPX7ZLIc.mjs';\nimport { ErrorStateMatcher } from './error-options-BPhcAVoK.mjs';\nimport { _ErrorStateTracker } from './error-state-DAicm3pw.mjs';\nimport { MatFormFieldModule } from './module-BOQEdUAz.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport '@angular/cdk/observers';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];\n/** Injection token that can be used to provide the default options for the input. */\nconst MAT_INPUT_CONFIG = /*#__PURE__*/new InjectionToken('MAT_INPUT_CONFIG');\nlet MatInput = /*#__PURE__*/(() => {\n  class MatInput {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    ngControl = inject(NgControl, {\n      optional: true,\n      self: true\n    });\n    _autofillMonitor = inject(AutofillMonitor);\n    _ngZone = inject(NgZone);\n    _formField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    _renderer = inject(Renderer2);\n    _uid = inject(_IdGenerator).getId('mat-input-');\n    _previousNativeValue;\n    _inputValueAccessor;\n    _signalBasedValueAccessor;\n    _previousPlaceholder;\n    _errorStateTracker;\n    _config = inject(MAT_INPUT_CONFIG, {\n      optional: true\n    });\n    _cleanupIosKeyup;\n    _cleanupWebkitWheel;\n    /** `aria-describedby` IDs assigned by the form field. */\n    _formFieldDescribedBy;\n    /** Whether the component is being rendered on the server. */\n    _isServer;\n    /** Whether the component is a native html select. */\n    _isNativeSelect;\n    /** Whether the component is a textarea. */\n    _isTextarea;\n    /** Whether the input is inside of a form field. */\n    _isInFormField;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    focused = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-input';\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    autofilled = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n      // Browsers may not fire the blur event if the input is disabled too quickly.\n      // Reset from here to ensure that the element doesn't become stuck.\n      if (this.focused) {\n        this.focused = false;\n        this.stateChanges.next();\n      }\n    }\n    _disabled = false;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n    }\n    _id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    placeholder;\n    /**\n     * Name of the input.\n     * @docs-private\n     */\n    name;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = coerceBooleanProperty(value);\n    }\n    _required;\n    /** Input type of the element. */\n    get type() {\n      return this._type;\n    }\n    set type(value) {\n      const prevType = this._type;\n      this._type = value || 'text';\n      this._validateType();\n      // When using Angular inputs, developers are no longer able to set the properties on the native\n      // input element. To ensure that bindings for `type` work, we need to sync the setter\n      // with the native property. Textarea elements don't support the type property or attribute.\n      if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n        this._elementRef.nativeElement.type = this._type;\n      }\n      if (this._type !== prevType) {\n        this._ensureWheelDefaultBehavior();\n      }\n    }\n    _type = 'text';\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    userAriaDescribedBy;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n      return this._signalBasedValueAccessor ? this._signalBasedValueAccessor.value() : this._inputValueAccessor.value;\n    }\n    set value(value) {\n      if (value !== this.value) {\n        if (this._signalBasedValueAccessor) {\n          this._signalBasedValueAccessor.value.set(value);\n        } else {\n          this._inputValueAccessor.value = value;\n        }\n        this.stateChanges.next();\n      }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n      return this._readonly;\n    }\n    set readonly(value) {\n      this._readonly = coerceBooleanProperty(value);\n    }\n    _readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    _neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(t => getSupportedInputTypes().has(t));\n    constructor() {\n      const parentForm = inject(NgForm, {\n        optional: true\n      });\n      const parentFormGroup = inject(FormGroupDirective, {\n        optional: true\n      });\n      const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n      const accessor = inject(MAT_INPUT_VALUE_ACCESSOR, {\n        optional: true,\n        self: true\n      });\n      const element = this._elementRef.nativeElement;\n      const nodeName = element.nodeName.toLowerCase();\n      if (accessor) {\n        if (isSignal(accessor.value)) {\n          this._signalBasedValueAccessor = accessor;\n        } else {\n          this._inputValueAccessor = accessor;\n        }\n      } else {\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = element;\n      }\n      this._previousNativeValue = this.value;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n      // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n      // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n      // exists on iOS, we only bother to install the listener on iOS.\n      if (this._platform.IOS) {\n        this._ngZone.runOutsideAngular(() => {\n          this._cleanupIosKeyup = this._renderer.listen(element, 'keyup', this._iOSKeyupListener);\n        });\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._isServer = !this._platform.isBrowser;\n      this._isNativeSelect = nodeName === 'select';\n      this._isTextarea = nodeName === 'textarea';\n      this._isInFormField = !!this._formField;\n      this.disabledInteractive = this._config?.disabledInteractive || false;\n      if (this._isNativeSelect) {\n        this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';\n      }\n      if (this._signalBasedValueAccessor) {\n        effect(() => {\n          // Read the value so the effect can register the dependency.\n          this._signalBasedValueAccessor.value();\n          this.stateChanges.next();\n        });\n      }\n    }\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n          this.autofilled = event.isAutofilled;\n          this.stateChanges.next();\n        });\n      }\n    }\n    ngOnChanges() {\n      this.stateChanges.next();\n    }\n    ngOnDestroy() {\n      this.stateChanges.complete();\n      if (this._platform.isBrowser) {\n        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n      }\n      this._cleanupIosKeyup?.();\n      this._cleanupWebkitWheel?.();\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n        // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n        // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n        // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n        // disabled.\n        if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n          this.disabled = this.ngControl.disabled;\n          this.stateChanges.next();\n        }\n      }\n      // We need to dirty-check the native element's value, because there are some cases where\n      // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n      // updating the value using `emitEvent: false`).\n      this._dirtyCheckNativeValue();\n      // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n      // present or not depends on a query which is prone to \"changed after checked\" errors.\n      this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Refreshes the error state of the input. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n      if (isFocused === this.focused) {\n        return;\n      }\n      if (!this._isNativeSelect && isFocused && this.disabled && this.disabledInteractive) {\n        const element = this._elementRef.nativeElement;\n        // Focusing an input that has text will cause all the text to be selected. Clear it since\n        // the user won't be able to change it. This is based on the internal implementation.\n        if (element.type === 'number') {\n          // setSelectionRange doesn't work on number inputs so it needs to be set briefly to text.\n          element.type = 'text';\n          element.setSelectionRange(0, 0);\n          element.type = 'number';\n        } else {\n          element.setSelectionRange(0, 0);\n        }\n      }\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n    _onInput() {\n      // This is a noop function and is used to let Angular know whenever the value changes.\n      // Angular will run a new change detection each time the `input` event has been dispatched.\n      // It's necessary that Angular recognizes the value change, because when floatingLabel\n      // is set to false and Angular forms aren't used, the placeholder won't recognize the\n      // value changes and will not disappear.\n      // Listening to the input event wouldn't be necessary when the input is using the\n      // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n      const newValue = this._elementRef.nativeElement.value;\n      if (this._previousNativeValue !== newValue) {\n        this._previousNativeValue = newValue;\n        this.stateChanges.next();\n      }\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n      const placeholder = this._getPlaceholder();\n      if (placeholder !== this._previousPlaceholder) {\n        const element = this._elementRef.nativeElement;\n        this._previousPlaceholder = placeholder;\n        placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n      }\n    }\n    /** Gets the current placeholder of the form field. */\n    _getPlaceholder() {\n      return this.placeholder || null;\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n      if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatInputUnsupportedTypeError(this._type);\n      }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n      return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n      // The `validity` property won't be present on platform-server.\n      let validity = this._elementRef.nativeElement.validity;\n      return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n      return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      if (this._isNativeSelect) {\n        // For a single-selection `<select>`, the label should float when the selected option has\n        // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n        // overlapping the label with the options.\n        const selectElement = this._elementRef.nativeElement;\n        const firstOption = selectElement.options[0];\n        // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n        // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n        return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n      } else {\n        return this.focused && !this.disabled || !this.empty;\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      const element = this._elementRef.nativeElement;\n      const existingDescribedBy = element.getAttribute('aria-describedby');\n      let toAssign;\n      // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n      // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n      // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n      // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n      if (existingDescribedBy) {\n        const exclude = this._formFieldDescribedBy || ids;\n        toAssign = ids.concat(existingDescribedBy.split(' ').filter(id => id && !exclude.includes(id)));\n      } else {\n        toAssign = ids;\n      }\n      this._formFieldDescribedBy = ids;\n      if (toAssign.length) {\n        element.setAttribute('aria-describedby', toAssign.join(' '));\n      } else {\n        element.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n      // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n      // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n      if (!this.focused) {\n        this.focus();\n      }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n      const element = this._elementRef.nativeElement;\n      return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n    _iOSKeyupListener = event => {\n      const el = event.target;\n      // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n      // indicate different things. If the value is 0, it means that the caret is at the start\n      // of the input, whereas a value of `null` means that the input doesn't support\n      // manipulating the selection range. Inputs that don't support setting the selection range\n      // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n      // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n      if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n        // `1, 1` fixes it for the first time that you type text and\n        // then hold delete. Toggling to `1, 1` and then back to\n        // `0, 0` seems to completely fix it.\n        el.setSelectionRange(1, 1);\n        el.setSelectionRange(0, 0);\n      }\n    };\n    _webkitBlinkWheelListener = () => {\n      // This is a noop function and is used to enable mouse wheel input\n      // on number inputs\n      // on blink and webkit browsers.\n    };\n    /**\n     * In blink and webkit browsers a focused number input does not increment or decrement its value\n     * on mouse wheel interaction unless a wheel event listener is attached to it or one of its\n     * ancestors or a passive wheel listener is attached somewhere in the DOM. For example: Hitting\n     * a tooltip once enables the mouse wheel input for all number inputs as long as it exists. In\n     * order to get reliable and intuitive behavior we apply a wheel event on our own thus making\n     * sure increment and decrement by mouse wheel works every time.\n     * @docs-private\n     */\n    _ensureWheelDefaultBehavior() {\n      this._cleanupWebkitWheel?.();\n      if (this._type === 'number' && (this._platform.BLINK || this._platform.WEBKIT)) {\n        this._cleanupWebkitWheel = this._renderer.listen(this._elementRef.nativeElement, 'wheel', this._webkitBlinkWheelListener);\n      }\n    }\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n      if (this._isNativeSelect) {\n        return null;\n      }\n      if (this.readonly || this.disabled && this.disabledInteractive) {\n        return 'true';\n      }\n      return null;\n    }\n    static ɵfac = function MatInput_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatInput)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatInput,\n      selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-input-element\"],\n      hostVars: 21,\n      hostBindings: function MatInput_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() {\n            return ctx._focusChanged(true);\n          })(\"blur\", function MatInput_blur_HostBindingHandler() {\n            return ctx._focusChanged(false);\n          })(\"input\", function MatInput_input_HostBindingHandler() {\n            return ctx._onInput();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"required\", ctx.required);\n          i0.ɵɵattribute(\"name\", ctx.name || null)(\"readonly\", ctx._getReadonlyAttribute())(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required)(\"id\", ctx.id);\n          i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-form-field-textarea-control\", ctx._isInFormField && ctx._isTextarea)(\"mat-mdc-form-field-input-control\", ctx._isInFormField)(\"mat-mdc-input-disabled-interactive\", ctx.disabledInteractive)(\"mdc-text-field__input\", ctx._isInFormField)(\"mat-mdc-native-select-inline\", ctx._isInlineSelect());\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        id: \"id\",\n        placeholder: \"placeholder\",\n        name: \"name\",\n        required: \"required\",\n        type: \"type\",\n        errorStateMatcher: \"errorStateMatcher\",\n        userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n        value: \"value\",\n        readonly: \"readonly\",\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n      },\n      exportAs: [\"matInput\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatFormFieldControl,\n        useExisting: MatInput\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return MatInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatInputModule = /*#__PURE__*/(() => {\n  class MatInputModule {\n    static ɵfac = function MatInputModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatInputModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatInputModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule]\n    });\n  }\n  return MatInputModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_INPUT_CONFIG, MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","export enum EValidationErrors {\n  Required = 'required',\n  EmailFormat = 'emailFormat',\n  UserNameLength = 'userNameLength',\n  PasswordLength = 'passwordLength',\n  UserNameFormat = 'userNameFormat',\n  PasswordFormat = 'passwordFormat',\n  EqualControls = 'equalControls',\n  UserNameExist = 'userNameExist',\n  EmailExist = 'emailExist',\n  Pending = 'pending',\n  DependentControl = 'dependentControl',\n  ConfirmEmail = 'emailConfirmationRequired',\n  InvalidCredentials = 'invalidCredentials',\n  InvalidEmail = 'invalidEmail',\n  MultipleOf = 'multipleOf',\n}\n","import { Injectable, WritableSignal } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nimport { EValidationErrors } from '../validation-errors.enum';\n\n\nexport enum EValidationRegExp {\n  Name = '^[0-9a-zA-Zа-щА-ЩґҐєЄіІїЇ]*$',\n  Email = '^[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$',\n  Password = '^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidationService {\n\n  userNameLength(control: AbstractControl): ValidationErrors | null {\n    const value: string = control.value;\n    if (value.length < 2 || value.length > 15) {\n      return { [EValidationErrors.UserNameLength]: true };\n    }\n    return null;\n  }\n\n  userName(control: AbstractControl): ValidationErrors | null {\n    if (typeof (control.value) === 'string' && !control.value.match(EValidationRegExp.Name)) {\n      return { [EValidationErrors.UserNameFormat]: true };\n    }\n    return null;\n  }\n\n  valueExist(\n    pending: WritableSignal<boolean>,\n    exist: WritableSignal<boolean>,\n    error: EValidationErrors,\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (pending() && control.valid) {\n        return { [EValidationErrors.Pending]: true };\n      } else if (exist() && control.valid) {\n        return { [error]: true };\n      }\n      return null;\n    };\n  }\n\n  passwordLength(control: AbstractControl): ValidationErrors | null {\n    const value: string = control.value;\n    if (value.length < 8 || value.length > 15) {\n      return { [EValidationErrors.PasswordLength]: true };\n    }\n    return null;\n  }\n\n  password(control: AbstractControl): ValidationErrors | null {\n    if (typeof (control.value) === 'string' && !control.value.match(EValidationRegExp.Password)) {\n      return { [EValidationErrors.PasswordFormat]: true };\n    }\n    return null;\n  }\n\n  email(control: AbstractControl): ValidationErrors | null {\n    if (typeof (control.value) === 'string' && !control.value.match(EValidationRegExp.Email)) {\n      return { [EValidationErrors.EmailFormat]: true };\n    }\n    return null;\n  }\n\n  equalControls(control1: AbstractControl, control2: AbstractControl): void {\n    control1.addValidators(() => {\n      if (control1.value !== control2.value) {\n        return { [EValidationErrors.EqualControls]: true };\n      }\n      return null;\n    });\n  }\n\n  dependentControlValid(control: AbstractControl, invalid: WritableSignal<boolean>): void {\n    control.addValidators(() => {\n      if (invalid()) {\n        return { [EValidationErrors.DependentControl]: true };\n      }\n      return null;\n    });\n  }\n\n  multipleOf(control: AbstractControl, multiple?: number): void {\n    control.addValidators(() => {\n      const value: number = +control.value;\n      if (!Number.isInteger(value) || value % multiple) {\n        return { [EValidationErrors.MultipleOf]: true };\n      }\n      return null;\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  standalone: true,\n  name: 'inputHeight',\n})\nexport class InputHeightPipe implements PipeTransform {\n\n  transform(height: number): string {\n    return !Number.isNaN(+height) ? `calc(${height}px + 2px)` : '100%';\n  }\n\n}\n","import { NgClass } from '@angular/common';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component, ElementRef,\n  forwardRef,\n  inject,\n  input,\n  OnInit,\n  signal, viewChild,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControl,\n  FormsModule,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { LoaderComponent } from '../loader/loader.component';\nimport { ValidationService } from '../validation/validation-service/validation.service';\n\nimport { InputHeightPipe } from './input-height-pipe/input-height.pipe';\n\ntype TTextInputType = 'text' | 'password' | 'email' | 'number';\n\nenum ETextInputType {\n  Text = 'text',\n  Password = 'password',\n  Email = 'email',\n  Number = 'number',\n}\n\n@Component({\n  standalone: true,\n  selector: 'tnm-input-text',\n  imports: [\n    FormsModule,\n    InputHeightPipe,\n    ReactiveFormsModule,\n    NgClass,\n    LoaderComponent,\n\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  templateUrl: './input-text.component.html',\n  styleUrl: './input-text.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => InputTextComponent),\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => InputTextComponent),\n    },\n  ],\n})\nexport class InputTextComponent implements OnInit, ControlValueAccessor, Validator {\n\n  private readonly validationService = inject(ValidationService);\n\n  private readonly matInputEl =\n    viewChild<ElementRef<HTMLInputElement>>('matInputEl');\n\n  readonly cdr = inject(ChangeDetectorRef);\n\n  private onChange: (value: string) => void = () => {};\n  private onTouched: () => void = () => {};\n\n  inputType = input<TTextInputType>(ETextInputType.Text);\n  placeholder = input<string>('');\n  label = input<string>('');\n  borderColor = input<string>('var(--mat-sys-on-background)');\n  disableErrors = input<boolean>(false);\n  centered = input<boolean>(false);\n\n  focused = signal<boolean>(false);\n  invalid = signal<boolean>(false);\n  pending = signal<boolean>(false);\n  innerInputType = signal<TTextInputType>(ETextInputType.Password);\n\n  formControl = new FormControl<string>('', { nonNullable: true });\n  parentFormControl!: FormControl;\n  types = ETextInputType;\n\n  get matInputHeight(): number {\n    return this.matInputEl().nativeElement.parentElement.clientHeight;\n  }\n\n  ngOnInit(): void {\n    this.innerInputType.set(this.inputType());\n    this.validationService.dependentControlValid(this.formControl, this.invalid);\n  }\n\n  onInput(event: Event): void {\n    const value = (event.target as HTMLInputElement).value;\n    this.onChange(value);\n  }\n\n  onFocusIn(): void {\n    this.focused.set(true);\n  }\n\n  onFocusOut(): void {\n    this.focused.set(false);\n    this.onTouched();\n    this.parentFormControl.updateValueAndValidity();\n    this.updateInvalidState();\n  }\n\n  onPasswordTypeChange(): void {\n    const inputType: ETextInputType =\n      this.innerInputType() === ETextInputType.Password ? ETextInputType.Text : ETextInputType.Password;\n    this.innerInputType.set(inputType);\n  }\n\n  writeValue(value: string): void {\n    this.formControl.patchValue(value);\n  }\n\n  registerOnChange(onChange: (value: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    disabled ? this.formControl.disable() : this.formControl.enable();\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    if (!this.parentFormControl) {\n      this.parentFormControl = control as FormControl;\n    }\n    setTimeout(() => this.updateInvalidState(), 0);\n    return null;\n  }\n\n  private updateInvalidState(): void {\n    this.pending.set(!!this.parentFormControl.errors?.['pending']);\n    this.invalid.set(!!this.parentFormControl.errors && this.parentFormControl.touched);\n    this.formControl.updateValueAndValidity();\n  }\n}\n","<div class=\"tnm-text-input\">\n  <div\n    class=\"background static-visible\"\n    [style.height]=\"matInputHeight | inputHeight\"\n    [style.background]=\"borderColor()\">\n  </div>\n  <div\n    [style.height]=\"matInputHeight | inputHeight\"\n    [ngClass]=\"{'background': true,\n                'visible focused': focused()\n               }\">\n  </div>\n  <div\n    [style.height]=\"matInputHeight | inputHeight\"\n    [ngClass]=\"{'background': true,\n                'visible invalid': invalid()\n               }\">\n  </div>\n  <mat-form-field class=\"form-field\">\n    @if (label()) {\n      <mat-label>{{ label() }}</mat-label>\n    }\n    <input\n      matInput\n      [style.text-align]=\"centered() ? 'center' : 'left'\"\n      [placeholder]=\"placeholder()\"\n      [type]=\"innerInputType()\"\n      [formControl]=\"formControl\"\n      (input)=\"onInput($event)\"\n      (focusin)=\"onFocusIn()\"\n      (focusout)=\"onFocusOut()\"\n      #matInputEl/>\n    @if (inputType() === types.Password) {\n      <mat-icon\n        matSuffix\n        class=\"icon password-icon\"\n        (click)=\"onPasswordTypeChange()\">\n        {{ innerInputType() === types.Password ? 'visibility' : 'visibility_off' }}\n      </mat-icon>\n    }\n    @if (inputType() !== types.Password && pending()) {\n      <tnm-loader matSuffix class=\"icon loader\"></tnm-loader>\n    }\n  </mat-form-field>\n  @if (!disableErrors()) {\n    <div class=\"errors\">\n      <ng-content></ng-content>\n    </div>\n  }\n</div>\n","import { Directive, forwardRef } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\n\n@Directive({\n  standalone: true,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NoopValueAccessorDirective),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => NoopValueAccessorDirective),\n    },\n  ],\n})\nexport class NoopValueAccessorDirective implements ControlValueAccessor, Validator {\n  writeValue(value: unknown): void {}\n  registerOnChange(onChange: (value: unknown) => void): void {}\n  registerOnTouched(onTouched: () => void): void {}\n  setDisabledState?(disabled: boolean): void {}\n  validate(control: AbstractControl): ValidationErrors | null {\n    return null;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  Injector,\n  input,\n  OnInit, Signal,\n} from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatError } from '@angular/material/form-field';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { combineLatest, map } from 'rxjs';\n\nimport { NoopValueAccessorDirective } from '../../directives/noop-value-accessor/noop-value-accessor.directive';\n\nimport { EValidationErrors } from './validation-errors.enum';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-validation',\n  imports: [\n    ReactiveFormsModule,\n    TranslatePipe,\n\n    MatError,\n  ],\n  hostDirectives: [NoopValueAccessorDirective],\n  templateUrl: './validation.component.html',\n  styleUrl: './validation.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidationComponent implements OnInit {\n\n  private readonly injector = inject(Injector);\n\n  formControl = input.required<FormControl>();\n  errorMsg!: Signal<string>;\n\n  ngOnInit(): void {\n    const formControl = this.formControl();\n    this.errorMsg = toSignal<string>(\n      combineLatest([formControl.valueChanges, formControl.statusChanges]).pipe(\n        map(() => {\n          if (formControl?.hasError(EValidationErrors.Required) && formControl.touched) {\n            return 'errors.required_field_error';\n          }\n          if (formControl?.hasError(EValidationErrors.EmailFormat) && formControl.touched) {\n            return 'errors.email_format_error';\n          }\n          if (formControl?.hasError(EValidationErrors.UserNameLength) && formControl.touched) {\n            return 'errors.user_name_length_error';\n          }\n          if (formControl?.hasError(EValidationErrors.PasswordLength) && formControl.touched) {\n            return 'errors.password_length_error';\n          }\n          if (formControl?.hasError(EValidationErrors.UserNameFormat) && formControl.touched) {\n            return 'errors.user_name_format_error';\n          }\n          if (formControl?.hasError(EValidationErrors.PasswordFormat) && formControl.touched) {\n            return 'errors.password_format_error';\n          }\n          if (formControl?.hasError(EValidationErrors.EqualControls) && formControl.touched) {\n            return 'errors.confirm_password_error';\n          }\n          if (formControl?.hasError(EValidationErrors.UserNameExist) && formControl.touched) {\n            return 'errors.user_name_exist_error';\n          }\n          if (formControl?.hasError(EValidationErrors.EmailExist) && formControl.touched) {\n            return 'errors.email_exist_error';\n          }\n          if (formControl?.hasError(EValidationErrors.InvalidCredentials) && formControl.touched) {\n            return 'errors.invalid_credentials_error';\n          }\n          if (formControl?.hasError(EValidationErrors.InvalidEmail) && formControl.touched) {\n            return 'errors.invalid_email';\n          }\n          return '';\n        }),\n      ),\n      { injector: this.injector },\n    ) as Signal<string>;\n  }\n}\n","@if (errorMsg(); as msg) {\n  <mat-error><small>{{ msg | translate }}</small></mat-error>\n}\n","import { DestroyRef, Directive, inject, WritableSignal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl } from '@angular/forms';\n\nimport { catchError, debounceTime, EMPTY, filter, Observable, switchMap } from 'rxjs';\n\nimport { ValidationService } from '../../../../shared/components/validation/validation-service/validation.service';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Directive()\nexport abstract class BaseAuthDirective {\n\n  protected readonly dr = inject(DestroyRef);\n  protected readonly authService = inject(AuthService);\n  protected readonly validationService = inject(ValidationService);\n\n  protected observeControlValueExist(\n    control: WritableSignal<FormControl>,\n    pending: WritableSignal<boolean>,\n    exist: WritableSignal<boolean>,\n    request: (value: string) => Observable<boolean>,\n  ): void {\n    let valueBuff = '';\n    control().valueChanges.pipe(\n      debounceTime(300),\n      filter(value => {\n        const condition =\n          (control().valid || (exist() && Object.keys(control().errors).length === 1)) && valueBuff !== value;\n        valueBuff = value;\n        return condition;\n      }),\n      switchMap(value => {\n        pending.set(true);\n        control().updateValueAndValidity();\n        return request(value).pipe(catchError(() => {\n          pending.set(false);\n          control().updateValueAndValidity();\n          return EMPTY;\n        }));\n      }),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      pending.set(false);\n      exist.set(result);\n      control().updateValueAndValidity();\n    });\n  }\n}\n","export enum EAuthDialogResult {\n  SignUp,\n  SignIn,\n  ForgotPassword,\n  SignInGoogle,\n  SignInFacebook,\n  ConfirmEmail,\n}\n\nexport enum EEmailMessageTypes {\n  EmailConfirmation = 'emailConfirmation',\n  PasswordReset = 'passwordReset',\n}\n","import { ChangeDetectionStrategy, Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { catchError, EMPTY, Subject, switchMap } from 'rxjs';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../shared/components/validation/validation.component';\nimport { BaseAuthDirective } from '../../directives/base-auth/base-auth.directive';\nimport { EAuthDialogResult } from '../../enums/auth.enum';\nimport { IChangePasswordForm, IPasswordChange } from '../../interfaces/auth.interface';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-change-password',\n  imports: [\n    InputTextComponent,\n    MatButton,\n    ValidationComponent,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './change-password.component.html',\n  styleUrl: './change-password.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChangePasswordComponent extends BaseAuthDirective implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<ChangePasswordComponent>);\n  private readonly data = inject<IPasswordChange>(MAT_DIALOG_DATA);\n\n  form: FormGroup<IChangePasswordForm>;\n\n  changePassword$ = new Subject<void>();\n\n  passwordControl!: WritableSignal<FormControl<string>>;\n  confirmPasswordControl!: WritableSignal<FormControl<string>>;\n\n  ngOnInit(): void {\n    this.initForm();\n    this.observePasswordControl();\n    this.observeChangePassword();\n  }\n\n  onChangePassword(): void {\n    if (this.form.valid) {\n      this.changePassword$.next();\n    }\n  }\n\n  private initForm(): void {\n    this.form = new FormGroup<IChangePasswordForm>({\n      password: new FormControl<string>('', {\n        validators: [\n          Validators.required,\n          this.validationService.passwordLength,\n          this.validationService.password,\n        ],\n        nonNullable: true,\n      }),\n      confirmPassword: new FormControl<string>('', {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n    });\n    this.passwordControl = signal(this.form.get('password') as FormControl);\n    this.confirmPasswordControl = signal(this.form.get('confirmPassword') as FormControl);\n  }\n\n  private observePasswordControl(): void {\n    this.passwordControl().valueChanges.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(() => this.confirmPasswordControl().updateValueAndValidity());\n  }\n\n  private observeChangePassword(): void {\n    this.changePassword$.pipe(\n      switchMap(() => {\n        const changeModel = {\n          email: this.data.email,\n          token: this.data.token,\n          password: this.passwordControl().value,\n        };\n        return this.authService.changePassword(changeModel).pipe(\n          // Todo handle error msg\n          catchError(() => EMPTY),\n        );\n      }),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(user => {\n      this.dialogRef.close({\n        action: EAuthDialogResult.ForgotPassword,\n        data: user,\n      });\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <h2 class=\"title\">Change Password</h2>\n\n  <form class=\"auth-form\" [formGroup]=\"form\">\n    <tnm-input-text\n      formControlName=\"password\"\n      inputType=\"password\"\n      placeholder=\"aaaaaaA1\"\n      [label]=\"'New Password'\">\n      <tnm-validation [formControl]=\"passwordControl()\"></tnm-validation>\n    </tnm-input-text>\n    <tnm-input-text\n      formControlName=\"confirmPassword\"\n      inputType=\"password\"\n      [label]=\"'Confirm New Password'\">\n      <tnm-validation [formControl]=\"confirmPasswordControl()\"></tnm-validation>\n    </tnm-input-text>\n  </form>\n\n  <button\n    mat-flat-button\n    type=\"button\"\n    class=\"mat-submit-btn\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onChangePassword()\">\n    Change\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, inject, OnInit, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { catchError, EMPTY, Subject, switchMap } from 'rxjs';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../shared/components/validation/validation.component';\nimport { EValidationErrors } from '../../../../shared/components/validation/validation-errors.enum';\nimport { BaseAuthDirective } from '../../directives/base-auth/base-auth.directive';\nimport { EAuthDialogResult } from '../../enums/auth.enum';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-forgot-password',\n  imports: [\n    InputTextComponent,\n    MatButton,\n    TranslatePipe,\n    ValidationComponent,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordComponent extends BaseAuthDirective implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<ForgotPasswordComponent>);\n\n  resetPassword$ = new Subject<void>();\n\n  emailControl = signal<FormControl<string>>(\n    new FormControl('', {\n      validators: [Validators.required, this.validationService.email],\n      nonNullable: true,\n    }),\n  );\n\n  ngOnInit(): void {\n    this.observeResetPassword();\n  }\n\n  onResetPassword(): void {\n    if (this.emailControl().valid) {\n      this.resetPassword$.next();\n    }\n  }\n\n  private observeResetPassword(): void {\n    this.resetPassword$.pipe(\n      switchMap(() => this.authService.sendEmailPasswordReset(this.emailControl().value).pipe(\n        catchError(error => {\n          if (error.error.message === EValidationErrors.InvalidEmail) {\n            this.emailControl().setErrors({ [EValidationErrors.InvalidEmail]: true });\n          }\n          if (error.error.message === EValidationErrors.ConfirmEmail) {\n            this.dialogRef.close({\n              action: EAuthDialogResult.ConfirmEmail,\n              data: {\n                ...error.error.user,\n                withError: true,\n              },\n            });\n          }\n          return EMPTY;\n        })),\n      ),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(user => {\n      this.dialogRef.close({\n        action: EAuthDialogResult.ForgotPassword,\n        data: user,\n      });\n    });\n  }\n\n}\n","<div class=\"wrapper\">\n  <h2 class=\"title\">Forgot Password</h2>\n\n  <tnm-input-text\n    inputType=\"email\"\n    placeholder=\"tnm@mail.com\"\n    [formControl]=\"emailControl()\"\n    [label]=\"'auth.email' | translate\">\n    <tnm-validation [formControl]=\"emailControl()\"></tnm-validation>\n  </tnm-input-text>\n\n  <button\n    mat-flat-button\n    type=\"button\"\n    class=\"mat-submit-btn\"\n    [disabled]=\"emailControl().invalid\"\n    (click)=\"onResetPassword()\">\n    Reset Password\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, computed, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { catchError, debounceTime, EMPTY, Subject, switchMap } from 'rxjs';\n\nimport { EEmailMessageTypes } from '../../enums/auth.enum';\nimport { IAuthDialogData } from '../../interfaces/auth.interface';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-send-email',\n  imports: [\n    MatButtonModule,\n  ],\n  templateUrl: './send-email.component.html',\n  styleUrl: './send-email.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class SendEmailComponent implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<SendEmailComponent>);\n  private readonly data = inject<Partial<IAuthDialogData>>(MAT_DIALOG_DATA);\n  private readonly authService = inject(AuthService);\n  private readonly timerLimit = 60;\n\n  private resend$ = new Subject<void>();\n\n  private timePassed: WritableSignal<number>;\n\n  readonly eEmailMessageTypes = EEmailMessageTypes;\n\n  emailMsgType = signal<EEmailMessageTypes>(this.data.emailMsgType);\n  userName = signal<string>(this.data.userName);\n  email = signal<string>(this.data.email);\n  withError = signal<boolean>(this.data.withError);\n  timer = computed(() => this.timerLimit - this.timePassed());\n\n  ngOnInit(): void {\n    this.timePassed = signal<number>(this.calculateTime(this.data));\n    this.observeResend();\n    if (this.timer() > 0) {\n      this.startTimer();\n    } else {\n      this.resend$.next();\n    }\n  }\n\n  onOk(): void {\n    this.dialogRef.close();\n  }\n\n  onResend(): void {\n    this.resend$.next();\n  }\n\n  private startTimer(): void {\n    const interval = setInterval(() => {\n      this.timePassed.set(this.timePassed() + 1);\n      if (this.timer() <= 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n  }\n\n  private calculateTime(data: Partial<IAuthDialogData>): number {\n    const sentAt: Date | 0 = this.emailMsgType() === EEmailMessageTypes.EmailConfirmation ?\n      data.emailSentAt ?? 0 :\n      data.passwordResetSentAt ?? 0;\n    const sentAtTime: number = new Date(sentAt)?.getTime() ?? 0;\n    return Math.round((new Date().getTime() - sentAtTime) / 1000);\n  }\n\n  private observeResend(): void {\n    this.resend$.pipe(\n      debounceTime(300),\n      switchMap(() => {\n        console.log('SENDING', this.emailMsgType(), this.emailMsgType() === EEmailMessageTypes.EmailConfirmation);\n        if (this.emailMsgType() === EEmailMessageTypes.EmailConfirmation) {\n          return this.authService.sendEmailConfirmation(this.email()).pipe(\n            // Todo handle error msg\n            catchError(() => EMPTY),\n          );\n        }\n        return this.authService.sendEmailPasswordReset(this.email()).pipe(\n          // Todo handle error msg\n          catchError(() => EMPTY),\n        );\n      }),\n    ).subscribe(user => {\n      this.timePassed.set(this.calculateTime(user));\n      if (this.timer() > 0) {\n        this.startTimer();\n      }\n    });\n  }\n}\n","<div class=\"wrapper\">\n  @if (emailMsgType() === eEmailMessageTypes.EmailConfirmation) {\n    <h2 class=\"title\">confirmation</h2>\n  } @else {\n    <h2 class=\"title\">reset password</h2>\n  }\n  <div class=\"message\">\n    <p>{{'Hey '}}<strong>{{userName()}}</strong>!</p>\n    <br/>\n    @if (withError()) {\n      <p class=\"error\">Looks like you haven’t confirmed your email yet.</p>\n      <br>\n    }\n    @if (emailMsgType() === eEmailMessageTypes.EmailConfirmation) {\n      <p>We just sent a confirmation email to <br/><strong>{{email()}}</strong></p>\n      <br/>\n      <p>Check your inbox and click the link to finish signing up.</p>\n    } @else {\n      <p>We just sent an email to <br/><strong>{{email()}}</strong></p>\n      <br/>\n      <p>Check your inbox and click the link to reset your password.</p>\n    }\n    <br/>\n    <p>Can’t wait to have you on board!</p>\n    <br>\n    <small class=\"resend-email\">\n      Didn’t get the email?\n      @if (timer() <= 0) {\n        <button mat-button type=\"button\" class=\"mat-text-btn\" (click)=\"onResend()\"><small>Send it again</small></button>\n      } @else {\n        <strong class=\"timer\">{{timer()}}</strong>\n      }\n    </small>\n  </div>\n  <button mat-flat-button type=\"button\" class=\"mat-submit-btn\" (click)=\"onOk()\">Ok</button>\n</div>\n","import { Directive, WritableSignal } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\n\nimport { BaseAuthDirective } from '../base-auth/base-auth.directive';\n\n@Directive()\nexport abstract class SignInUpDirective<TAuthForm extends Record<string, AbstractControl>> extends BaseAuthDirective {\n\n  protected emailControl!: WritableSignal<FormControl<string>>;\n  protected passwordControl!: WritableSignal<FormControl<string>>;\n\n  protected abstract form: FormGroup<TAuthForm>;\n\n}\n","import { ChangeDetectionStrategy, Component, inject, OnInit, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { catchError, combineLatest, debounceTime, EMPTY, of, Subject, switchMap } from 'rxjs';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../shared/components/validation/validation.component';\nimport { EValidationErrors } from '../../../../shared/components/validation/validation-errors.enum';\nimport { SignInUpDirective } from '../../directives/sign-in-up/sign-in-up.directive';\nimport { EAuthDialogResult } from '../../enums/auth.enum';\nimport { IAuth, IAuthForm } from '../../interfaces/auth.interface';\n\nimport { FacebookLoginProvider, GoogleSigninButtonDirective, SocialAuthService } from '@abacritt/angularx-social-login';\n\n\n@Component({\n  standalone: true,\n  selector: 'tnm-sign-in',\n  imports: [\n    TranslatePipe,\n    InputTextComponent,\n    ReactiveFormsModule,\n\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    ValidationComponent,\n    GoogleSigninButtonDirective,\n  ],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignInComponent extends SignInUpDirective<IAuthForm> implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<SignInComponent>);\n  private readonly socialAuthService = inject(SocialAuthService);\n\n  override form!: FormGroup<IAuthForm>;\n\n  login$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.initForm();\n    this.observeLogin();\n    this.observeGoogleLogin();\n  }\n\n  onLogin(): void {\n    if (this.form.valid) {\n      this.login$.next();\n    }\n  }\n\n  onFacebookLogin(): void {\n    this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID).then();\n  }\n\n  onNewAccount(): void {\n    this.dialogRef.close({ action: EAuthDialogResult.SignUp });\n  }\n\n  onForgotPassword(): void {\n    this.dialogRef.close({ action: EAuthDialogResult.ForgotPassword });\n  }\n\n  private initForm(): void {\n    this.form = new FormGroup<IAuthForm>({\n      email: new FormControl<string>('', {\n        validators: [Validators.required, this.validationService.email],\n        nonNullable: true,\n      }),\n      password: new FormControl<string>('', {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n    });\n    this.emailControl = signal(this.form.get('email') as FormControl);\n    this.passwordControl = signal(this.form.get('password') as FormControl);\n  }\n\n  private observeLogin(): void {\n    this.login$.pipe(\n      debounceTime(300),\n      switchMap(() => {\n        const signInModel: IAuth = {\n          email: <string> this.form.value.email,\n          password: <string> this.form.value.password,\n        };\n        return this.authService.signIn(signInModel).pipe(\n          // Todo handle error msg\n          catchError(error => {\n            if (error.error.message === EValidationErrors.InvalidCredentials) {\n              this.passwordControl().setErrors({ [EValidationErrors.InvalidCredentials]: true });\n            }\n            if (error.error.message === EValidationErrors.ConfirmEmail) {\n              this.dialogRef.close({\n                action: EAuthDialogResult.ConfirmEmail,\n                data: {\n                  ...error.error.user,\n                  withError: true,\n                },\n              });\n            }\n            return EMPTY;\n          }),\n        );\n      }),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => this.dialogRef.close({\n      action: EAuthDialogResult.SignIn,\n      data: result,\n    }));\n  }\n\n  observeGoogleLogin(): void {\n    this.socialAuthService.authState.pipe(\n      switchMap(user => combineLatest([of(user), this.authService.emailExist(user.email)])),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(([user, isSignIn]) => {\n      const isGoogle = !!user.idToken;\n      this.dialogRef.close({\n        action: isGoogle ? EAuthDialogResult.SignInGoogle : EAuthDialogResult.SignInFacebook,\n        data: {\n          token: isGoogle ? user.idToken : user.authToken,\n          isSignUp: !isSignIn,\n        },\n      });\n    });\n  }\n}\n","<div class=\"wrapper auth-dialog\">\n\n  <h2 class=\"title\">{{ 'auth.login_title' | translate }}</h2>\n\n  <form class=\"auth-form\" [formGroup]=\"form\">\n    <tnm-input-text\n      formControlName=\"email\"\n      inputType=\"email\"\n      placeholder=\"tnm@mail.com\"\n      [label]=\"'auth.email' | translate\">\n      <tnm-validation [formControl]=\"emailControl()\"></tnm-validation>\n    </tnm-input-text>\n    <tnm-input-text\n      formControlName=\"password\"\n      inputType=\"password\"\n      [label]=\"'auth.password' | translate\">\n      <tnm-validation [formControl]=\"passwordControl()\"></tnm-validation>\n    </tnm-input-text>\n  </form>\n\n  <button\n    mat-flat-button\n    type=\"button\"\n    class=\"mat-submit-btn\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onLogin()\">\n    {{ 'auth.sign_in_btn' | translate }}\n  </button>\n\n  <div class=\"divider\">\n    <hr>\n    <small class=\"divider-label\">{{ 'auth.or_sign_in_with' | translate }}</small>\n  </div>\n\n  <div class=\"social-login\">\n    <button mat-fab class=\"google-upper-btn\" type=\"button\">\n      <asl-google-signin-button class=\"google-inner-btn\"></asl-google-signin-button>\n      <mat-icon class=\"social-icon\" svgIcon=\"google\"></mat-icon>\n    </button>\n    <button mat-fab type=\"button\" (click)=\"onFacebookLogin()\">\n      <mat-icon class=\"social-icon\" svgIcon=\"facebook\"></mat-icon>\n    </button>\n  </div>\n\n  <div class=\"login-navigation\">\n    <button\n      mat-button\n      type=\"button\"\n      class=\"mat-text-btn\"\n      (click)=\"onNewAccount()\">\n      <small>{{ 'auth.create_new_account' | translate }}</small>\n    </button>\n    <button\n      mat-button\n      type=\"button\"\n      class=\"mat-text-btn\"\n      (click)=\"onForgotPassword()\">\n      <small>{{ 'auth.forgot_password' | translate }}</small>\n    </button>\n  </div>\n\n</div>\n","import { ChangeDetectionStrategy, Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { catchError, debounceTime, EMPTY, Subject, switchMap } from 'rxjs';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../shared/components/validation/validation.component';\nimport { EValidationErrors } from '../../../../shared/components/validation/validation-errors.enum';\nimport { SignInUpDirective } from '../../directives/sign-in-up/sign-in-up.directive';\nimport { EAuthDialogResult } from '../../enums/auth.enum';\nimport { ISignUp, ISignUpForm } from '../../interfaces/auth.interface';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-sign-up',\n  imports: [\n    FormsModule,\n    InputTextComponent,\n    MatButton,\n    ReactiveFormsModule,\n    TranslatePipe,\n    ValidationComponent,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignUpComponent extends SignInUpDirective<ISignUpForm> implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<SignUpComponent>);\n  private register$ = new Subject<void>();\n\n  userNamePending = signal<boolean>(false);\n  userNameExist = signal<boolean>(false);\n  emailPending = signal<boolean>(false);\n  emailExist = signal<boolean>(false);\n  userNameControl!: WritableSignal<FormControl<string>>;\n  confirmPasswordControl!: WritableSignal<FormControl<string>>;\n\n  override form!: FormGroup<ISignUpForm>;\n\n  ngOnInit(): void {\n    this.initForm();\n    this.observePasswordControl();\n    this.observeControlValueExist(\n      this.userNameControl,\n      this.userNamePending,\n      this.userNameExist,\n      this.authService.userNameExist.bind(this.authService),\n    );\n    this.observeControlValueExist(\n      this.emailControl,\n      this.emailPending,\n      this.emailExist,\n      this.authService.emailExist.bind(this.authService),\n    );\n    this.observeRegister();\n  }\n\n  onRegister(): void {\n    if (this.form.valid) {\n      this.register$.next();\n    }\n  }\n\n  onBackToLogin(): void {\n    this.dialogRef.close({ action: EAuthDialogResult.SignIn });\n  }\n\n  private initForm(): void {\n    this.form = new FormGroup<ISignUpForm>({\n      userName: new FormControl<string>('', {\n        validators: [\n          Validators.required,\n          this.validationService.userNameLength,\n          this.validationService.userName,\n          this.validationService.valueExist(this.userNamePending, this.userNameExist, EValidationErrors.UserNameExist),\n        ],\n        nonNullable: true,\n      }),\n      email: new FormControl<string>('', {\n        validators: [\n          Validators.required,\n          this.validationService.email,\n          this.validationService.valueExist(this.emailPending, this.emailExist, EValidationErrors.EmailExist),\n        ],\n        nonNullable: true,\n      }),\n      password: new FormControl<string>('', {\n        validators: [\n          Validators.required,\n          this.validationService.passwordLength,\n          this.validationService.password,\n        ],\n        nonNullable: true,\n      }),\n      confirmPassword: new FormControl<string>('', {\n        validators: [Validators.required],\n        nonNullable: true,\n      }),\n    });\n    this.userNameControl = signal(this.form.get('userName') as FormControl);\n    this.emailControl = signal(this.form.get('email') as FormControl);\n    this.passwordControl = signal(this.form.get('password') as FormControl);\n    this.confirmPasswordControl = signal(this.form.get('confirmPassword') as FormControl);\n    this.validationService.equalControls(this.confirmPasswordControl(), this.passwordControl());\n  }\n\n  private observePasswordControl(): void {\n    this.passwordControl().valueChanges.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(() => this.confirmPasswordControl().updateValueAndValidity());\n  }\n\n  private observeRegister(): void {\n    this.register$.pipe(\n      debounceTime(300),\n      switchMap(() => {\n        const signUpModel: ISignUp = {\n          userName: <string> this.form.value.userName,\n          email: <string> this.form.value.email,\n          password: <string> this.form.value.password,\n        };\n        return this.authService.signUp(signUpModel).pipe(\n          // Todo handle error msg\n          catchError(() => {\n            console.log('ERROR');\n            return EMPTY;\n          }),\n        );\n      }),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(user => this.dialogRef.close({\n      action: EAuthDialogResult.ConfirmEmail,\n      data: user,\n    }));\n  }\n}\n","<div class=\"wrapper auth-dialog\">\n\n  <h2 class=\"title\">{{ 'auth.registration_title' | translate }}</h2>\n\n  <form class=\"auth-form\" [formGroup]=\"form\">\n    <tnm-input-text\n      formControlName=\"userName\"\n      [label]=\"'auth.nickname' | translate\">\n      <tnm-validation [formControl]=\"userNameControl()\"></tnm-validation>\n    </tnm-input-text>\n    <tnm-input-text\n      formControlName=\"email\"\n      inputType=\"email\"\n      placeholder=\"tnm@mail.com\"\n      [label]=\"'auth.email' | translate\">\n      <tnm-validation [formControl]=\"emailControl()\"></tnm-validation>\n    </tnm-input-text>\n    <tnm-input-text\n      formControlName=\"password\"\n      inputType=\"password\"\n      placeholder=\"aaaaaaA1\"\n      [label]=\"'auth.password' | translate\">\n      <tnm-validation [formControl]=\"passwordControl()\"></tnm-validation>\n    </tnm-input-text>\n    <tnm-input-text\n      formControlName=\"confirmPassword\"\n      inputType=\"password\"\n      [label]=\"'auth.confirm_password' | translate\">\n      <tnm-validation [formControl]=\"confirmPasswordControl()\"></tnm-validation>\n    </tnm-input-text>\n  </form>\n\n  <button\n    mat-flat-button\n    type=\"button\"\n    class=\"mat-submit-btn\"\n    [disabled]=\"form.invalid\"\n    (click)=\"onRegister()\">\n    {{ 'auth.sign_up_btn' | translate }}\n  </button>\n\n  <hr class=\"divider\">\n\n  <div class=\"login-navigation\">\n    <button\n      mat-button\n      type=\"button\"\n      class=\"mat-text-btn\"\n      (click)=\"onBackToLogin()\">\n      <small>{{ 'auth.back_to_login' | translate }}</small>\n    </button>\n  </div>\n\n</div>\n\n","import { ChangeDetectionStrategy, Component, inject, OnInit, signal } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { catchError, debounceTime, EMPTY, Observable, Subject, switchMap } from 'rxjs';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../shared/components/validation/validation.component';\nimport { EValidationErrors } from '../../../../shared/components/validation/validation-errors.enum';\nimport { BaseAuthDirective } from '../../directives/base-auth/base-auth.directive';\nimport { EAuthDialogResult } from '../../enums/auth.enum';\n\n@Component({\n  selector: 'tnm-user-name',\n  imports: [\n    MatButtonModule,\n    InputTextComponent,\n    ReactiveFormsModule,\n    ValidationComponent,\n    TranslatePipe,\n  ],\n  templateUrl: './user-name.component.html',\n  styleUrl: './user-name.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserNameComponent extends BaseAuthDirective implements OnInit {\n\n  private readonly dialogRef = inject(MatDialogRef<UserNameComponent>);\n  private readonly data = inject<{ token: string; isGoogle: boolean }>(MAT_DIALOG_DATA);\n\n  signUp$ = new Subject<void>();\n\n  userNamePending = signal<boolean>(false);\n  userNameExist = signal<boolean>(false);\n  userNameControl = signal<FormControl<string>>(\n    new FormControl('', {\n      validators: [\n        Validators.required,\n        this.validationService.userNameLength,\n        this.validationService.userName,\n        this.validationService.valueExist(this.userNamePending, this.userNameExist, EValidationErrors.UserNameExist),\n      ],\n      nonNullable: true,\n    }),\n  );\n\n  ngOnInit(): void {\n    this.observeGoogleLogin();\n    this.observeControlValueExist(\n      this.userNameControl,\n      this.userNamePending,\n      this.userNameExist,\n      this.authService.userNameExist.bind(this.authService),\n    );\n  }\n\n  onContinue(): void {\n    if (this.userNameControl().valid) {\n      this.signUp$.next();\n    }\n  }\n\n  observeGoogleLogin(): void {\n    this.signUp$.pipe(\n      debounceTime(300),\n      switchMap(() => this.data.isGoogle ? this.handleGoogleLogin() : this.handleFacebookLogin()),\n    ).subscribe(response => {\n      this.dialogRef.close({ action: EAuthDialogResult.SignIn, data: response });\n    });\n  }\n\n  private handleGoogleLogin(): Observable<{ token: string }> {\n    return this.authService.signInGoogle(\n      { idToken: this.data.token, username: this.userNameControl().value },\n      // Todo add error handler\n    ).pipe(catchError(() => EMPTY));\n  }\n\n  private handleFacebookLogin(): Observable<{ token: string }> {\n    return this.authService.signInFacebook(\n      { idToken: this.data.token, username: this.userNameControl().value },\n      // Todo add error handler\n    ).pipe(catchError(() => EMPTY));\n  }\n}\n","<div class=\"wrapper\">\n  <h2 class=\"title\">{{'auth.nickname' | translate}}</h2>\n\n  <tnm-input-text\n    [formControl]=\"userNameControl()\"\n    [label]=\"'auth.nickname' | translate\">\n    <tnm-validation [formControl]=\"userNameControl()\"></tnm-validation>\n  </tnm-input-text>\n\n  <button\n    mat-flat-button\n    type=\"button\"\n    class=\"mat-submit-btn\"\n    [disabled]=\"userNameControl().invalid\"\n    (click)=\"onContinue()\">\n    Continue\n  </button>\n</div>\n","import { DestroyRef, Directive, inject, OnInit, output } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { catchError, EMPTY, map, merge, Observable, of, Subject, switchMap } from 'rxjs';\n\nimport { ChangePasswordComponent } from '../../components/change-password/change-password.component';\nimport { ForgotPasswordComponent } from '../../components/forgot-password/forgot-password.component';\nimport { SendEmailComponent } from '../../components/send-email/send-email.component';\nimport { SignInComponent } from '../../components/sign-in/sign-in.component';\nimport { SignUpComponent } from '../../components/sign-up/sign-up.component';\nimport { UserNameComponent } from '../../components/user-name/user-name.component';\nimport { EAuthDialogResult, EEmailMessageTypes } from '../../enums/auth.enum';\nimport {\n  IAuthDialogData,\n  IAuthResult,\n  IEmailConfirmation,\n  IPasswordChange,\n  IUser,\n} from '../../interfaces/auth.interface';\nimport { AuthService } from '../../services/auth/auth.service';\n\n\n@Directive({\n  standalone: true,\n  selector: '[tnmAuth]',\n})\nexport class AuthDirective implements OnInit {\n\n  private readonly dr = inject(DestroyRef);\n  private readonly aRoute = inject(ActivatedRoute);\n  private readonly authService = inject(AuthService);\n\n  private signUp$ = new Subject<void>();\n  private forgotPassword$ = new Subject<void>();\n  private changePassword$ = new Subject<IPasswordChange>();\n  private user$ = new Subject<void>();\n  private sendEmailNotification$ = new Subject<Partial<IAuthDialogData>>();\n  private confirmEmail$ = new Subject<IEmailConfirmation>();\n\n  refreshRoute = output<void>();\n  userLoggedIn = output<IUser>();\n\n  ngOnInit(): void {\n    this.observeConfirmEmail();\n    this.observeChangePassword();\n    this.observeSignIn();\n    this.observeSignUp();\n    this.observeSendEmailNotification();\n    this.observeUser();\n    this.observeForgotPassword();\n    this.observeRouteParams();\n    this.checkIfAuth();\n  }\n\n  private checkIfAuth(): void {\n    if (this.authService.authorised) {\n      this.user$.next();\n    }\n  }\n\n  private handleSocialLogin(signInDialogResult: Partial<IAuthResult>): Observable<Partial<IAuthResult>> {\n    if (\n      signInDialogResult?.action === EAuthDialogResult.SignInGoogle ||\n      signInDialogResult?.action === EAuthDialogResult.SignInFacebook\n    ) {\n      const idToken = signInDialogResult?.data?.token;\n      const isSignUp = signInDialogResult?.data?.isSignUp;\n      const isGoogle = signInDialogResult?.action === EAuthDialogResult.SignInGoogle;\n      const request = isGoogle ?\n        this.authService.signInGoogle.bind(this.authService) :\n        this.authService.signInFacebook.bind(this.authService);\n      if (idToken && isSignUp) {\n        return this.authService.openAuthDialog(UserNameComponent, { token: idToken, isGoogle });\n      }\n      if (idToken && !isSignUp) {\n        return request({ idToken, username: '' }).pipe(\n          map(response => ({\n            action: EAuthDialogResult.SignIn,\n            data: response,\n          } as Partial<IAuthResult>)),\n          // Todo add error handler\n          catchError(() => EMPTY),\n        );\n      }\n    }\n    return of(signInDialogResult);\n  }\n\n  private observeSignIn(): void {\n    this.authService.signIn$.pipe(\n      switchMap(() => this.authService.openAuthDialog(SignInComponent)),\n      switchMap(result => this.handleSocialLogin(result)),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      if (result?.data?.token && result?.action === EAuthDialogResult.SignIn) {\n        this.authService.authToken = result.data.token;\n        this.user$.next();\n      }\n      if (result?.action === EAuthDialogResult.SignUp) {\n        this.signUp$.next();\n      }\n      if (result?.action === EAuthDialogResult.ConfirmEmail) {\n        this.sendEmailNotification$.next({\n          ...result.data,\n          emailMsgType: EEmailMessageTypes.EmailConfirmation,\n        });\n      }\n      if (result?.action === EAuthDialogResult.ForgotPassword) {\n        this.forgotPassword$.next();\n      }\n    });\n  }\n\n  private observeSignUp(): void {\n    this.signUp$.pipe(\n      switchMap(() => this.authService.openAuthDialog(SignUpComponent)),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      if (result?.action === EAuthDialogResult.SignIn) {\n        this.authService.signIn$.next();\n      } else if (result?.action === EAuthDialogResult.ConfirmEmail) {\n        this.sendEmailNotification$.next({\n          ...result.data,\n          emailMsgType: EEmailMessageTypes.EmailConfirmation,\n        });\n      }\n    });\n  }\n\n  private observeSendEmailNotification(): void {\n    this.sendEmailNotification$.pipe(\n      switchMap(data => this.authService.openAuthDialog(SendEmailComponent, data)),\n      takeUntilDestroyed(this.dr),\n    ).subscribe();\n  }\n\n  private observeConfirmEmail(): void {\n    this.confirmEmail$.pipe(\n      switchMap(data => this.authService.confirmEmail(data).pipe(\n        // Todo handle error msg\n        catchError(() => EMPTY),\n      )),\n    ).subscribe(result => {\n      this.authService.authToken = result.token;\n      this.user$.next();\n    });\n  }\n\n  observeUser(): void {\n    this.user$.pipe(\n      switchMap(() => this.authService.getUser().pipe(\n        // Todo handle error msg\n        catchError(() => EMPTY),\n      )),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(user => {\n      this.userLoggedIn.emit(user);\n    });\n  }\n\n  private observeRouteParams(): void {\n    merge(this.aRoute.paramMap, this.aRoute.queryParamMap).pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(paramMap => {\n      const isLogin = paramMap.get('login');\n      const email = paramMap.get('email');\n      const token = paramMap.get('token');\n      const type = paramMap.get('type');\n      if (isLogin) {\n        this.authService.signIn$.next();\n        this.refreshRoute.emit();\n      }\n      if (email && token && type === EEmailMessageTypes.EmailConfirmation) {\n        this.confirmEmail$.next({ email, token });\n        this.refreshRoute.emit();\n      }\n      if (email && token && type === EEmailMessageTypes.PasswordReset) {\n        this.changePassword$.next({ email, token, password: '' });\n        this.refreshRoute.emit();\n      }\n    });\n  }\n\n  observeForgotPassword(): void {\n    this.forgotPassword$.pipe(\n      switchMap(() => this.authService.openAuthDialog(ForgotPasswordComponent)),\n    ).subscribe(result => {\n      if (result?.action === EAuthDialogResult.ConfirmEmail) {\n        this.sendEmailNotification$.next({\n          ...result.data,\n          emailMsgType: EEmailMessageTypes.EmailConfirmation,\n        });\n      }\n      if (result?.action === EAuthDialogResult.ForgotPassword) {\n        this.sendEmailNotification$.next({\n          ...result.data,\n          emailMsgType: EEmailMessageTypes.PasswordReset,\n        });\n      }\n    });\n  }\n\n  observeChangePassword(): void {\n    this.changePassword$.pipe(\n      switchMap(data => {\n        console.log('Hello');\n        return this.authService.openAuthDialog(ChangePasswordComponent, data);\n      }),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      if (result?.action === EAuthDialogResult.ForgotPassword) {\n        this.authService.signIn$.next();\n      }\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterComponent {\n\n}\n","<div class=\"wrapper\">\n  <div class=\"left-content\">\n    <h2 class=\"title\">VM-Soft</h2>\n    <ul class=\"list\">\n      <li><a href=\"#\" class=\"left-item\">Tank Way</a></li>\n      <li><a href=\"#\" class=\"left-item\">VM-Translate</a></li>\n      <li><a href=\"#\" class=\"left-item\">Tanks-N-Maps</a></li>\n    </ul>\n  </div>\n  <div class=\"right-content\">\n    <h2 class=\"title\">Contacts</h2>\n    <ul class=\"list\">\n      <li><a href=\"https://www.linkedin.com/in/viktor-monakhov-in/\" class=\"left-item\">LinkedIn</a></li>\n      <li><a href=\"https://github.com/Victor-Monakhov\" class=\"left-item\">GitHub</a></li>\n      <li>+380667006258</li>\n      <li>{{'victormonakhov92@gmail.com'}}</li>\n    </ul>\n  </div>\n</div>\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nlet UniqueSelectionDispatcher = /*#__PURE__*/(() => {\n  class UniqueSelectionDispatcher {\n    _listeners = [];\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n      for (let listener of this._listeners) {\n        listener(id, name);\n      }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n      this._listeners.push(listener);\n      return () => {\n        this._listeners = this._listeners.filter(registered => {\n          return listener !== registered;\n        });\n      };\n    }\n    ngOnDestroy() {\n      this._listeners = [];\n    }\n    static ɵfac = function UniqueSelectionDispatcher_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UniqueSelectionDispatcher)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UniqueSelectionDispatcher,\n      factory: UniqueSelectionDispatcher.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UniqueSelectionDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { UniqueSelectionDispatcher };\n","import { _ViewRepeaterOperation } from './recycle-view-repeater-strategy-Ce0p4WhD.mjs';\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n  applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n    changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n      let view;\n      let operation;\n      if (record.previousIndex == null) {\n        const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n        view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n        operation = _ViewRepeaterOperation.INSERTED;\n      } else if (currentIndex == null) {\n        viewContainerRef.remove(adjustedPreviousIndex);\n        operation = _ViewRepeaterOperation.REMOVED;\n      } else {\n        view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        operation = _ViewRepeaterOperation.MOVED;\n      }\n      if (itemViewChanged) {\n        itemViewChanged({\n          context: view?.context,\n          operation,\n          record\n        });\n      }\n    });\n  }\n  detach() {}\n}\nexport { _DisposeViewRepeaterStrategy };\n","import { Subject } from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n  _multiple;\n  _emitChanges;\n  compareWith;\n  /** Currently-selected values. */\n  _selection = /*#__PURE__*/new Set();\n  /** Keeps track of the deselected options that haven't been emitted by the change event. */\n  _deselectedToEmit = [];\n  /** Keeps track of the selected options that haven't been emitted by the change event. */\n  _selectedToEmit = [];\n  /** Cache for the array value of the selected items. */\n  _selected;\n  /** Selected values. */\n  get selected() {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n    return this._selected;\n  }\n  /** Event emitted when the value has changed. */\n  changed = /*#__PURE__*/new Subject();\n  constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n    this._multiple = _multiple;\n    this._emitChanges = _emitChanges;\n    this.compareWith = compareWith;\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n  /**\n   * Selects a value or an array of values.\n   * @param values The values to select\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  select(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._markSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Deselects a value or an array of values.\n   * @param values The values to deselect\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  deselect(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Sets the selected values\n   * @param values The new selected values\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  setSelection(...values) {\n    this._verifyValueAssignment(values);\n    const oldValues = this.selected;\n    const newSelectedSet = new Set(values.map(value => this._getConcreteValue(value)));\n    values.forEach(value => this._markSelected(value));\n    oldValues.filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet))).forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Toggles a value between selected and deselected.\n   * @param value The value to toggle\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  toggle(value) {\n    return this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n  /**\n   * Clears all of the selected values.\n   * @param flushEvent Whether to flush the changes in an event.\n   *   If false, the changes to the selection will be flushed along with the next event.\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  clear(flushEvent = true) {\n    this._unmarkAll();\n    const changed = this._hasQueuedChanges();\n    if (flushEvent) {\n      this._emitChangeEvent();\n    }\n    return changed;\n  }\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value) {\n    return this._selection.has(this._getConcreteValue(value));\n  }\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty() {\n    return this._selection.size === 0;\n  }\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue() {\n    return !this.isEmpty();\n  }\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate) {\n    if (this._multiple && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n  /** Emits a change event and clears the records of selected and deselected values. */\n  _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit\n      });\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n  /** Selects a value. */\n  _markSelected(value) {\n    value = this._getConcreteValue(value);\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n      if (!this.isSelected(value)) {\n        this._selection.add(value);\n      }\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n  /** Deselects a value. */\n  _unmarkSelected(value) {\n    value = this._getConcreteValue(value);\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n  /** Clears out the selected values. */\n  _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  _verifyValueAssignment(values) {\n    if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n  /** Whether there are queued up change to be emitted. */\n  _hasQueuedChanges() {\n    return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n  }\n  /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n  _getConcreteValue(inputValue, selection) {\n    if (!this.compareWith) {\n      return inputValue;\n    } else {\n      selection = selection ?? this._selection;\n      for (let selectedValue of selection) {\n        if (this.compareWith(inputValue, selectedValue)) {\n          return selectedValue;\n        }\n      }\n      return inputValue;\n    }\n  }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\nexport { SelectionModel, getMultipleValuesInSingleSelectionError };\n","import * as i0 from '@angular/core';\nimport { inject, ANIMATION_MODULE_TYPE, Input, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nlet MatPseudoCheckbox = /*#__PURE__*/(() => {\n  class MatPseudoCheckbox {\n    _animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    /** Display state of the checkbox. */\n    state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    disabled = false;\n    /**\n     * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n     * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n     */\n    appearance = 'full';\n    constructor() {}\n    static ɵfac = function MatPseudoCheckbox_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPseudoCheckbox)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatPseudoCheckbox,\n      selectors: [[\"mat-pseudo-checkbox\"]],\n      hostAttrs: [1, \"mat-pseudo-checkbox\"],\n      hostVars: 12,\n      hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        state: \"state\",\n        disabled: \"disabled\",\n        appearance: \"appearance\"\n      },\n      decls: 0,\n      vars: 0,\n      template: function MatPseudoCheckbox_Template(rf, ctx) {},\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatPseudoCheckbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MatPseudoCheckbox };\n","import { _IdGenerator, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW, UP_ARROW, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ChangeDetectorRef, EventEmitter, booleanAttribute, ElementRef, ANIMATION_MODULE_TYPE, HostAttributeToken, Input, Output, ContentChildren, Directive, ViewChild, ChangeDetectionStrategy, ViewEncapsulation, Component, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple } from './ripple-BPguEKwi.mjs';\nimport { MatPseudoCheckbox } from './pseudo-checkbox-Dy35mUmj.mjs';\nimport { _StructuralStylesLoader } from './structural-styles-B2ekkpE5.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport { MatRippleModule } from './index-eRSoE0yr.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"mat-pseudo-checkbox\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    hideSingleSelectionIndicator: false,\n    hideMultipleSelectionIndicator: false,\n    disabledInteractive: false\n  };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = /*#__PURE__*/new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n  source;\n  value;\n  constructor(/** The button toggle that emits the event. */\n  source, /** The value assigned to the button toggle. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nlet MatButtonToggleGroup = /*#__PURE__*/(() => {\n  class MatButtonToggleGroup {\n    _changeDetector = inject(ChangeDetectorRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _multiple = false;\n    _disabled = false;\n    _disabledInteractive = false;\n    _selectionModel;\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     */\n    _rawValue;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    _controlValueAccessorChangeFn = () => {};\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    _onTouched = () => {};\n    /** Child button toggle buttons. */\n    _buttonToggles;\n    /** The appearance for all the buttons in the group. */\n    appearance;\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n      return this._name;\n    }\n    set name(value) {\n      this._name = value;\n      this._markButtonsForCheck();\n    }\n    _name = inject(_IdGenerator).getId('mat-button-toggle-group-');\n    /** Whether the toggle group is vertical. */\n    vertical;\n    /** Value of the toggle group. */\n    get value() {\n      const selected = this._selectionModel ? this._selectionModel.selected : [];\n      if (this.multiple) {\n        return selected.map(toggle => toggle.value);\n      }\n      return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n      this._setSelectionByValue(newValue);\n      this.valueChange.emit(this.value);\n    }\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    /** Selected button toggles in the group. */\n    get selected() {\n      const selected = this._selectionModel ? this._selectionModel.selected : [];\n      return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      this._multiple = value;\n      this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._markButtonsForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n      this._markButtonsForCheck();\n    }\n    /** The layout direction of the toggle button group. */\n    get dir() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Event emitted when the group's value changes. */\n    change = new EventEmitter();\n    /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._markButtonsForCheck();\n    }\n    _hideSingleSelectionIndicator;\n    /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n    get hideMultipleSelectionIndicator() {\n      return this._hideMultipleSelectionIndicator;\n    }\n    set hideMultipleSelectionIndicator(value) {\n      this._hideMultipleSelectionIndicator = value;\n      this._markButtonsForCheck();\n    }\n    _hideMultipleSelectionIndicator;\n    constructor() {\n      const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n        optional: true\n      });\n      this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n      this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n      this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n    }\n    ngOnInit() {\n      this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n      this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n      if (!this.multiple) {\n        this._initializeTabIndex();\n      }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n      this.value = value;\n      this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /** Handle keydown event calling to single-select button toggle. */\n    _keydown(event) {\n      if (this.multiple || this.disabled) {\n        return;\n      }\n      const target = event.target;\n      const buttonId = target.id;\n      const index = this._buttonToggles.toArray().findIndex(toggle => {\n        return toggle.buttonId === buttonId;\n      });\n      let nextButton = null;\n      switch (event.keyCode) {\n        case SPACE:\n        case ENTER:\n          nextButton = this._buttonToggles.get(index) || null;\n          break;\n        case UP_ARROW:\n          nextButton = this._getNextButton(index, -1);\n          break;\n        case LEFT_ARROW:\n          nextButton = this._getNextButton(index, this.dir === 'ltr' ? -1 : 1);\n          break;\n        case DOWN_ARROW:\n          nextButton = this._getNextButton(index, 1);\n          break;\n        case RIGHT_ARROW:\n          nextButton = this._getNextButton(index, this.dir === 'ltr' ? 1 : -1);\n          break;\n        default:\n          return;\n      }\n      if (nextButton) {\n        event.preventDefault();\n        nextButton._onButtonClick();\n        nextButton.focus();\n      }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n      const event = new MatButtonToggleChange(toggle, this.value);\n      this._rawValue = event.value;\n      this._controlValueAccessorChangeFn(event.value);\n      this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n      // Deselect the currently-selected toggle, if we're in single-selection\n      // mode and the button being toggled isn't selected at the moment.\n      if (!this.multiple && this.selected && !toggle.checked) {\n        this.selected.checked = false;\n      }\n      if (this._selectionModel) {\n        if (select) {\n          this._selectionModel.select(toggle);\n        } else {\n          this._selectionModel.deselect(toggle);\n        }\n      } else {\n        deferEvents = true;\n      }\n      // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n      // the side-effect is that we may end up updating the model value out of sequence in others\n      // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n      if (deferEvents) {\n        Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n      } else {\n        this._updateModelValue(toggle, isUserInput);\n      }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n      return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n      if (typeof this._rawValue === 'undefined') {\n        return false;\n      }\n      if (this.multiple && Array.isArray(this._rawValue)) {\n        return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n      }\n      return toggle.value === this._rawValue;\n    }\n    /** Initializes the tabindex attribute using the radio pattern. */\n    _initializeTabIndex() {\n      this._buttonToggles.forEach(toggle => {\n        toggle.tabIndex = -1;\n      });\n      if (this.selected) {\n        this.selected.tabIndex = 0;\n      } else {\n        for (let i = 0; i < this._buttonToggles.length; i++) {\n          const toggle = this._buttonToggles.get(i);\n          if (!toggle.disabled) {\n            toggle.tabIndex = 0;\n            break;\n          }\n        }\n      }\n      this._markButtonsForCheck();\n    }\n    /** Obtain the subsequent toggle to which the focus shifts. */\n    _getNextButton(startIndex, offset) {\n      const items = this._buttonToggles;\n      for (let i = 1; i <= items.length; i++) {\n        const index = (startIndex + offset * i + items.length) % items.length;\n        const item = items.get(index);\n        if (item && !item.disabled) {\n          return item;\n        }\n      }\n      return null;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n      this._rawValue = value;\n      if (!this._buttonToggles) {\n        return;\n      }\n      const toggles = this._buttonToggles.toArray();\n      if (this.multiple && value) {\n        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Value must be an array in multiple-selection mode.');\n        }\n        this._clearSelection();\n        value.forEach(currentValue => this._selectValue(currentValue, toggles));\n      } else {\n        this._clearSelection();\n        this._selectValue(value, toggles);\n      }\n      // In single selection mode we need at least one enabled toggle to always be focusable.\n      if (!this.multiple && toggles.every(toggle => toggle.tabIndex === -1)) {\n        for (const toggle of toggles) {\n          if (!toggle.disabled) {\n            toggle.tabIndex = 0;\n            break;\n          }\n        }\n      }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n      this._selectionModel.clear();\n      this._buttonToggles.forEach(toggle => {\n        toggle.checked = false;\n        // If the button toggle is in single select mode, initialize the tabIndex.\n        if (!this.multiple) {\n          toggle.tabIndex = -1;\n        }\n      });\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value, toggles) {\n      for (const toggle of toggles) {\n        if (toggle.value === value) {\n          toggle.checked = true;\n          this._selectionModel.select(toggle);\n          if (!this.multiple) {\n            // If the button toggle is in single select mode, reset the tabIndex.\n            toggle.tabIndex = 0;\n          }\n          break;\n        }\n      }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n      // Only emit the change event for user input.\n      if (isUserInput) {\n        this._emitChangeEvent(toggle);\n      }\n      // Note: we emit this one no matter whether it was a user interaction, because\n      // it is used by Angular to sync up the two-way data binding.\n      this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n      this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n    static ɵfac = function MatButtonToggleGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatButtonToggleGroup)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatButtonToggleGroup,\n      selectors: [[\"mat-button-toggle-group\"]],\n      contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-button-toggle-group\"],\n      hostVars: 6,\n      hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatButtonToggleGroup_keydown_HostBindingHandler($event) {\n            return ctx._keydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.multiple ? \"group\" : \"radiogroup\")(\"aria-disabled\", ctx.disabled);\n          i0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n        }\n      },\n      inputs: {\n        appearance: \"appearance\",\n        name: \"name\",\n        vertical: [2, \"vertical\", \"vertical\", booleanAttribute],\n        value: \"value\",\n        multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n        hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n        hideMultipleSelectionIndicator: [2, \"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute]\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        change: \"change\"\n      },\n      exportAs: [\"matButtonToggleGroup\"],\n      features: [i0.ɵɵProvidersFeature([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n        provide: MAT_BUTTON_TOGGLE_GROUP,\n        useExisting: MatButtonToggleGroup\n      }])]\n    });\n  }\n  return MatButtonToggleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Single button inside of a toggle group. */\nlet MatButtonToggle = /*#__PURE__*/(() => {\n  class MatButtonToggle {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _idGenerator = inject(_IdGenerator);\n    _animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    _checked = false;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     */\n    ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    ariaLabelledby = null;\n    /** Underlying native `button` element. */\n    _buttonElement;\n    /** The parent button toggle group (exclusive selection). Optional. */\n    buttonToggleGroup;\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n      return `${this.id}-button`;\n    }\n    /** The unique ID for this button toggle. */\n    id;\n    /** HTML's 'name' attribute used to group radios for unique selection. */\n    name;\n    /** MatButtonToggleGroup reads this to assign its own value. */\n    value;\n    /** Tabindex of the toggle. */\n    get tabIndex() {\n      return this._tabIndex;\n    }\n    set tabIndex(value) {\n      if (value !== this._tabIndex) {\n        this._tabIndex = value;\n        this._markForCheck();\n      }\n    }\n    _tabIndex;\n    /** Whether ripples are disabled on the button toggle. */\n    disableRipple;\n    /** The appearance style of the button. */\n    get appearance() {\n      return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n      this._appearance = value;\n    }\n    _appearance;\n    /** Whether the button is checked. */\n    get checked() {\n      return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n      if (value !== this._checked) {\n        this._checked = value;\n        if (this.buttonToggleGroup) {\n          this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n        }\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n      return this._disabled || this.buttonToggleGroup && this.buttonToggleGroup.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    _disabled = false;\n    /** Whether the button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive || this.buttonToggleGroup !== null && this.buttonToggleGroup.disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n    }\n    _disabledInteractive;\n    /** Event emitted when the group value changes. */\n    change = new EventEmitter();\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      const toggleGroup = inject(MAT_BUTTON_TOGGLE_GROUP, {\n        optional: true\n      });\n      const defaultTabIndex = inject(new HostAttributeToken('tabindex'), {\n        optional: true\n      }) || '';\n      const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n        optional: true\n      });\n      this._tabIndex = parseInt(defaultTabIndex) || 0;\n      this.buttonToggleGroup = toggleGroup;\n      this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n      this.disabledInteractive = defaultOptions?.disabledInteractive ?? false;\n    }\n    ngOnInit() {\n      const group = this.buttonToggleGroup;\n      this.id = this.id || this._idGenerator.getId('mat-button-toggle-');\n      if (group) {\n        if (group._isPrechecked(this)) {\n          this.checked = true;\n        } else if (group._isSelected(this) !== this._checked) {\n          // As side effect of the circular dependency between the toggle group and the button,\n          // we may end up in a state where the button is supposed to be checked on init, but it\n          // isn't, because the checked value was assigned too early. This can happen when Ivy\n          // assigns the static input value before the `ngOnInit` has run.\n          group._syncButtonToggle(this, this._checked);\n        }\n      }\n    }\n    ngAfterViewInit() {\n      // This serves two purposes:\n      // 1. We don't want the animation to fire on the first render for pre-checked toggles so we\n      //    delay adding the class until the view is rendered.\n      // 2. We don't want animation if the `NoopAnimationsModule` is provided.\n      if (this._animationMode !== 'NoopAnimations') {\n        this._elementRef.nativeElement.classList.add('mat-button-toggle-animations-enabled');\n      }\n      this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n      const group = this.buttonToggleGroup;\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      // Remove the toggle from the selection once it's destroyed. Needs to happen\n      // on the next tick in order to avoid \"changed after checked\" errors.\n      if (group && group._isSelected(this)) {\n        group._syncButtonToggle(this, false, false, true);\n      }\n    }\n    /** Focuses the button. */\n    focus(options) {\n      this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n      if (this.disabled) {\n        return;\n      }\n      const newChecked = this.isSingleSelector() ? true : !this._checked;\n      if (newChecked !== this._checked) {\n        this._checked = newChecked;\n        if (this.buttonToggleGroup) {\n          this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n          this.buttonToggleGroup._onTouched();\n        }\n      }\n      if (this.isSingleSelector()) {\n        const focusable = this.buttonToggleGroup._buttonToggles.find(toggle => {\n          return toggle.tabIndex === 0;\n        });\n        // Modify the tabindex attribute of the last focusable button toggle to -1.\n        if (focusable) {\n          focusable.tabIndex = -1;\n        }\n        // Modify the tabindex attribute of the presently selected button toggle to 0.\n        this.tabIndex = 0;\n      }\n      // Emit a change event when it's the single selector\n      this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n      // When the group value changes, the button will not be notified.\n      // Use `markForCheck` to explicit update button toggle's status.\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n      if (this.isSingleSelector()) {\n        return this.buttonToggleGroup.name;\n      }\n      return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    isSingleSelector() {\n      return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n    static ɵfac = function MatButtonToggle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatButtonToggle)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatButtonToggle,\n      selectors: [[\"mat-button-toggle\"]],\n      viewQuery: function MatButtonToggle_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"],\n      hostVars: 14,\n      hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() {\n            return ctx.focus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n          i0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-disabled-interactive\", ctx.disabledInteractive)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n        }\n      },\n      inputs: {\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        id: \"id\",\n        name: \"name\",\n        value: \"value\",\n        tabIndex: \"tabIndex\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        appearance: \"appearance\",\n        checked: [2, \"checked\", \"checked\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matButtonToggle\"],\n      ngContentSelectors: _c1,\n      decls: 7,\n      vars: 13,\n      consts: [[\"button\", \"\"], [\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"click\", \"id\", \"disabled\"], [1, \"mat-button-toggle-checkbox-wrapper\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\"]],\n      template: function MatButtonToggle_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 1, 0);\n          i0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onButtonClick());\n          });\n          i0.ɵɵtemplate(2, MatButtonToggle_Conditional_2_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementStart(3, \"span\", 3);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(5, \"span\", 4)(6, \"span\", 5);\n        }\n        if (rf & 2) {\n          const button_r3 = i0.ɵɵreference(1);\n          i0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled && !ctx.disabledInteractive || null);\n          i0.ɵɵattribute(\"role\", ctx.isSingleSelector() ? \"radio\" : \"button\")(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-pressed\", !ctx.isSingleSelector() ? ctx.checked : null)(\"aria-checked\", ctx.isSingleSelector() ? ctx.checked : null)(\"name\", ctx._getButtonName())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.buttonToggleGroup && (!ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideSingleSelectionIndicator || ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideMultipleSelectionIndicator) ? 2 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"matRippleTrigger\", button_r3)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n        }\n      },\n      dependencies: [MatRipple, MatPseudoCheckbox],\n      styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}@media(forced-colors: active){.mat-button-toggle-standalone,.mat-button-toggle-group{outline:solid 1px}}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}@media(forced-colors: active){.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{outline:0}}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checkbox-wrapper{display:inline-block;justify-content:flex-start;align-items:center;width:0;height:18px;line-height:18px;overflow:hidden;box-sizing:border-box;position:absolute;top:50%;left:16px;transform:translate3d(0, -50%, 0)}[dir=rtl] .mat-button-toggle-checkbox-wrapper{left:auto;right:16px}.mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:12px}[dir=rtl] .mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:auto;right:12px}.mat-button-toggle-checked .mat-button-toggle-checkbox-wrapper{width:18px}.mat-button-toggle-animations-enabled .mat-button-toggle-checkbox-wrapper{transition:width 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-checkbox-wrapper{transition:none}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-sys-on-surface));background-color:var(--mat-standard-button-toggle-background-color, transparent);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-sys-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-sys-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-sys-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-state-background-color, transparent)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-sys-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height, 40px)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}@media(forced-colors: active){.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-animations-enabled .mat-button-toggle-button{transition:padding 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-button{transition:none}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:30px}[dir=rtl] .mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:0;padding-right:30px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatButtonToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatButtonToggleModule = /*#__PURE__*/(() => {\n  class MatButtonToggleModule {\n    static ɵfac = function MatButtonToggleModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatButtonToggleModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatButtonToggleModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule]\n    });\n  }\n  return MatButtonToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import * as i0 from '@angular/core';\nimport { Input, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nconst _c0 = [\"mat-internal-form-field\", \"\"];\nconst _c1 = [\"*\"];\nlet _MatInternalFormField = /*#__PURE__*/(() => {\n  class _MatInternalFormField {\n    /** Position of the label relative to the content. */\n    labelPosition;\n    static ɵfac = function _MatInternalFormField_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _MatInternalFormField)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: _MatInternalFormField,\n      selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n      hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n      hostVars: 2,\n      hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n        }\n      },\n      inputs: {\n        labelPosition: \"labelPosition\"\n      },\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 0,\n      template: function _MatInternalFormField_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return _MatInternalFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { _MatInternalFormField };\n","import { _IdGenerator, FocusMonitor } from '@angular/cdk/a11y';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { forwardRef, InjectionToken, inject, ChangeDetectorRef, EventEmitter, booleanAttribute, ElementRef, NgZone, Renderer2, Injector, ANIMATION_MODULE_TYPE, HostAttributeToken, numberAttribute, afterNextRender, Input, ContentChildren, Output, Directive, ViewChild, ChangeDetectionStrategy, ViewEncapsulation, Component, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _StructuralStylesLoader } from './structural-styles-B2ekkpE5.mjs';\nimport { MatRipple } from './ripple-BPguEKwi.mjs';\nimport { _MatInternalFormField } from './internal-form-field-C8swiHbL.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport { MatRippleModule } from './index-eRSoE0yr.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Change event object emitted by radio button and radio group. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"formField\"];\nconst _c2 = [\"*\"];\nclass MatRadioChange {\n  source;\n  value;\n  constructor(/** The radio button that emits the change event. */\n  source, /** The value of the radio button. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatRadioGroup),\n  multi: true\n};\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = /*#__PURE__*/new InjectionToken('MatRadioGroup');\nconst MAT_RADIO_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-radio-default-options', {\n  providedIn: 'root',\n  factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    disabledInteractive: false\n  };\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nlet MatRadioGroup = /*#__PURE__*/(() => {\n  class MatRadioGroup {\n    _changeDetector = inject(ChangeDetectorRef);\n    /** Selected value for the radio group. */\n    _value = null;\n    /** The HTML name attribute applied to radio buttons in this group. */\n    _name = inject(_IdGenerator).getId('mat-radio-group-');\n    /** The currently selected radio button. Should match value. */\n    _selected = null;\n    /** Whether the `value` has been set to its initial value. */\n    _isInitialized = false;\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    _labelPosition = 'after';\n    /** Whether the radio group is disabled. */\n    _disabled = false;\n    /** Whether the radio group is required. */\n    _required = false;\n    /** Subscription to changes in amount of radio buttons. */\n    _buttonChanges;\n    /** The method to be called in order to update ngModel */\n    _controlValueAccessorChangeFn = () => {};\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    onTouched = () => {};\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    change = new EventEmitter();\n    /** Child radio buttons. */\n    _radios;\n    /**\n     * Theme color of the radio buttons in the group. This API is supported in M2\n     * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/radio/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n      return this._name;\n    }\n    set name(value) {\n      this._name = value;\n      this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n      return this._labelPosition;\n    }\n    set labelPosition(v) {\n      this._labelPosition = v === 'before' ? 'before' : 'after';\n      this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      if (this._value !== newValue) {\n        // Set this before proceeding to ensure no circular loop occurs with selection.\n        this._value = newValue;\n        this._updateSelectedRadioFromValue();\n        this._checkSelectedRadioButton();\n      }\n    }\n    _checkSelectedRadioButton() {\n      if (this._selected && !this._selected.checked) {\n        this._selected.checked = true;\n      }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n      return this._selected;\n    }\n    set selected(selected) {\n      this._selected = selected;\n      this.value = selected ? selected.value : null;\n      this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n      return this._required;\n    }\n    set required(value) {\n      this._required = value;\n      this._markRadiosForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n      this._markRadiosForCheck();\n    }\n    _disabledInteractive = false;\n    constructor() {}\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n      // Mark this component as initialized in AfterContentInit because the initial value can\n      // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n      // NgModel occurs *after* the OnInit of the MatRadioGroup.\n      this._isInitialized = true;\n      // Clear the `selected` button when it's destroyed since the tabindex of the rest of the\n      // buttons depends on it. Note that we don't clear the `value`, because the radio button\n      // may be swapped out with a similar one and there are some internal apps that depend on\n      // that behavior.\n      this._buttonChanges = this._radios.changes.subscribe(() => {\n        if (this.selected && !this._radios.find(radio => radio === this.selected)) {\n          this._selected = null;\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._buttonChanges?.unsubscribe();\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n      if (this.onTouched) {\n        this.onTouched();\n      }\n    }\n    _updateRadioButtonNames() {\n      if (this._radios) {\n        this._radios.forEach(radio => {\n          radio.name = this.name;\n          radio._markForCheck();\n        });\n      }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n      // If the value already matches the selected radio, do nothing.\n      const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n      if (this._radios && !isAlreadySelected) {\n        this._selected = null;\n        this._radios.forEach(radio => {\n          radio.checked = this.value === radio.value;\n          if (radio.checked) {\n            this._selected = radio;\n          }\n        });\n      }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n      if (this._isInitialized) {\n        this.change.emit(new MatRadioChange(this._selected, this._value));\n      }\n    }\n    _markRadiosForCheck() {\n      if (this._radios) {\n        this._radios.forEach(radio => radio._markForCheck());\n      }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n      this.value = value;\n      this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetector.markForCheck();\n    }\n    static ɵfac = function MatRadioGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatRadioGroup)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRadioGroup,\n      selectors: [[\"mat-radio-group\"]],\n      contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._radios = _t);\n        }\n      },\n      hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-mdc-radio-group\"],\n      inputs: {\n        color: \"color\",\n        name: \"name\",\n        labelPosition: \"labelPosition\",\n        value: \"value\",\n        selected: \"selected\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        required: [2, \"required\", \"required\", booleanAttribute],\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matRadioGroup\"],\n      features: [i0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, {\n        provide: MAT_RADIO_GROUP,\n        useExisting: MatRadioGroup\n      }])]\n    });\n  }\n  return MatRadioGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRadioButton = /*#__PURE__*/(() => {\n  class MatRadioButton {\n    _elementRef = inject(ElementRef);\n    _changeDetector = inject(ChangeDetectorRef);\n    _focusMonitor = inject(FocusMonitor);\n    _radioDispatcher = inject(UniqueSelectionDispatcher);\n    _defaultOptions = inject(MAT_RADIO_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _uniqueId = inject(_IdGenerator).getId('mat-radio-');\n    _cleanupClick;\n    /** The unique ID for the radio button. */\n    id = this._uniqueId;\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    name;\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    ariaLabel;\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    ariaLabelledby;\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    ariaDescribedby;\n    /** Whether ripples are disabled inside the radio button */\n    disableRipple = false;\n    /** Tabindex of the radio button. */\n    tabIndex = 0;\n    /** Whether this radio button is checked. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      if (this._checked !== value) {\n        this._checked = value;\n        if (value && this.radioGroup && this.radioGroup.value !== this.value) {\n          this.radioGroup.selected = this;\n        } else if (!value && this.radioGroup && this.radioGroup.value === this.value) {\n          // When unchecking the selected radio button, update the selected radio\n          // property on the group.\n          this.radioGroup.selected = null;\n        }\n        if (value) {\n          // Notify all radio buttons with the same name to un-check.\n          this._radioDispatcher.notify(this.id, this.name);\n        }\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** The value of this radio button. */\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      if (this._value !== value) {\n        this._value = value;\n        if (this.radioGroup !== null) {\n          if (!this.checked) {\n            // Update checked when the value changed to match the radio group's value\n            this.checked = this.radioGroup.value === value;\n          }\n          if (this.checked) {\n            this.radioGroup.selected = this;\n          }\n        }\n      }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n      return this._labelPosition || this.radioGroup && this.radioGroup.labelPosition || 'after';\n    }\n    set labelPosition(value) {\n      this._labelPosition = value;\n    }\n    _labelPosition;\n    /** Whether the radio button is disabled. */\n    get disabled() {\n      return this._disabled || this.radioGroup !== null && this.radioGroup.disabled;\n    }\n    set disabled(value) {\n      this._setDisabled(value);\n    }\n    /** Whether the radio button is required. */\n    get required() {\n      return this._required || this.radioGroup && this.radioGroup.required;\n    }\n    set required(value) {\n      this._required = value;\n    }\n    /**\n     * Theme color of the radio button. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/radio/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get color() {\n      // As per M2 design specifications the selection control radio should use the accent color\n      // palette by default. https://m2.material.io/components/radio-buttons#specs\n      return this._color || this.radioGroup && this.radioGroup.color || this._defaultOptions && this._defaultOptions.color || 'accent';\n    }\n    set color(newValue) {\n      this._color = newValue;\n    }\n    _color;\n    /** Whether the radio button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive || this.radioGroup !== null && this.radioGroup.disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n    }\n    _disabledInteractive;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    change = new EventEmitter();\n    /** The parent radio group. May or may not be present. */\n    radioGroup;\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether this radio is checked. */\n    _checked = false;\n    /** Whether this radio is disabled. */\n    _disabled;\n    /** Whether this radio is required. */\n    _required;\n    /** Value assigned to this radio. */\n    _value = null;\n    /** Unregister function for _radioDispatcher */\n    _removeUniqueSelectionListener = () => {};\n    /** Previous value of the input's tabindex. */\n    _previousTabIndex;\n    /** The native `<input type=radio>` element */\n    _inputElement;\n    /** Trigger elements for the ripple events. */\n    _rippleTrigger;\n    /** Whether animations are disabled. */\n    _noopAnimations;\n    _injector = inject(Injector);\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      const radioGroup = inject(MAT_RADIO_GROUP, {\n        optional: true\n      });\n      const animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      const tabIndex = inject(new HostAttributeToken('tabindex'), {\n        optional: true\n      });\n      // Assertions. Ideally these should be stripped out by the compiler.\n      // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n      this.radioGroup = radioGroup;\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this._disabledInteractive = this._defaultOptions?.disabledInteractive ?? false;\n      if (tabIndex) {\n        this.tabIndex = numberAttribute(tabIndex, 0);\n      }\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n      if (origin) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n      } else {\n        this._inputElement.nativeElement.focus(options);\n      }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n      // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n      // update radio button's status\n      this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n      if (this.radioGroup) {\n        // If the radio is inside a radio group, determine if it should be checked\n        this.checked = this.radioGroup.value === this._value;\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n        // Copy name from parent radio group\n        this.name = this.radioGroup.name;\n      }\n      this._removeUniqueSelectionListener = this._radioDispatcher.listen((id, name) => {\n        if (id !== this.id && name === this.name) {\n          this.checked = false;\n        }\n      });\n    }\n    ngDoCheck() {\n      this._updateTabIndex();\n    }\n    ngAfterViewInit() {\n      this._updateTabIndex();\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (!focusOrigin && this.radioGroup) {\n          this.radioGroup._touch();\n        }\n      });\n      // We bind this outside of the zone, because:\n      // 1. Its logic is completely DOM-related so we can avoid some change detections.\n      // 2. There appear to be some internal tests that break when this triggers a change detection.\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupClick = this._renderer.listen(this._inputElement.nativeElement, 'click', this._onInputClick);\n      });\n    }\n    ngOnDestroy() {\n      this._cleanupClick?.();\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n      this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n      return this.disableRipple || this.disabled;\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n      // We always have to stop propagation on the change event.\n      // Otherwise the change event, from the input element, will bubble up and\n      // emit its event object to the `change` output.\n      event.stopPropagation();\n      if (!this.checked && !this.disabled) {\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n          this.radioGroup._controlValueAccessorChangeFn(this.value);\n          if (groupValueChanged) {\n            this.radioGroup._emitChangeEvent();\n          }\n        }\n      }\n    }\n    /** Triggered when the user clicks on the touch target. */\n    _onTouchTargetClick(event) {\n      this._onInputInteraction(event);\n      if (!this.disabled || this.disabledInteractive) {\n        // Normally the input should be focused already, but if the click\n        // comes from the touch target, then we might have to focus it ourselves.\n        this._inputElement?.nativeElement.focus();\n      }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n      if (this._disabled !== value) {\n        this._disabled = value;\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** Called when the input is clicked. */\n    _onInputClick = event => {\n      // If the input is disabled while interactive, we need to prevent the\n      // selection from happening in this event handler. Note that even though\n      // this happens on `click` events, the logic applies when the user is\n      // navigating with the keyboard as well. An alternative way of doing\n      // this is by resetting the `checked` state in the `change` callback but\n      // it isn't optimal, because it can allow a pre-checked disabled button\n      // to be un-checked. This approach seems to cover everything.\n      if (this.disabled && this.disabledInteractive) {\n        event.preventDefault();\n      }\n    };\n    /** Gets the tabindex for the underlying input element. */\n    _updateTabIndex() {\n      const group = this.radioGroup;\n      let value;\n      // Implement a roving tabindex if the button is inside a group. For most cases this isn't\n      // necessary, because the browser handles the tab order for inputs inside a group automatically,\n      // but we need an explicitly higher tabindex for the selected button in order for things like\n      // the focus trap to pick it up correctly.\n      if (!group || !group.selected || this.disabled) {\n        value = this.tabIndex;\n      } else {\n        value = group.selected === this ? this.tabIndex : -1;\n      }\n      if (value !== this._previousTabIndex) {\n        // We have to set the tabindex directly on the DOM node, because it depends on\n        // the selected state which is prone to \"changed after checked errors\".\n        const input = this._inputElement?.nativeElement;\n        if (input) {\n          input.setAttribute('tabindex', value + '');\n          this._previousTabIndex = value;\n          // Wait for any pending tabindex changes to be applied\n          afterNextRender(() => {\n            queueMicrotask(() => {\n              // The radio group uses a \"selection follows focus\" pattern for tab management, so if this\n              // radio button is currently focused and another radio button in the group becomes\n              // selected, we should move focus to the newly selected radio button to maintain\n              // consistency between the focused and selected states.\n              if (group && group.selected && group.selected !== this && document.activeElement === input) {\n                group.selected?._inputElement.nativeElement.focus();\n                // If this radio button still has focus, the selected one must be disabled. In this\n                // case the radio group as a whole should lose focus.\n                if (document.activeElement === input) {\n                  this._inputElement.nativeElement.blur();\n                }\n              }\n            });\n          }, {\n            injector: this._injector\n          });\n        }\n      }\n    }\n    static ɵfac = function MatRadioButton_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatRadioButton)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatRadioButton,\n      selectors: [[\"mat-radio-button\"]],\n      viewQuery: function MatRadioButton_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._rippleTrigger = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-radio-button\"],\n      hostVars: 19,\n      hostBindings: function MatRadioButton_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() {\n            return ctx._inputElement.nativeElement.focus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n          i0.ɵɵclassProp(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-mdc-radio-checked\", ctx.checked)(\"mat-mdc-radio-disabled\", ctx.disabled)(\"mat-mdc-radio-disabled-interactive\", ctx.disabledInteractive)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        id: \"id\",\n        name: \"name\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        checked: [2, \"checked\", \"checked\", booleanAttribute],\n        value: \"value\",\n        labelPosition: \"labelPosition\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        required: [2, \"required\", \"required\", booleanAttribute],\n        color: \"color\",\n        disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matRadioButton\"],\n      ngContentSelectors: _c2,\n      decls: 13,\n      vars: 17,\n      consts: [[\"formField\", \"\"], [\"input\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [1, \"mdc-radio\"], [1, \"mat-mdc-radio-touch-target\", 3, \"click\"], [\"type\", \"radio\", 1, \"mdc-radio__native-control\", 3, \"change\", \"id\", \"checked\", \"disabled\", \"required\"], [1, \"mdc-radio__background\"], [1, \"mdc-radio__outer-circle\"], [1, \"mdc-radio__inner-circle\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mdc-label\", 3, \"for\"]],\n      template: function MatRadioButton_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 2, 0)(2, \"div\", 3)(3, \"div\", 4);\n          i0.ɵɵlistener(\"click\", function MatRadioButton_Template_div_click_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTouchTargetClick($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 5, 1);\n          i0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInputInteraction($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 6);\n          i0.ɵɵelement(7, \"div\", 7)(8, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9);\n          i0.ɵɵelement(10, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"label\", 11);\n          i0.ɵɵprojection(12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"mdc-radio--disabled\", ctx.disabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"required\", ctx.required);\n          i0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx._rippleTrigger.nativeElement)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"for\", ctx.inputId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mat-mdc-radio-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-radio-button .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled]):not(:focus)~.mdc-radio__background::before{opacity:.04;transform:scale(1)}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:not([disabled])~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-hover-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:hover>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-hover-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-pressed-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio:active>.mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-pressed-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-radio-button .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px);top:calc(-1*(var(--mdc-radio-state-layer-size, 40px) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size, 40px) - 20px)/2)}.mat-mdc-radio-button .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-radio-button .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size, 40px);height:var(--mdc-radio-state-layer-size, 40px)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:focus+.mdc-radio__background::before{transform:scale(1);opacity:.12;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:disabled+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:checked+.mdc-radio__background>.mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button .mdc-radio__native-control:enabled:focus:checked+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-selected-focus-icon-color, var(--mat-sys-primary))}.mat-mdc-radio-button .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled{pointer-events:auto}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:not(:checked)+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-sys-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity, 0.38)}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled:hover .mdc-radio__native-control:checked+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control:checked:focus+.mdc-radio__background>.mdc-radio__outer-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__inner-circle,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__native-control+.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-sys-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity, 0.38)}.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-radio-button._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-radio-button .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.mat-mdc-radio-checked .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-checked .mdc-radio__background::before{background-color:var(--mat-radio-checked-ripple-color, var(--mat-sys-primary))}.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mat-ripple-element,.mat-mdc-radio-button.mat-mdc-radio-disabled-interactive .mdc-radio--disabled .mdc-radio__background::before{background-color:var(--mat-radio-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button .mat-internal-form-field{color:var(--mat-radio-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-radio-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-radio-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-radio-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-radio-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-radio-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-radio-button .mdc-radio--disabled+label{color:var(--mat-radio-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-radio-button .mat-radio-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:50%}.mat-mdc-radio-button .mat-radio-ripple>.mat-ripple-element{opacity:.14}.mat-mdc-radio-button .mat-radio-ripple::before{border-radius:50%}.mat-mdc-radio-button .mdc-radio>.mdc-radio__native-control:focus:enabled:not(:checked)~.mdc-radio__background>.mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mat-mdc-radio-button.cdk-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-radio-disabled{cursor:default;pointer-events:none}.mat-mdc-radio-disabled.mat-mdc-radio-disabled-interactive{pointer-events:auto}.mat-mdc-radio-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-radio-touch-target-display, block)}[dir=rtl] .mat-mdc-radio-touch-target{left:auto;right:50%;transform:translate(50%, -50%)}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatRadioButton;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRadioModule = /*#__PURE__*/(() => {\n  class MatRadioModule {\n    static ɵfac = function MatRadioModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatRadioModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatRadioModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule, MatRadioButton, MatCommonModule]\n    });\n  }\n  return MatRadioModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Input, ChangeDetectionStrategy, ViewEncapsulation, Component, ElementRef, ChangeDetectorRef, EventEmitter, isSignal, ViewChild, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MatRipple } from './ripple-BPguEKwi.mjs';\nimport { MatPseudoCheckbox } from './pseudo-checkbox-Dy35mUmj.mjs';\nimport { _StructuralStylesLoader } from './structural-styles-B2ekkpE5.mjs';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.group.label, \")\");\n  }\n}\nconst MAT_OPTION_PARENT_COMPONENT = /*#__PURE__*/new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = /*#__PURE__*/new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nlet MatOptgroup = /*#__PURE__*/(() => {\n  class MatOptgroup {\n    /** Label for the option group. */\n    label;\n    /** whether the option group is disabled. */\n    disabled = false;\n    /** Unique id for the underlying label. */\n    _labelId = inject(_IdGenerator).getId('mat-optgroup-label-');\n    /** Whether the group is in inert a11y mode. */\n    _inert;\n    constructor() {\n      const parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n        optional: true\n      });\n      this._inert = parent?.inertGroups ?? false;\n    }\n    static ɵfac = function MatOptgroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatOptgroup)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatOptgroup,\n      selectors: [[\"mat-optgroup\"]],\n      hostAttrs: [1, \"mat-mdc-optgroup\"],\n      hostVars: 3,\n      hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n        }\n      },\n      inputs: {\n        label: \"label\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      exportAs: [\"matOptgroup\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }])],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 4,\n      consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n      template: function MatOptgroup_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵprojection(3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵprojection(4, 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n          i0.ɵɵproperty(\"id\", ctx._labelId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n        }\n      },\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatOptgroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  source;\n  isUserInput;\n  constructor(/** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nlet MatOption = /*#__PURE__*/(() => {\n  class MatOption {\n    _element = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n      optional: true\n    });\n    group = inject(MAT_OPTGROUP, {\n      optional: true\n    });\n    _signalDisableRipple = false;\n    _selected = false;\n    _active = false;\n    _disabled = false;\n    _mostRecentViewValue = '';\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n      return this._selected;\n    }\n    /** The form value of the option. */\n    value;\n    /** The unique ID of the option. */\n    id = inject(_IdGenerator).getId('mat-option-');\n    /** Whether the option is disabled. */\n    get disabled() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n      return this._signalDisableRipple ? this._parent.disableRipple() : !!this._parent?.disableRipple;\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n      return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onSelectionChange = new EventEmitter();\n    /** Element containing the option's text. */\n    _text;\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    _stateChanges = new Subject();\n    constructor() {\n      const styleLoader = inject(_CdkPrivateStyleLoader);\n      styleLoader.load(_StructuralStylesLoader);\n      styleLoader.load(_VisuallyHiddenLoader);\n      this._signalDisableRipple = !!this._parent && isSignal(this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n      if (!this._selected) {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n      if (this._selected) {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      const element = this._getHostElement();\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction();\n        // Prevent the page from scrolling down and form submits.\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        const viewValue = this.viewValue;\n        if (viewValue !== this._mostRecentViewValue) {\n          if (this._mostRecentViewValue) {\n            this._stateChanges.next();\n          }\n          this._mostRecentViewValue = viewValue;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static ɵfac = function MatOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatOption)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatOption,\n      selectors: [[\"mat-option\"]],\n      viewQuery: function MatOption_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c2, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n      hostVars: 11,\n      hostBindings: function MatOption_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n            return ctx._selectViaInteraction();\n          })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n          i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        id: \"id\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        onSelectionChange: \"onSelectionChange\"\n      },\n      exportAs: [\"matOption\"],\n      ngContentSelectors: _c4,\n      decls: 8,\n      vars: 5,\n      consts: [[\"text\", \"\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n      template: function MatOption_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 1);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementStart(2, \"span\", 2, 0);\n          i0.ɵɵprojection(4, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n          i0.ɵɵelement(7, \"div\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.multiple ? 0 : -1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵconditional(!ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.group && ctx.group._inert ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatPseudoCheckbox, MatRipple],\n      styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nexport { MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatPseudoCheckbox } from './pseudo-checkbox-Dy35mUmj.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nlet MatPseudoCheckboxModule = /*#__PURE__*/(() => {\n  class MatPseudoCheckboxModule {\n    static ɵfac = function MatPseudoCheckboxModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPseudoCheckboxModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatPseudoCheckboxModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule]\n    });\n  }\n  return MatPseudoCheckboxModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MatPseudoCheckboxModule };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from './index-eRSoE0yr.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport { MatOption, MatOptgroup } from './option-B6mQ8PwE.mjs';\nimport { MatPseudoCheckboxModule } from './pseudo-checkbox-module-CUFRN-kl.mjs';\nlet MatOptionModule = /*#__PURE__*/(() => {\n  class MatOptionModule {\n    static ɵfac = function MatOptionModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatOptionModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatOptionModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n    });\n  }\n  return MatOptionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MatOptionModule };\n","import { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, forwardRef, input, model } from '@angular/core';\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRippleModule } from '@angular/material/core';\n\n@Component({\n  standalone: true,\n  selector: 'vms-toggle-btn',\n  imports: [\n    FormsModule,\n    NgClass,\n    MatRippleModule,\n  ],\n  templateUrl: './toggle-btn.component.html',\n  styleUrl: './toggle-btn.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => ToggleBtnComponent),\n    },\n  ],\n})\nexport class ToggleBtnComponent implements ControlValueAccessor {\n\n  value1 = input.required<string>();\n  value2 = input.required<string>();\n\n  value = model<string>();\n\n  private onChange: (value: string) => void = () => {};\n  private onTouched: () => void = () => {};\n\n  onToggle(): void {\n    this.value.set(this.value() === this.value1() ? this.value2() : this.value1());\n    this.onChange(this.value());\n  }\n\n  writeValue(value: string): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(onChange: (value: string) => void): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void): void {\n    this.onTouched = onTouched;\n  }\n}\n","  <div matRipple class=\"wrapper\">\n    <input type=\"button\" class=\"toggler-container\" [(ngModel)]=\"value\" (click)=\"onToggle()\"/>\n\n    <button\n      type=\"button\"\n      [ngClass]=\"['toggler', (value() === value1()) ? 'left' : 'right']\"\n      (click)=\"$event.stopPropagation()\">\n    </button>\n\n    <span [ngClass]=\"{'selected-value': value() === value1(), 'value': true}\">{{value1()}}</span>\n\n    <span [ngClass]=\"{'selected-value': value() === value2(), 'value': true}\">{{value2()}}</span>\n  </div>\n","import { ChangeDetectionStrategy, Component, HostBinding, input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-demo-settings-panel',\n  imports: [],\n  templateUrl: './demo-settings-panel.component.html',\n  styleUrl: './demo-settings-panel.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DemoSettingsPanelComponent {\n  title = input<string>();\n\n  @HostBinding('attr.title') attrTitle = null;\n}\n","<div class=\"wrapper\">\n  <h2 class=\"title\">{{title()}}</h2>\n  <ng-content></ng-content>\n</div>\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, effect, inject, model } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { teamNamesDescription } from '../../../../common/resources/enums/game.enum';\nimport { IDemoGame } from '../../../../common/resources/interfaces/game.interface';\nimport { IDemoTank } from '../../../../common/resources/interfaces/tank.interface';\nimport { StateService } from '../../../../common/resources/services/state/state.service';\nimport { ToggleBtnComponent } from '../../../../shared/components/toggle-btn/toggle-btn.component';\nimport { DemoSettingsPanelComponent } from '../demo-settings-panel/demo-settings-panel.component';\n\nimport { ETeamNames } from '@victor_monakhov/tanks';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-position-settings',\n  imports: [\n    DemoSettingsPanelComponent,\n    MatButtonToggleModule,\n    MatRadioModule,\n    ToggleBtnComponent,\n    FormsModule,\n    NgClass,\n    NgOptimizedImage,\n  ],\n  templateUrl: './position-settings.component.html',\n  styleUrl: './position-settings.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PositionSettingsComponent {\n\n  private readonly stateService = inject(StateService);\n\n  private game!: IDemoGame;\n  private tank!: IDemoTank;\n\n  readonly eDemoTeams = ETeamNames;\n  readonly teamNamesDescription: { [key in ETeamNames]: string } = teamNamesDescription;\n\n  readonly positions = [1, 2, 3, 4];\n\n  team = model<string>(this.teamNamesDescription[ETeamNames.Red]);\n  position = model<number>(1);\n\n  constructor() {\n    effect(() => {\n      this.game = this.stateService.demoGame();\n      if (this.game) {\n        this.tank = this.game.tanks.find(item => item.chosenAsPlayer);\n        if (this.tank) {\n          this.team.set(this.teamNamesDescription[this.tank.position.team]);\n          this.position.set(this.tank.position.position + 1);\n        }\n      }\n    });\n  }\n\n  onChanges(): void {\n    this.tank.position.team = Object\n      .entries(this.teamNamesDescription)\n      .find(([key, value]: [ETeamNames, string]) => this.team() === value)[0] as ETeamNames;\n    this.tank.position.position = this.position() - 1;\n    this.stateService.updateDemoGameState(this.game);\n  }\n}\n","<tnm-demo-settings-panel class=\"wrapper\" title=\"Select your position\">\n\n  <vms-toggle-btn\n    class=\"toggle-team\"\n    [value1]=\"teamNamesDescription[eDemoTeams.Red]\"\n    [value2]=\"teamNamesDescription[eDemoTeams.Blue]\"\n    [(ngModel)]=\"team\"\n    (ngModelChange)=\"onChanges()\">\n  </vms-toggle-btn>\n\n  <mat-radio-group\n    class=\"positions-wrapper\"\n    [(ngModel)]=\"position\"\n    (ngModelChange)=\"onChanges()\">\n    @for (pos of positions; track $index) {\n      <mat-radio-button class=\"mat-radio-demo-pos\" [value]=\"pos\">{{ pos }}</mat-radio-button>\n    }\n  </mat-radio-group>\n\n  <div class=\"position-view-wrapper\">\n    @if (team() === teamNamesDescription[eDemoTeams.Red]) {\n      <img fill class=\"map\" ngSrc=\"images/red-map-pos.png\" alt=\"red-map\">\n    }\n    @if (team() === teamNamesDescription[eDemoTeams.Blue]) {\n      <img fill class=\"map\" ngSrc=\"images/blue-map-pos.png\" alt=\"blue-map\">\n    }\n    <div [ngClass]=\"['position-view', (team() === teamNamesDescription[eDemoTeams.Red]) ?\n                    'red-pos' + position() :\n                    'blue-pos' + position()]\">\n      @if (team() === teamNamesDescription[eDemoTeams.Red]) {\n        <div  class=\"pos-view-content\">\n          <img fill class=\"flag-img\" ngSrc=\"images/pos-red.png\" alt=\"red-flag\">\n          <b class=\"flag-info\">{{position()}}</b>\n        </div>\n      }\n      @if (team() === teamNamesDescription[eDemoTeams.Blue]) {\n        <div class=\"pos-view-content\">\n          <img fill class=\"flag-img\" ngSrc=\"assets/images/pos-blue.png\" alt=\"blue-flag\">\n          <b class=\"flag-info\">{{position()}}</b>\n        </div>\n      }\n    </div>\n  </div>\n\n</tnm-demo-settings-panel>\n","import { FocusKeyManager, _IdGenerator, CdkMonitorFocus, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { Platform, _bindEventWithOptions } from '@angular/cdk/platform';\nimport { ViewportRuler, CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, booleanAttribute, Input, ViewChild, ContentChild, ViewEncapsulation, ChangeDetectionStrategy, Component, ElementRef, ChangeDetectorRef, NgZone, Injector, Renderer2, ANIMATION_MODULE_TYPE, EventEmitter, afterNextRender, numberAttribute, Output, ContentChildren, QueryList, ViewChildren, HostAttributeToken, forwardRef, NgModule } from '@angular/core';\nimport { Subject, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport { debounceTime, takeUntil, startWith, switchMap, skip, filter } from 'rxjs/operators';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _StructuralStylesLoader } from './structural-styles-B2ekkpE5.mjs';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BPguEKwi.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = [\"content\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c7 = [\"tabBodyWrapper\"];\nconst _c8 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const $index_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, $index_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const $index_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, $index_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵtemplate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const $index_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === $index_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(tab_r4, $index_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex($index_r5))(\"aria-posinset\", $index_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId($index_r5))(\"aria-selected\", ctx_r5.selectedIndex === $index_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    })(\"_beforeCentering\", function MatTabGroup_For_8_Template_mat_tab_body__beforeCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._bodyCentered($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const $index_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId($index_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === $index_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(tab_r10, $index_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== $index_r11);\n  }\n}\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nconst _c10 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nlet MatTabContent = /*#__PURE__*/(() => {\n  class MatTabContent {\n    template = inject(TemplateRef);\n    constructor() {}\n    static ɵfac = function MatTabContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabContent)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabContent,\n      selectors: [[\"\", \"matTabContent\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }])]\n    });\n  }\n  return MatTabContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = /*#__PURE__*/new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nlet MatTabLabel = /*#__PURE__*/(() => {\n  class MatTabLabel extends CdkPortal {\n    _closestTab = inject(MAT_TAB, {\n      optional: true\n    });\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabLabel_BaseFactory;\n      return function MatTabLabel_Factory(__ngFactoryType__) {\n        return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabel)))(__ngFactoryType__ || MatTabLabel);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabel,\n      selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /*#__PURE__*/(() => {\n  class MatTab {\n    _viewContainerRef = inject(ViewContainerRef);\n    _closestTabGroup = inject(MAT_TAB_GROUP, {\n      optional: true\n    });\n    /** whether the tab is disabled. */\n    disabled = false;\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n      return this._templateLabel;\n    }\n    set templateLabel(value) {\n      this._setTemplateLabelInput(value);\n    }\n    _templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    _explicitContent = undefined;\n    /** Template inside the MatTab view that contains an `<ng-content>`. */\n    _implicitContent;\n    /** Plain text label for the tab, used when there is no template label. */\n    textLabel = '';\n    /** Aria label for the tab. */\n    ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    ariaLabelledby;\n    /** Classes to be passed to the tab label inside the mat-tab-header container. */\n    labelClass;\n    /** Classes to be passed to the tab mat-tab-body container. */\n    bodyClass;\n    /**\n     * Custom ID for the tab, overriding the auto-generated one by Material.\n     * Note that when using this input, it's your responsibility to ensure that the ID is unique.\n     */\n    id = null;\n    /** Portal that will be the hosted content of the tab */\n    _contentPortal = null;\n    /** @docs-private */\n    get content() {\n      return this._contentPortal;\n    }\n    /** Emits whenever the internal state of the tab changes. */\n    _stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position = null;\n    // TODO(crisbeto): we no longer use this, but some internal apps appear to rely on it.\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    }\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n      // Only update the label if the query managed to find one. This works around an issue where a\n      // user may have manually set `templateLabel` during creation mode, which would then get\n      // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n      // tab matches the current one so that we don't pick up labels from nested tabs.\n      if (value && value._closestTab === this) {\n        this._templateLabel = value;\n      }\n    }\n    static ɵfac = function MatTab_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTab)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTab,\n      selectors: [[\"mat-tab\"]],\n      contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n        }\n      },\n      viewQuery: function MatTab_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n        }\n      },\n      hostAttrs: [\"hidden\", \"\"],\n      hostVars: 1,\n      hostBindings: function MatTab_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", null);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        textLabel: [0, \"label\", \"textLabel\"],\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        labelClass: \"labelClass\",\n        bodyClass: \"bodyClass\",\n        id: \"id\"\n      },\n      exportAs: [\"matTab\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTab_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return MatTab;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  _items;\n  /** Item to which the ink bar is aligned currently. */\n  _currentItem;\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n    this._currentItem = undefined;\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nlet InkBarItem = /*#__PURE__*/(() => {\n  class InkBarItem {\n    _elementRef = inject(ElementRef);\n    _inkBarElement;\n    _inkBarContentElement;\n    _fitToContent = false;\n    /** Whether the ink bar should fit to the entire tab or just its content. */\n    get fitInkBarToContent() {\n      return this._fitToContent;\n    }\n    set fitInkBarToContent(newValue) {\n      if (this._fitToContent !== newValue) {\n        this._fitToContent = newValue;\n        if (this._inkBarElement) {\n          this._appendInkBarElement();\n        }\n      }\n    }\n    /** Aligns the ink bar to the current item. */\n    activateInkBar(previousIndicatorClientRect) {\n      const element = this._elementRef.nativeElement;\n      // Early exit if no indicator is present to handle cases where an indicator\n      // may be activated without a prior indicator state\n      if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n        element.classList.add(ACTIVE_CLASS);\n        return;\n      }\n      // This animation uses the FLIP approach. You can read more about it at the link below:\n      // https://aerotwist.com/blog/flip-your-animations/\n      // Calculate the dimensions based on the dimensions of the previous indicator\n      const currentClientRect = element.getBoundingClientRect();\n      const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n      const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n      element.classList.add(NO_TRANSITION_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n      // Force repaint before updating classes and transform to ensure the transform properly takes effect\n      element.getBoundingClientRect();\n      element.classList.remove(NO_TRANSITION_CLASS);\n      element.classList.add(ACTIVE_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', '');\n    }\n    /** Removes the ink bar from the current item. */\n    deactivateInkBar() {\n      this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n    }\n    /** Initializes the foundation. */\n    ngOnInit() {\n      this._createInkBarElement();\n    }\n    /** Destroys the foundation. */\n    ngOnDestroy() {\n      this._inkBarElement?.remove();\n      this._inkBarElement = this._inkBarContentElement = null;\n    }\n    /** Creates and appends the ink bar element. */\n    _createInkBarElement() {\n      const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n      const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n      const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n      inkBarElement.className = 'mdc-tab-indicator';\n      inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n      inkBarElement.appendChild(this._inkBarContentElement);\n      this._appendInkBarElement();\n    }\n    /**\n     * Appends the ink bar to the tab host element or content, depending on whether\n     * the ink bar should fit to content.\n     */\n    _appendInkBarElement() {\n      if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Ink bar element has not been created and cannot be appended');\n      }\n      const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n      if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Missing element to host the ink bar');\n      }\n      parentElement.appendChild(this._inkBarElement);\n    }\n    static ɵfac = function InkBarItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InkBarItem)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: InkBarItem,\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n      }\n    });\n  }\n  return InkBarItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nlet MatTabLabelWrapper = /*#__PURE__*/(() => {\n  class MatTabLabelWrapper extends InkBarItem {\n    elementRef = inject(ElementRef);\n    /** Whether the tab is disabled. */\n    disabled = false;\n    /** Sets focus on the wrapper element */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabLabelWrapper_BaseFactory;\n      return function MatTabLabelWrapper_Factory(__ngFactoryType__) {\n        return (ɵMatTabLabelWrapper_BaseFactory || (ɵMatTabLabelWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabLabelWrapper)))(__ngFactoryType__ || MatTabLabelWrapper);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabelWrapper,\n      selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n      hostVars: 3,\n      hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabLabelWrapper;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nlet MatPaginatedTabHeader = /*#__PURE__*/(() => {\n  class MatPaginatedTabHeader {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _viewportRuler = inject(ViewportRuler);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _sharedResizeObserver = inject(SharedResizeObserver);\n    _injector = inject(Injector);\n    _renderer = inject(Renderer2);\n    _animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    _eventCleanups;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    _scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    _selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    _showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    _disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    _disableScrollBefore = true;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    _tabLabelCount;\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    _scrollDistanceChanged;\n    /** Used to manage focus between the tabs. */\n    _keyManager;\n    /** Cached text content of the header. */\n    _currentTextContent;\n    /** Stream that will stop the automated scrolling. */\n    _stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    disablePagination = false;\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(v) {\n      const value = isNaN(v) ? 0 : v;\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n    _selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    indexFocused = new EventEmitter();\n    constructor() {\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      this._eventCleanups = this._ngZone.runOutsideAngular(() => [this._renderer.listen(this._elementRef.nativeElement, 'mouseleave', () => this._stopInterval())]);\n    }\n    ngAfterViewInit() {\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      this._eventCleanups.push(_bindEventWithOptions(this._renderer, this._previousPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('before'), passiveEventListenerOptions), _bindEventWithOptions(this._renderer, this._nextPaginator.nativeElement, 'touchstart', () => this._handlePaginatorPress('after'), passiveEventListenerOptions));\n    }\n    ngAfterContentInit() {\n      const dirChange = this._dir ? this._dir.change : of('ltr');\n      // We need to debounce resize events because the alignment logic is expensive.\n      // If someone animates the width of tabs, we don't want to realign on every animation frame.\n      // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n      // re-align.\n      const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n      // Note: We do not actually need to watch these events for proper functioning of the tabs,\n      // the resize events above should capture any viewport resize that we care about. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n      const realign = () => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n      };\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n      // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n      .skipPredicate(() => false);\n      this._keyManager.updateActiveItem(this._selectedIndex);\n      // Note: We do not need to realign after the first render for proper functioning of the tabs\n      // the resize events above should fire when we first start observing the element. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      afterNextRender(realign, {\n        injector: this._injector\n      });\n      // On dir change or resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n      merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        // We need to defer this to give the browser some time to recalculate\n        // the element dimensions. The call has to be wrapped in `NgZone.run`,\n        // because the viewport change handler runs outside of Angular.\n        this._ngZone.run(() => {\n          Promise.resolve().then(() => {\n            // Clamp the scroll distance, because it can change with the number of tabs.\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n            realign();\n          });\n        });\n        this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n      });\n      // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n      this._keyManager.change.subscribe(newFocusIndex => {\n        this.indexFocused.emit(newFocusIndex);\n        this._setTabFocus(newFocusIndex);\n      });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n      if (typeof ResizeObserver !== 'function') {\n        return EMPTY;\n      }\n      return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n        const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n        tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }))),\n      // Skip the first emit since the resize observer emits when an item\n      // is observed for new items when the tab is already inserted\n      skip(1),\n      // Skip emissions where all the elements are invisible since we don't want\n      // the header to try and re-render with invalid measurements. See #25574.\n      filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n    }\n    ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n        this._checkScrollingControls();\n        this._alignInkBarToSelectedTab();\n        this._selectedIndexChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n        this._scrollDistanceChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._eventCleanups.forEach(cleanup => cleanup());\n      this._keyManager?.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n      switch (event.keyCode) {\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            const item = this._items.get(this.focusIndex);\n            if (item && !item.disabled) {\n              this.selectFocusedIndex.emit(this.focusIndex);\n              this._itemSelected(event);\n            }\n          }\n          break;\n        default:\n          this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n      const textContent = this._elementRef.nativeElement.textContent;\n      // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || '';\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this._ngZone.run(() => {\n          this.updatePagination();\n          this._alignInkBarToSelectedTab();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      this._checkPaginationEnabled();\n      this._checkScrollingControls();\n      this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n      this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n      return this._items ? !!this._items.toArray()[index] : true;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus();\n        // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n        const containerEl = this._tabListContainer.nativeElement;\n        const dir = this._getLayoutDirection();\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n      const scrollDistance = this.scrollDistance;\n      const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n      // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n      this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n      // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n      if (this._platform.TRIDENT || this._platform.EDGE) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n      return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n      this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      // Move the scroll distance one-third the length of the tab list's viewport.\n      const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n      this._stopInterval();\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n      const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n      if (!selectedLabel) {\n        return;\n      }\n      // The view length is the visible width of the tab labels.\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      const {\n        offsetLeft,\n        offsetWidth\n      } = selectedLabel.elementRef.nativeElement;\n      let labelBeforePos, labelAfterPos;\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n      const beforeVisiblePos = this.scrollDistance;\n      const afterVisiblePos = this.scrollDistance + viewLength;\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n        const containerWidth = this._elementRef.nativeElement.offsetWidth;\n        // Usually checking that the scroll width is greater than the container width should be\n        // enough, but on Safari at specific widths the browser ends up rounding up when there's\n        // no pagination and rounding down once the pagination is added. This can throw the component\n        // into an infinite loop where the pagination shows up and disappears constantly. We work\n        // around it by adding a threshold to the calculation. From manual testing the threshold\n        // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n        // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n        // padding. See b/316395154 for more information.\n        const isEnabled = scrollWidth - containerWidth >= 5;\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n          this._showPaginationControls = isEnabled;\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n      const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n      const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      }\n      // Avoid overlapping timers.\n      this._stopInterval();\n      // Start a timer after the delay and keep firing based on the interval.\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n        const {\n          maxScrollDistance,\n          distance\n        } = this._scrollHeader(direction);\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n      const maxScrollDistance = this._getMaxScrollDistance();\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n      // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n      this._scrollDistanceChanged = true;\n      this._checkScrollingControls();\n      return {\n        maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n    static ɵfac = function MatPaginatedTabHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatPaginatedTabHeader)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPaginatedTabHeader,\n      inputs: {\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n      },\n      outputs: {\n        selectFocusedIndex: \"selectFocusedIndex\",\n        indexFocused: \"indexFocused\"\n      }\n    });\n  }\n  return MatPaginatedTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nlet MatTabHeader = /*#__PURE__*/(() => {\n  class MatTabHeader extends MatPaginatedTabHeader {\n    _items;\n    _tabListContainer;\n    _tabList;\n    _tabListInner;\n    _nextPaginator;\n    _previousPaginator;\n    _inkBar;\n    /** Aria label of the header. */\n    ariaLabel;\n    /** Sets the `aria-labelledby` of the header. */\n    ariaLabelledby;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      super.ngAfterContentInit();\n    }\n    _itemSelected(event) {\n      event.preventDefault();\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTabHeader_BaseFactory;\n      return function MatTabHeader_Factory(__ngFactoryType__) {\n        return (ɵMatTabHeader_BaseFactory || (ɵMatTabHeader_BaseFactory = i0.ɵɵgetInheritedFactory(MatTabHeader)))(__ngFactoryType__ || MatTabHeader);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabHeader,\n      selectors: [[\"mat-tab-header\"]],\n      contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabHeader_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-header\"],\n      hostVars: 4,\n      hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n        }\n      },\n      inputs: {\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 10,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabHeader_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby || null);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height, 1px);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height, 1px);border-top-color:var(--mat-tab-header-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-labels,.mat-mdc-tab-labels.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height, 48px)}.mat-mdc-tab::before{margin:5px}@media(forced-colors: active){.mat-mdc-tab[aria-disabled=true]{color:GrayText}}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nlet MatTabBodyPortal = /*#__PURE__*/(() => {\n  class MatTabBodyPortal extends CdkPortalOutlet {\n    _host = inject(MatTabBody);\n    /** Subscription to events for when the tab body begins centering. */\n    _centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    _leavingSub = Subscription.EMPTY;\n    constructor() {\n      super();\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n      super.ngOnInit();\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition())).subscribe(isCentering => {\n        if (this._host._content && isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n        if (!this._host.preserveContent) {\n          this.detach();\n        }\n      });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._centeringSub.unsubscribe();\n      this._leavingSub.unsubscribe();\n    }\n    static ɵfac = function MatTabBodyPortal_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBodyPortal)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabBodyPortal,\n      selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatTabBodyPortal;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nlet MatTabBody = /*#__PURE__*/(() => {\n  class MatTabBody {\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _ngZone = inject(NgZone);\n    _injector = inject(Injector);\n    _renderer = inject(Renderer2);\n    _animationsModule = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    _eventCleanups;\n    _initialized;\n    _fallbackTimer;\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    _positionIndex;\n    /** Subscription to the directionality change observable. */\n    _dirChangeSubscription = Subscription.EMPTY;\n    /** Current position of the body within the tab group. */\n    _position;\n    /** Previous position of the body. */\n    _previousPosition;\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    _onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    _beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    _afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    _onCentered = new EventEmitter(true);\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    _portalHost;\n    /** Element in which the content is rendered. */\n    _contentElement;\n    /** The tab body content to display. */\n    _content;\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    animationDuration = '500ms';\n    /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n    preserveContent = false;\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n      this._positionIndex = position;\n      this._computePositionAnimationState();\n    }\n    constructor() {\n      if (this._dir) {\n        const changeDetectorRef = inject(ChangeDetectorRef);\n        this._dirChangeSubscription = this._dir.change.subscribe(dir => {\n          this._computePositionAnimationState(dir);\n          changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    ngOnInit() {\n      this._bindTransitionEvents();\n      if (this._position === 'center') {\n        this._setActiveClass(true);\n        // Allows for the dynamic height to animate properly on the initial run.\n        afterNextRender(() => this._onCentering.emit(this._elementRef.nativeElement.clientHeight), {\n          injector: this._injector\n        });\n      }\n      this._initialized = true;\n    }\n    ngOnDestroy() {\n      clearTimeout(this._fallbackTimer);\n      this._eventCleanups?.forEach(cleanup => cleanup());\n      this._dirChangeSubscription.unsubscribe();\n    }\n    /** Sets up the transition events. */\n    _bindTransitionEvents() {\n      this._ngZone.runOutsideAngular(() => {\n        const element = this._elementRef.nativeElement;\n        const transitionDone = event => {\n          if (event.target === this._contentElement?.nativeElement) {\n            this._elementRef.nativeElement.classList.remove('mat-tab-body-animating');\n            // Only fire the actual callback when a transition is fully finished,\n            // otherwise the content can jump around when the next transition starts.\n            if (event.type === 'transitionend') {\n              this._transitionDone();\n            }\n          }\n        };\n        this._eventCleanups = [this._renderer.listen(element, 'transitionstart', event => {\n          if (event.target === this._contentElement?.nativeElement) {\n            this._elementRef.nativeElement.classList.add('mat-tab-body-animating');\n            this._transitionStarted();\n          }\n        }), this._renderer.listen(element, 'transitionend', transitionDone), this._renderer.listen(element, 'transitioncancel', transitionDone)];\n      });\n    }\n    /** Called when a transition has started. */\n    _transitionStarted() {\n      clearTimeout(this._fallbackTimer);\n      const isCentering = this._position === 'center';\n      this._beforeCentering.emit(isCentering);\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /** Called when a transition is done. */\n    _transitionDone() {\n      if (this._position === 'center') {\n        this._onCentered.emit();\n      } else if (this._previousPosition === 'center') {\n        this._afterLeavingCenter.emit();\n      }\n    }\n    /** Sets the active styling on the tab body based on its current position. */\n    _setActiveClass(isActive) {\n      this._elementRef.nativeElement.classList.toggle('mat-mdc-tab-body-active', isActive);\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition() {\n      return this._positionIndex === 0;\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n      this._previousPosition = this._position;\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n      if (this._animationsDisabled()) {\n        this._simulateTransitionEvents();\n      } else if (this._initialized && (this._position === 'center' || this._previousPosition === 'center')) {\n        // The transition events are load-bearing and in some cases they might not fire (e.g.\n        // tests setting `* {transition: none}` to disable animations). This timeout will simulate\n        // them if a transition doesn't start within a certain amount of time.\n        clearTimeout(this._fallbackTimer);\n        this._fallbackTimer = this._ngZone.runOutsideAngular(() => setTimeout(() => this._simulateTransitionEvents(), 100));\n      }\n    }\n    /** Simulates the body's transition events in an environment where they might not fire. */\n    _simulateTransitionEvents() {\n      this._transitionStarted();\n      afterNextRender(() => this._transitionDone(), {\n        injector: this._injector\n      });\n    }\n    /** Whether animations are disabled for the tab group. */\n    _animationsDisabled() {\n      return this._animationsModule === 'NoopAnimations' || this.animationDuration === '0ms' || this.animationDuration === '0s';\n    }\n    static ɵfac = function MatTabBody_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabBody)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabBody,\n      selectors: [[\"mat-tab-body\"]],\n      viewQuery: function MatTabBody_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatTabBodyPortal, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-body\"],\n      hostVars: 1,\n      hostBindings: function MatTabBody_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"inert\", ctx._position === \"center\" ? null : \"\");\n        }\n      },\n      inputs: {\n        _content: [0, \"content\", \"_content\"],\n        animationDuration: \"animationDuration\",\n        preserveContent: \"preserveContent\",\n        position: \"position\"\n      },\n      outputs: {\n        _onCentering: \"_onCentering\",\n        _beforeCentering: \"_beforeCentering\",\n        _onCentered: \"_onCentered\"\n      },\n      decls: 3,\n      vars: 6,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n      template: function MatTabBody_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-tab-body-content-left\", ctx._position === \"left\")(\"mat-tab-body-content-right\", ctx._position === \"right\")(\"mat-tab-body-content-can-animate\", ctx._position === \"center\" || ctx._previousPosition === \"center\");\n        }\n      },\n      dependencies: [MatTabBodyPortal, CdkScrollable],\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto;transform:none;visibility:hidden}.mat-tab-body-animating>.mat-mdc-tab-body-content,.mat-mdc-tab-body-active>.mat-mdc-tab-body-content{visibility:visible}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-tab-body-content-can-animate{transition:transform var(--mat-tab-animation-duration) 1ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable .mat-tab-body-content-can-animate{transition:none}.mat-tab-body-content-left{transform:translate3d(-100%, 0, 0)}.mat-tab-body-content-right{transform:translate3d(100%, 0, 0)}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nlet MatTabGroup = /*#__PURE__*/(() => {\n  class MatTabGroup {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _tabsSubscription = Subscription.EMPTY;\n    _tabLabelSubscription = Subscription.EMPTY;\n    _tabBodySubscription = Subscription.EMPTY;\n    _animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     */\n    _allTabs;\n    _tabBodies;\n    _tabBodyWrapper;\n    _tabHeader;\n    /** All of the tabs that belong to the group. */\n    _tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    _indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n    _lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    _tabBodyWrapperHeight = 0;\n    /**\n     * Theme color of the tab group. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    _fitInkBarToContent = false;\n    /** Whether tabs should be stretched to fill the header. */\n    stretchTabs = true;\n    /** Alignment for tabs label. */\n    alignTabs = null;\n    /** Whether the tab group should grow to the size of the active tab. */\n    dynamicHeight = false;\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n      this._indexToSelect = isNaN(value) ? null : value;\n    }\n    _selectedIndex = null;\n    /** Position of the tab header. */\n    headerPosition = 'above';\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    _animationDuration;\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n      return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n      this._contentTabIndex = isNaN(value) ? null : value;\n    }\n    _contentTabIndex;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    disablePagination = false;\n    /** Whether ripples in the tab group are disabled. */\n    disableRipple = false;\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    preserveContent = false;\n    /**\n     * Theme color of the background of the tab group. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     *\n     * @deprecated The background color should be customized through Sass theming APIs.\n     * @breaking-change 20.0.0 Remove this input\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    _backgroundColor;\n    /** Aria label of the inner `tablist` of the group. */\n    ariaLabel;\n    /** Sets the `aria-labelledby` of the inner `tablist` of the group. */\n    ariaLabelledby;\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    selectedTabChange = new EventEmitter(true);\n    _groupId;\n    /** Whether the tab group is rendered on the server. */\n    _isServer = !inject(Platform).isBrowser;\n    constructor() {\n      const defaultConfig = inject(MAT_TABS_CONFIG, {\n        optional: true\n      });\n      this._groupId = inject(_IdGenerator).getId('mat-tab-group-');\n      this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      if (defaultConfig?.contentTabIndex != null) {\n        this.contentTabIndex = defaultConfig.contentTabIndex;\n      }\n      this.preserveContent = !!defaultConfig?.preserveContent;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n      this.alignTabs = defaultConfig && defaultConfig.alignTabs != null ? defaultConfig.alignTabs : null;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n      if (this._selectedIndex != indexToSelect) {\n        const isFirstRun = this._selectedIndex == null;\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          // Preserve the height so page doesn't scroll up during tab change.\n          // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n          const wrapper = this._tabBodyWrapper.nativeElement;\n          wrapper.style.minHeight = wrapper.clientHeight + 'px';\n        }\n        // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n        Promise.resolve().then(() => {\n          this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n          if (!isFirstRun) {\n            this.selectedIndexChange.emit(indexToSelect);\n            // Clear the min-height, this was needed during tab change to avoid\n            // unnecessary scrolling.\n            this._tabBodyWrapper.nativeElement.style.minHeight = '';\n          }\n        });\n      }\n      // Setup the position for each tab and optionally setup an origin on the next selected tab.\n      this._tabs.forEach((tab, index) => {\n        tab.position = index - indexToSelect;\n        // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n        if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - this._selectedIndex;\n        }\n      });\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n        this._lastFocusedTabIndex = null;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngAfterContentInit() {\n      this._subscribeToAllTabChanges();\n      this._subscribeToTabLabels();\n      // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n      this._tabsSubscription = this._tabs.changes.subscribe(() => {\n        const indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n        if (indexToSelect === this._selectedIndex) {\n          const tabs = this._tabs.toArray();\n          let selectedTab;\n          for (let i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              this._indexToSelect = this._selectedIndex = i;\n              this._lastFocusedTabIndex = null;\n              selectedTab = tabs[i];\n              break;\n            }\n          }\n          // If we haven't found an active tab and a tab exists at the selected index, it means\n          // that the active tab was swapped out. Since this won't be picked up by the rendering\n          // loop in `ngAfterContentChecked`, we need to sync it up manually.\n          if (!selectedTab && tabs[indexToSelect]) {\n            Promise.resolve().then(() => {\n              tabs[indexToSelect].isActive = true;\n              this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            });\n          }\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    ngAfterViewInit() {\n      this._tabBodySubscription = this._tabBodies.changes.subscribe(() => this._bodyCentered(true));\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n        this._tabs.reset(tabs.filter(tab => {\n          return tab._closestTabGroup === this || !tab._closestTabGroup;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._tabs.destroy();\n      this._tabsSubscription.unsubscribe();\n      this._tabLabelSubscription.unsubscribe();\n      this._tabBodySubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      if (this._tabHeader) {\n        this._tabHeader.updatePagination();\n      }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n      const header = this._tabHeader;\n      if (header) {\n        header.focusIndex = index;\n      }\n    }\n    _focusChanged(index) {\n      this._lastFocusedTabIndex = index;\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n      const event = new MatTabChangeEvent();\n      event.index = index;\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n      this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(tab, index) {\n      return tab.id || `${this._groupId}-label-${index}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(index) {\n      return `${this._groupId}-content-${index}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n      if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n        this._tabBodyWrapperHeight = tabHeight;\n        return;\n      }\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n      // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this._ngZone.run(() => this.animationDone.emit());\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n      tabHeader.focusIndex = index;\n      if (!tab.disabled) {\n        this.selectedIndex = index;\n      }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(index) {\n      const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n      return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n      // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n      // can cause the tab to be moved out from under the pointer, interrupting the\n      // click sequence (see #21898). We don't need to scroll the tab into view for\n      // such cases anyway, because it will be done when the tab becomes selected.\n      if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n        this._tabHeader.focusIndex = index;\n      }\n    }\n    /**\n     * Callback invoked when the centered state of a tab body changes.\n     * @param isCenter Whether the tab will be in the center.\n     */\n    _bodyCentered(isCenter) {\n      // Marks all the existing tabs as inactive and the center tab as active. Note that this can\n      // be achieved much easier by using a class binding on each body. The problem with\n      // doing so is that we can't control the timing of when the class is removed from the\n      // previously-active element and added to the newly-active one. If there's a tick between\n      // removing the class and adding the new one, the content will jump in a very jarring way.\n      // We go through the trouble of setting the classes ourselves to guarantee that they're\n      // swapped out at the same time.\n      if (isCenter) {\n        this._tabBodies?.forEach((body, i) => body._setActiveClass(i === this._selectedIndex));\n      }\n    }\n    static ɵfac = function MatTabGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabGroup)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabGroup,\n      selectors: [[\"mat-tab-group\"]],\n      contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n        }\n      },\n      viewQuery: function MatTabGroup_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(MatTabBody, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodies = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-group\"],\n      hostVars: 11,\n      hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"mat-align-tabs\", ctx.alignTabs);\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n        }\n      },\n      inputs: {\n        color: \"color\",\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        alignTabs: [0, \"mat-align-tabs\", \"alignTabs\"],\n        dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n        selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n        headerPosition: \"headerPosition\",\n        animationDuration: \"animationDuration\",\n        contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n        disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n        backgroundColor: \"backgroundColor\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"]\n      },\n      outputs: {\n        selectedIndexChange: \"selectedIndexChange\",\n        focusChange: \"focusChange\",\n        animationDone: \"animationDone\",\n        selectedTabChange: \"selectedTabChange\"\n      },\n      exportAs: [\"matTabGroup\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }])],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 8,\n      consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"aria-label\", \"aria-labelledby\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"class\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"_beforeCentering\", \"id\", \"content\", \"position\", \"animationDuration\", \"preserveContent\"]],\n      template: function MatTabGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n          i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._focusChanged($event));\n          })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.selectedIndex = $event);\n          });\n          i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n          i0.ɵɵelementStart(5, \"div\", 5, 1);\n          i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 10, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n        }\n      },\n      dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height, 48px);font-family:var(--mat-tab-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height, 2px);border-radius:var(--mdc-tab-indicator-active-indicator-shape, 0)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index;\n  /** Reference to the currently-selected tab. */\n  tab;\n}\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nlet MatTabNav = /*#__PURE__*/(() => {\n  class MatTabNav extends MatPaginatedTabHeader {\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent.value;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent.next(value);\n      this._changeDetectorRef.markForCheck();\n    }\n    _fitInkBarToContent = new BehaviorSubject(false);\n    /** Whether tabs should be stretched to fill the header. */\n    stretchTabs = true;\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    _animationDuration;\n    /** Query list of all tab links of the tab navigation. */\n    _items;\n    /**\n     * Theme color of the background of the tab nav. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    _backgroundColor;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    /**\n     * Theme color of the nav bar. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/tabs/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color = 'primary';\n    /**\n     * Associated tab panel controlled by the nav bar. If not provided, then the nav bar\n     * follows the ARIA link / navigation landmark pattern. If provided, it follows the\n     * ARIA tabs design pattern.\n     */\n    tabPanel;\n    _tabListContainer;\n    _tabList;\n    _tabListInner;\n    _nextPaginator;\n    _previousPaginator;\n    _inkBar;\n    constructor() {\n      const elementRef = inject(ElementRef);\n      const dir = inject(Directionality, {\n        optional: true\n      });\n      const ngZone = inject(NgZone);\n      const changeDetectorRef = inject(ChangeDetectorRef);\n      const viewportRuler = inject(ViewportRuler);\n      const platform = inject(Platform);\n      const animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      const defaultConfig = inject(MAT_TABS_CONFIG, {\n        optional: true\n      });\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    _itemSelected() {\n      // noop\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => this.updateActiveLink());\n      super.ngAfterContentInit();\n    }\n    ngAfterViewInit() {\n      if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n      }\n      super.ngAfterViewInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n      if (!this._items) {\n        return;\n      }\n      const items = this._items.toArray();\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n          this._changeDetectorRef.markForCheck();\n          if (this.tabPanel) {\n            this.tabPanel._activeTabId = items[i].id;\n          }\n          return;\n        }\n      }\n      this.selectedIndex = -1;\n    }\n    _getRole() {\n      return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n    static ɵfac = function MatTabNav_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNav)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNav,\n      selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n      contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabNav_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n      hostVars: 17,\n      hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._getRole());\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        animationDuration: \"animationDuration\",\n        backgroundColor: \"backgroundColor\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        color: \"color\",\n        tabPanel: \"tabPanel\"\n      },\n      exportAs: [\"matTabNavBar\", \"matTabNav\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      attrs: _c9,\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 6,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\"]],\n      template: function MatTabNav_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabNav_Template_div_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n          i0.ɵɵadvance(10);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;outline:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.cdk-drop-list .mat-mdc-tab-links,.mat-mdc-tab-links.cdk-drop-list{min-height:var(--mdc-secondary-navigation-tab-container-height, 48px)}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height, 1px);border-bottom-color:var(--mat-tab-header-divider-color, var(--mat-sys-surface-variant))}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTabNav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nlet MatTabLink = /*#__PURE__*/(() => {\n  class MatTabLink extends InkBarItem {\n    _tabNavBar = inject(MatTabNav);\n    elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _destroyed = new Subject();\n    /** Whether the tab link is active or not. */\n    _isActive = false;\n    /** Whether the link is active. */\n    get active() {\n      return this._isActive;\n    }\n    set active(value) {\n      if (value !== this._isActive) {\n        this._isActive = value;\n        this._tabNavBar.updateActiveLink();\n      }\n    }\n    /** Whether the tab link is disabled. */\n    disabled = false;\n    /** Whether ripples are disabled on the tab link. */\n    disableRipple = false;\n    tabIndex = 0;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * @docs-private\n     */\n    rippleConfig;\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Unique id for the tab. */\n    id = inject(_IdGenerator).getId('mat-tab-link-');\n    constructor() {\n      super();\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      const globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true\n      });\n      const tabIndex = inject(new HostAttributeToken('tabindex'), {\n        optional: true\n      });\n      const animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      this.rippleConfig = globalRippleOptions || {};\n      this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n      if (animationMode === 'NoopAnimations') {\n        this.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n      this._tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n        this.fitInkBarToContent = fitInkBarToContent;\n      });\n    }\n    /** Focuses the tab link. */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n      this._destroyed.next();\n      this._destroyed.complete();\n      super.ngOnDestroy();\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n      // Since we allow navigation through tabbing in the nav bar, we\n      // have to update the focused index whenever the link receives focus.\n      this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this.disabled) {\n          event.preventDefault();\n        } else if (this._tabNavBar.tabPanel) {\n          // Only prevent the default action on space since it can scroll the page.\n          // Don't prevent enter since it can break link navigation.\n          if (event.keyCode === SPACE) {\n            event.preventDefault();\n          }\n          this.elementRef.nativeElement.click();\n        }\n      }\n    }\n    _getAriaControls() {\n      return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n      if (this._tabNavBar.tabPanel) {\n        return this.active ? 'true' : 'false';\n      } else {\n        return this.elementRef.nativeElement.getAttribute('aria-selected');\n      }\n    }\n    _getAriaCurrent() {\n      return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n      return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n      if (this._tabNavBar.tabPanel) {\n        return this._isActive && !this.disabled ? 0 : -1;\n      } else {\n        return this.disabled ? -1 : this.tabIndex;\n      }\n    }\n    static ɵfac = function MatTabLink_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabLink)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabLink,\n      selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n      hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-focus-indicator\"],\n      hostVars: 11,\n      hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n        }\n      },\n      inputs: {\n        active: [2, \"active\", \"active\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        id: \"id\"\n      },\n      exportAs: [\"matTabLink\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      attrs: _c10,\n      ngContentSelectors: _c0,\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n      template: function MatTabLink_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n          i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height, 48px);font-family:var(--mat-tab-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-tab-header-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-tab-header-label-text-tracking, var(--mat-sys-title-small-tracking));line-height:var(--mat-tab-header-label-text-line-height, var(--mat-sys-title-small-line-height));font-weight:var(--mat-tab-header-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, var(--mat-sys-primary));border-top-width:var(--mdc-tab-indicator-active-indicator-height, 2px);border-radius:var(--mdc-tab-indicator-active-indicator-shape, 0)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color, var(--mat-sys-primary))}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color, var(--mat-sys-on-surface));display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color, var(--mat-sys-on-surface))}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatTabLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nlet MatTabNavPanel = /*#__PURE__*/(() => {\n  class MatTabNavPanel {\n    /** Unique id for the tab panel. */\n    id = inject(_IdGenerator).getId('mat-tab-nav-panel-');\n    /** Id of the active tab in the nav bar. */\n    _activeTabId;\n    static ɵfac = function MatTabNavPanel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabNavPanel)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNavPanel,\n      selectors: [[\"mat-tab-nav-panel\"]],\n      hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n      hostVars: 2,\n      hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      exportAs: [\"matTabNavPanel\"],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTabNavPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatTabNavPanel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTabsModule = /*#__PURE__*/(() => {\n  class MatTabsModule {\n    static ɵfac = function MatTabsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTabsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTabsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n  return MatTabsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0.\n */\nconst matTabsAnimations = {\n  // Represents:\n  // trigger('translateTab', [\n  //   // Transitions to `none` instead of 0, because some browsers might blur the content.\n  //   state(\n  //     'center, void, left-origin-center, right-origin-center',\n  //     style({transform: 'none', visibility: 'visible'}),\n  //   ),\n  //   // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  //   // in order to ensure that the element has a height before its state changes. This is\n  //   // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  //   // not have a static height and is not rendered. See related issue: #9465\n  //   state(\n  //     'left',\n  //     style({\n  //       transform: 'translate3d(-100%, 0, 0)',\n  //       minHeight: '1px',\n  //       // Normally this is redundant since we detach the content from the DOM, but if the user\n  //       // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   state(\n  //     'right',\n  //     style({\n  //       transform: 'translate3d(100%, 0, 0)',\n  //       minHeight: '1px',\n  //       visibility: 'hidden',\n  //     }),\n  //   ),\n  //   transition(\n  //     '* => left, * => right, left => center, right => center',\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ),\n  //   transition('void => left-origin-center', [\n  //     style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  //   transition('void => right-origin-center', [\n  //     style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'}),\n  //     animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n  //   ]),\n  // ])\n  /** Animation translates a tab along the X axis. */\n  translateTab: {\n    type: 7,\n    name: 'translateTab',\n    definitions: [{\n      type: 0,\n      name: 'center, void, left-origin-center, right-origin-center',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'left',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'right',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          minHeight: '1px',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => left, * => right, left => center, right => center',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => left-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(-100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }, {\n      type: 1,\n      expr: 'void => right-origin-center',\n      animation: [{\n        type: 6,\n        styles: {\n          transform: 'translate3d(100%, 0, 0)',\n          visibility: 'hidden'\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { tankDefaultTransactionItem } from '../../../../common/resources/constants/tank-settings';\nimport {\n  ETankItemType,\n  ETankTransactionHosts,\n  ETankTransactionTargets,\n  ETankTransactionTypes,\n} from '../../../../common/resources/enums/game.enum';\nimport {\n  ITankItem,\n  ITankTransactionItem,\n} from '../../../../common/resources/interfaces/tank.interface';\nimport { copy } from '../../../../shared/constants/utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TankItemTransactionService {\n\n  private transactionItem: ITankTransactionItem = copy(tankDefaultTransactionItem);\n\n  private inventoryTankTransaction$ = new Subject<Readonly<ITankTransactionItem>>();\n  private tankInventoryTransaction$ = new Subject<Readonly<ITankTransactionItem>>();\n  private inventoryTankTransactionResult$ = new Subject<boolean>();\n  private tankInventoryTransactionResult$ = new Subject<boolean>();\n\n  inventoryTankTransactionReady$ =\n    this.inventoryTankTransaction$ as Observable<Readonly<ITankTransactionItem>>;\n  tankInventoryTransactionReady$ =\n    this.tankInventoryTransaction$ as Observable<Readonly<ITankTransactionItem>>;\n  inventoryTankTransactionCompleted$ =\n    this.inventoryTankTransactionResult$ as Observable<boolean>;\n  tankInventoryTransactionCompleted$ =\n    this.tankInventoryTransactionResult$ as Observable<boolean>;\n\n  inventoryItemClicked$ = new Subject<void>();\n  tankItemClicked$ = new Subject<void>();\n\n  get transactionInProgress(): boolean {\n    return this.transactionItem.type !== ETankTransactionTypes.NoTransaction;\n  }\n\n  get transactionTankItemType(): ETankItemType | null {\n    return this.transactionItem?.newItem?.itemType ?? null;\n  }\n\n  get transactionNewItem(): ITankItem | null {\n    return this.transactionItem?.newItem ?? null;\n  }\n\n  get transactionHost(): ETankTransactionHosts | null {\n    return this.transactionItem?.host ?? null;\n  }\n\n  createTransaction(newItem: ITankItem, host: ETankTransactionHosts): void {\n    this.transactionItem.host = host;\n    this.transactionItem.newItem = copy(newItem);\n    this.transactionItem.remainedItem = { ...copy(newItem), quantity: 0 };\n  }\n\n  startTransaction(\n    oldItem: ITankItem,\n    target: ETankTransactionTargets,\n  ): Readonly<ITankTransactionItem> | null {\n    if (this.transactionItem.host === ETankTransactionHosts.NoHost) {\n      this.destroyTransaction();\n      return null;\n    }\n    this.transactionItem.target = target;\n    this.transactionItem.type = this.getTransactionType(this.transactionItem.host, target);\n    this.transactionItem.oldItem = copy(oldItem);\n    return Object.freeze(copy(this.transactionItem));\n  }\n\n  fillTransaction(quantity: number, replace = false): Readonly<ITankTransactionItem> | null {\n    const condition1 = this.transactionItem.type === ETankTransactionTypes.NoTransaction;\n    const condition2 = this.transactionItem.newItem.quantity < quantity;\n    if (condition1 || condition2) {\n      this.destroyTransaction();\n      return null;\n    }\n    this.transactionItem.remainedItem.quantity = this.transactionItem.newItem.quantity - quantity;\n    if (replace || this.transactionItem.oldItem?.name !== this.transactionItem.newItem.name) {\n      if (this.transactionItem.oldItem?.name === this.transactionItem.newItem.name) {\n        this.transactionItem.remainedItem.quantity += this.transactionItem.oldItem.quantity;\n      }\n      this.transactionItem.newItem.quantity = quantity;\n    } else {\n      this.transactionItem.newItem.quantity = (this.transactionItem.oldItem?.quantity ?? 0) + quantity;\n      this.transactionItem.oldItem = null;\n    }\n    const transactionClone = copy(this.transactionItem);\n    this.destroyTransaction();\n    switch (transactionClone.type) {\n      case ETankTransactionTypes.InventoryTank:\n        this.inventoryTankTransaction$.next(transactionClone);\n        break;\n      case ETankTransactionTypes.TankInventory:\n        this.tankInventoryTransaction$.next(transactionClone);\n        break;\n    }\n    return Object.freeze(transactionClone);\n  }\n\n  destroyTransaction(): void {\n    this.transactionItem = copy(tankDefaultTransactionItem);\n  }\n\n  handleTransactionCompletion(\n    hostItems: ITankItem[],\n    transactionItem: Readonly<ITankTransactionItem>,\n  ): ITankItem[] {\n    const hostItemsClone: ITankItem[] = copy(hostItems);\n    const oldTankItem: ITankItem = transactionItem.oldItem;\n    const remainedTankItem: ITankItem = transactionItem.remainedItem;\n    let oldTankItemAdded = false;\n    let remainedTankItemAdded = false;\n    hostItemsClone.forEach((item, index) => {\n      if (item?.quantity && item.name === oldTankItem?.name && !oldTankItemAdded) {\n        item.quantity += oldTankItem.quantity;\n        oldTankItemAdded = true;\n      }\n      if (item?.quantity && item.name === remainedTankItem.name && !remainedTankItemAdded) {\n        item.quantity = remainedTankItem.quantity;\n        remainedTankItemAdded = true;\n        if (!item.quantity) {\n          hostItemsClone[index] = null;\n        }\n      }\n    });\n    if (!oldTankItemAdded) {\n      const freeCellIndex = hostItemsClone.findIndex(item => !item?.quantity);\n      if (freeCellIndex >= 0) {\n        hostItemsClone[freeCellIndex] = oldTankItem;\n        if (!hostItemsClone[freeCellIndex]?.quantity) {\n          hostItemsClone[freeCellIndex] = null;\n        }\n      } else {\n        this.sendTransactionResult(transactionItem.type, false);\n        return hostItems;\n      }\n    }\n    this.sendTransactionResult(transactionItem.type, true);\n    return hostItemsClone;\n  }\n\n  getTransactionType(host: ETankTransactionHosts, target: ETankTransactionTargets): ETankTransactionTypes {\n    if (host === ETankTransactionHosts.Inventory && target === ETankTransactionTargets.Tank) {\n      return ETankTransactionTypes.InventoryTank;\n    } else if (host === ETankTransactionHosts.Tank && target === ETankTransactionTargets.Inventory) {\n      return ETankTransactionTypes.TankInventory;\n    } else {\n      return ETankTransactionTypes.NoTransaction;\n    }\n  }\n\n  private sendTransactionResult(transactionType: ETankTransactionTypes, result: boolean): void {\n    switch (transactionType) {\n      case ETankTransactionTypes.InventoryTank:\n        this.inventoryTankTransactionResult$.next(result);\n        break;\n      case ETankTransactionTypes.TankInventory:\n        this.tankInventoryTransactionResult$.next(result);\n        break;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ETankItemType } from '../../enums/game.enum';\nimport { ITankItem } from '../../interfaces/tank.interface';\n\n@Pipe({\n  name: 'rotateBullet',\n})\nexport class RotateBulletPipe implements PipeTransform {\n\n  transform(value: ITankItem): string {\n    return value?.itemType === ETankItemType.Bullet ? `rotate(60deg)` : `rotate(0deg)`;\n  }\n\n}\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  input,\n  OnInit,\n  output,\n  Renderer2,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { delay, merge } from 'rxjs';\n\nimport {\n  TankItemTransactionService,\n} from '../../../../pages/welcome-page/services/tank-item-transaction/tank-item-transaction.service';\nimport { copy, swap } from '../../../../shared/constants/utils';\nimport {\n  ETankItemType,\n  ETankTransactionHosts,\n  ETankTransactionTargets,\n  ETankTransactionTypes,\n} from '../../../resources/enums/game.enum';\nimport { IBullet, ITankItem, ITankTransactionItem } from '../../../resources/interfaces/tank.interface';\nimport { RotateBulletPipe } from '../../../resources/pipes/rotate-bullet/rotate-bullet.pipe';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-player-inventory',\n  imports: [\n    NgOptimizedImage,\n    NgClass,\n    RotateBulletPipe,\n  ],\n  templateUrl: './player-inventory.component.html',\n  styleUrl: './player-inventory.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerInventoryComponent implements OnInit {\n\n  private readonly renderer = inject(Renderer2);\n  private readonly tankItemTransactionService = inject(TankItemTransactionService);\n  private readonly dr = inject(DestroyRef);\n\n  inventory = input.required<ITankItem[]>();\n  inventoryClone = computed(() => copy(this.inventory()));\n  saveInventory = output<ITankItem[]>();\n\n  tankItemType = ETankItemType;\n  dragIndex: number | null = null;\n\n  ngOnInit(): void {\n    this.observeTankItem();\n    this.observeInventoryTankTransactionReady();\n    this.observeTransactionResult();\n  }\n\n  onInventoryItemDrop(index: number | null, event?: DragEvent): void {\n    if (Number.isInteger(this.dragIndex)) {\n      const updatedInventory: ITankItem[] = swap(this.inventoryClone(), this.dragIndex, index);\n      this.saveInventory.emit(updatedInventory);\n    }\n\n    const transactionType = this.tankItemTransactionService.getTransactionType(\n      this.tankItemTransactionService.transactionHost,\n      ETankTransactionTargets.Inventory,\n    );\n    if (this.tankItemTransactionService.transactionTankItemType === ETankItemType.Bullet &&\n      transactionType === ETankTransactionTypes.TankInventory) {\n      const newTankItem: ITankItem = this.tankItemTransactionService.transactionNewItem;\n      const possibleIndex: number = this.inventoryClone().findIndex(\n        item => item?.name === newTankItem.name,\n      );\n      if (index === null ||\n        (this.inventoryClone()[index] && this.inventoryClone()[index]?.itemType !== ETankItemType.Bullet)) {\n        index = this.inventoryClone().findIndex(item => !item);\n      }\n      const actualIndex: number | null = possibleIndex >= 0 ? possibleIndex : index >= 0 ? index : null;\n      if (actualIndex === null) {\n        this.tankItemTransactionService.destroyTransaction();\n      }\n      const oldBullet: ITankItem = this.inventoryClone()[actualIndex];\n      this.tankItemTransactionService.startTransaction(oldBullet, ETankTransactionTargets.Inventory);\n      const tankTransactionItem: Readonly<ITankTransactionItem> =\n        this.tankItemTransactionService.fillTransaction(newTankItem.quantity);\n      if (tankTransactionItem) {\n        this.inventoryClone()[actualIndex] = tankTransactionItem.newItem as IBullet;\n      }\n    }\n\n    if (event) {\n      this.onInventoryItemDragLeave(event);\n    }\n\n    this.dragIndex = null;\n  }\n\n  onInventoryItemDragStart(dragIndex: number): void {\n    this.dragIndex = dragIndex;\n    const newItem: ITankItem = this.inventoryClone()[dragIndex];\n    this.tankItemTransactionService.createTransaction(newItem, ETankTransactionHosts.Inventory);\n  }\n\n  onInventoryItemDragEnd(): void {\n    this.dragIndex = null;\n    if (!this.tankItemTransactionService.transactionInProgress) {\n      this.tankItemTransactionService.destroyTransaction();\n    }\n  }\n\n  onInventoryItemDoubleClick(index: number): void {\n    const item = this.inventoryClone()[index];\n    this.tankItemTransactionService.createTransaction(item, ETankTransactionHosts.Inventory);\n    this.tankItemTransactionService.inventoryItemClicked$.next();\n  }\n\n  onInventoryItemDragEnter(event: DragEvent): void {\n    event.stopImmediatePropagation();\n    const el = event.target as HTMLDivElement;\n    this.renderer.setStyle(el, 'border-width', '3px');\n  }\n\n  onInventoryItemDragLeave(event: DragEvent): void {\n    event.stopImmediatePropagation();\n    const el = event.target as HTMLDivElement;\n    this.renderer.setStyle(el, 'border-width', '1px');\n  }\n\n  private observeTankItem(): void {\n    this.tankItemTransactionService.tankItemClicked$.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(() => {\n      switch (this.tankItemTransactionService.transactionTankItemType) {\n        case ETankItemType.Bullet: {\n          this.onInventoryItemDrop(null);\n          break;\n        }\n      }\n    });\n  }\n\n  private observeInventoryTankTransactionReady(): void {\n    this.tankItemTransactionService.inventoryTankTransactionReady$.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(tankTransactionItem => {\n      const updatedInventory: ITankItem[] = this.tankItemTransactionService.handleTransactionCompletion(\n        this.inventoryClone(),\n        tankTransactionItem,\n      );\n      for (let i = 0; i < this.inventoryClone().length; ++i) {\n        this.inventoryClone()[i] = updatedInventory[i];\n      }\n    });\n  }\n\n  private observeTransactionResult(): void {\n    merge(\n      this.tankItemTransactionService.tankInventoryTransactionCompleted$,\n      this.tankItemTransactionService.inventoryTankTransactionCompleted$,\n    ).pipe(\n      delay(0),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      result ? this.saveInventory.emit(this.inventoryClone()) : this.saveInventory.emit(this.inventory());\n    });\n  }\n}\n","<div class=\"inventory-wrapper\">\n  <div class=\"inventory-container\">\n    <div class=\"inventory-items\">\n      @for (inventoryCell of inventoryClone(); track $index) {\n        <div\n          class=\"inventory-item\"\n          [draggable]=\"inventoryCell?.quantity\"\n          (dragover)=\"$event.preventDefault()\"\n          (drop)=\"onInventoryItemDrop($index, $event)\"\n          (dragstart)=\"onInventoryItemDragStart($index)\"\n          (dragend)=\"onInventoryItemDragEnd()\"\n          (dragenter)=\"onInventoryItemDragEnter($event)\"\n          (dragleave)=\"onInventoryItemDragLeave($event)\"\n          (dblclick)=\"onInventoryItemDoubleClick($index)\">\n          @if (!inventoryCell?.quantity) {\n            <div [ngClass]=\"{ 'icon-wrapper': true, 'icon-stub': !inventoryCell?.quantity }\">\n              <img fill class=\"inventory-item-img\" ngSrc=\"assets/icons/tank/inventory-stub.svg\" alt=\"#\">\n            </div>\n          } @else if (inventoryCell) {\n            <div class=\"icon-wrapper\">\n              <img\n                fill\n                alt=\"#\"\n                [ngClass]=\"{\n                       'inventory-item-img': true,\n                       'small-icon': inventoryCell.itemType === tankItemType.Bullet,\n                       'large-icon': false\n                       }\"\n                [ngSrc]=\"inventoryCell.path\"\n                [style.transform]=\"inventoryCell | rotateBullet\">\n            </div>\n            <span class=\"item-quantity\">{{ inventoryCell.quantity }}</span>\n          }\n        </div>\n      }\n    </div>\n  </div>\n</div>\n","import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\n\nimport { getTankCharacteristics } from '../../../resources/constants/tank-settings';\nimport { IDemoTank, ITankCharacteristic } from '../../../resources/interfaces/tank.interface';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-tank-modernization',\n  imports: [\n    NgOptimizedImage,\n    MatButton,\n\n  ],\n  templateUrl: './tank-modernization.component.html',\n  styleUrl: './tank-modernization.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankModernizationComponent {\n\n  tank = input.required<IDemoTank>();\n\n  characteristics = computed<ITankCharacteristic[]>(() => getTankCharacteristics(this.tank()));\n\n}\n","<div class=\"inventory-wrapper\">\n  <div class=\"inventory-container\">\n    <div class=\"tank-characteristics\">\n      @for (item of characteristics(); track $index) {\n        <div class=\"tank-characteristic-item\">\n          <span class=\"item-label\">{{item.type}}:</span>\n          <div class=\"item-action-wrapper\">\n            <span class=\"item-value\">{{item.value}}</span>\n            <small class=\"item-progress\"> +{{item.growth}} </small>\n            <button mat-button type=\"button\" class=\"tank-characteristic-item-action-btn\" [disabled]=\"false\">\n              <span class=\"item-action-price\">{{item.price}}</span>\n              <img class=\"item-zrist-img\" ngSrc=\"assets/icons/zrist.svg\" alt=\"arenas\" width=\"24\" height=\"24\"/>\n            </button>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WarRoomService {\n\n  tankNameLocker = false;\n}\n","import { NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  effect,\n  inject,\n  input, output,\n  signal,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\n\nimport { debounceTime } from 'rxjs';\n\nimport { WarRoomService } from '../../../../pages/welcome-page/services/war-room/war-room.service';\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationService } from '../../../../shared/components/validation/validation-service/validation.service';\nimport { angleBetweenCenterAndPoint } from '../../../../shared/constants/utils';\nimport { ITankTurret } from '../../../resources/interfaces/tank.interface';\n\n@Component({\n  selector: 'tnm-tank-view',\n  imports: [\n    NgOptimizedImage,\n    InputTextComponent,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './tank-view.component.html',\n  styleUrl: './tank-view.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankViewComponent {\n\n  private readonly validationService = inject(ValidationService);\n  private readonly warRoomService = inject(WarRoomService);\n  private readonly dr = inject(DestroyRef);\n\n  selectedTankHead = input.required<ITankTurret>();\n  selectedTankBody = input.required<ITankTurret>();\n  tankName = input.required<string>();\n  tankNameChange = output<string>();\n\n  tankNameControl = signal<FormControl<string>>(\n    new FormControl('', {\n      validators: [\n        this.validationService.userNameLength,\n        this.validationService.userName,\n      ],\n      nonNullable: true,\n    }),\n  );\n\n  targetAngle = signal<number>(0);\n\n  constructor() {\n    effect(() => {\n      if (this.tankName() && !this.warRoomService.tankNameLocker) {\n        this.observeUserName();\n        this.tankNameControl().setValue(this.tankName());\n        this.warRoomService.tankNameLocker = true;\n      }\n    });\n  }\n\n  onMouseLeave(el: HTMLDivElement): void {\n    this.targetAngle.set(0);\n  }\n\n  onTarget(event: MouseEvent, el: HTMLDivElement): void {\n    const viewWidth = el.clientWidth;\n    const viewHeight = el.clientHeight;\n    this.targetAngle.set(angleBetweenCenterAndPoint(\n      viewWidth,\n      viewHeight,\n      event.offsetX,\n      event.offsetY,\n    ));\n  }\n\n  private observeUserName(): void {\n    this.tankNameControl().valueChanges.pipe(\n      debounceTime(500),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(value => {\n      if (this.tankNameControl().valid) {\n        this.tankNameChange.emit(value);\n      }\n    });\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"tank-view-container\">\n    <div\n      class=\"tank-view\"\n      (mousemove)=\"onTarget($event, wrapper)\"\n      (mouseleave)=\"onMouseLeave(wrapper)\" #wrapper>\n      @if (selectedTankBody()) {\n        <img class=\"view-tank-item\" alt=\"#\" width=\"60\" height=\"60\" [ngSrc]=\"selectedTankBody().path\"/>\n      }\n      @if (selectedTankHead()) {\n        <img class=\"view-tank-item\"\n             alt=\"#\"\n             width=\"60\"\n             height=\"60\"\n             [ngSrc]=\"selectedTankHead().path\"\n             [style.transform]=\"'rotate(' + targetAngle() + 'deg)'\"/>\n      }\n    </div>\n  </div>\n  <div class=\"tank-name-tag\">\n    @if (tankNameControl()) {\n      <tnm-input-text\n        borderColor=\"var(--mat-sys-primary-container)\"\n        [formControl]=\"tankNameControl()\"\n        [disableErrors]=\"true\"\n        [centered]=\"true\">\n      </tnm-input-text>\n    }\n  </div>\n</div>\n","export enum EBreakPointsEnum {\n  DesktopFHD = `(min-width: 1921px)`,\n  Desktop = `(min-width: 1201px) and (max-width: 1920px)`,\n  Laptops = `(min-width: 993px) and (max-width: 1200px)`,\n  Tablets = `(min-width: 577px) and (max-width: 992px)`,\n  Mobiles = `(min-width: 0px) and (max-width: 576px)`,\n}\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { inject, Injectable } from '@angular/core';\n\nimport { map, Observable } from 'rxjs';\n\nimport { EBreakPointsEnum } from './breakpoint.enum';\nimport { IBreakPointState } from './breakpoint.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n\n  private readonly breakPointObserver = inject(BreakpointObserver);\n\n  public adjustedBreakPointObserver$: Observable<IBreakPointState> = this.breakPointObserver.observe([\n    EBreakPointsEnum.Mobiles,\n    EBreakPointsEnum.Tablets,\n    EBreakPointsEnum.Laptops,\n    EBreakPointsEnum.Desktop,\n    EBreakPointsEnum.DesktopFHD,\n  ]).pipe(\n    map(state => ({\n      mobile: state.breakpoints[EBreakPointsEnum.Mobiles],\n      tablet: state.breakpoints[EBreakPointsEnum.Tablets],\n      laptop: state.breakpoints[EBreakPointsEnum.Laptops],\n      desktop: state.breakpoints[EBreakPointsEnum.Desktop],\n      desktopFHD: state.breakpoints[EBreakPointsEnum.DesktopFHD],\n    })),\n  );\n}\n","import { isDataSource } from './data-source-CL6Fasig.mjs';\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction CdkTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction CdkTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 0);\n    i0.ɵɵelementContainer(3, 2)(4, 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CdkTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 2)(2, 3)(3, 4);\n  }\n}\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nexport { DataSource } from './data-source-CL6Fasig.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, booleanAttribute, ElementRef, Directive, ContentChild, Input, NgZone, Injectable, IterableDiffers, ViewContainerRef, ViewEncapsulation, ChangeDetectionStrategy, Component, afterNextRender, ChangeDetectorRef, EventEmitter, Injector, HostAttributeToken, ContentChildren, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation } from './recycle-view-repeater-strategy-Ce0p4WhD.mjs';\nimport { _DisposeViewRepeaterStrategy } from './dispose-view-repeater-strategy-BLw1RSwm.mjs';\nimport { Directionality } from './directionality-DPQw3n2b.mjs';\nimport { Platform } from './platform-Do3uqmxu.mjs';\nimport { ViewportRuler, ScrollingModule } from './scrolling.mjs';\nimport { coerceBooleanProperty } from './boolean-property-_aCfQwp8.mjs';\nimport './element-CpqV8p-X.mjs';\nimport './scrolling-BXVcIfjZ.mjs';\nimport './bidi.mjs';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = /*#__PURE__*/new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = /*#__PURE__*/new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nlet CdkCellDef = /*#__PURE__*/(() => {\n  class CdkCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() {}\n    static ɵfac = function CdkCellDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkCellDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCellDef,\n      selectors: [[\"\", \"cdkCellDef\", \"\"]]\n    });\n  }\n  return CdkCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nlet CdkHeaderCellDef = /*#__PURE__*/(() => {\n  class CdkHeaderCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() {}\n    static ɵfac = function CdkHeaderCellDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkHeaderCellDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderCellDef,\n      selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]]\n    });\n  }\n  return CdkHeaderCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nlet CdkFooterCellDef = /*#__PURE__*/(() => {\n  class CdkFooterCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() {}\n    static ɵfac = function CdkFooterCellDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkFooterCellDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterCellDef,\n      selectors: [[\"\", \"cdkFooterCellDef\", \"\"]]\n    });\n  }\n  return CdkFooterCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nlet CdkColumnDef = /*#__PURE__*/(() => {\n  class CdkColumnDef {\n    _table = inject(CDK_TABLE, {\n      optional: true\n    });\n    _hasStickyChanged = false;\n    /** Unique name for this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._setNameInput(name);\n    }\n    _name;\n    /** Whether the cell is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    _sticky = false;\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n      return this._stickyEnd;\n    }\n    set stickyEnd(value) {\n      if (value !== this._stickyEnd) {\n        this._stickyEnd = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    _stickyEnd = false;\n    /** @docs-private */\n    cell;\n    /** @docs-private */\n    headerCell;\n    /** @docs-private */\n    footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     */\n    cssClassFriendlyName;\n    /**\n     * Class name for cells in this column.\n     * @docs-private\n     */\n    _columnCssClassName;\n    constructor() {}\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n      this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n      // If the directive is set without a name (updated programmatically), then this setter will\n      // trigger with an empty string and should not overwrite the programmatically set value.\n      if (value) {\n        this._name = value;\n        this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n        this._updateColumnCssClassName();\n      }\n    }\n    static ɵfac = function CdkColumnDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkColumnDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkColumnDef,\n      selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n      contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n        }\n      },\n      inputs: {\n        name: [0, \"cdkColumnDef\", \"name\"],\n        sticky: [2, \"sticky\", \"sticky\", booleanAttribute],\n        stickyEnd: [2, \"stickyEnd\", \"stickyEnd\", booleanAttribute]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }])]\n    });\n  }\n  return CdkColumnDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n  }\n}\n/** Header cell template container that adds the right classes and role. */\nlet CdkHeaderCell = /*#__PURE__*/(() => {\n  class CdkHeaderCell extends BaseCdkCell {\n    constructor() {\n      super(inject(CdkColumnDef), inject(ElementRef));\n    }\n    static ɵfac = function CdkHeaderCell_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkHeaderCell)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderCell,\n      selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n      hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkHeaderCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer cell template container that adds the right classes and role. */\nlet CdkFooterCell = /*#__PURE__*/(() => {\n  class CdkFooterCell extends BaseCdkCell {\n    constructor() {\n      const columnDef = inject(CdkColumnDef);\n      const elementRef = inject(ElementRef);\n      super(columnDef, elementRef);\n      const role = columnDef._table?._getCellRole();\n      if (role) {\n        elementRef.nativeElement.setAttribute('role', role);\n      }\n    }\n    static ɵfac = function CdkFooterCell_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkFooterCell)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterCell,\n      selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n      hostAttrs: [1, \"cdk-footer-cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkFooterCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Cell template container that adds the right classes and role. */\nlet CdkCell = /*#__PURE__*/(() => {\n  class CdkCell extends BaseCdkCell {\n    constructor() {\n      const columnDef = inject(CdkColumnDef);\n      const elementRef = inject(ElementRef);\n      super(columnDef, elementRef);\n      const role = columnDef._table?._getCellRole();\n      if (role) {\n        elementRef.nativeElement.setAttribute('role', role);\n      }\n    }\n    static ɵfac = function CdkCell_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkCell)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCell,\n      selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n      hostAttrs: [1, \"cdk-cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @docs-private\n */\nclass _Schedule {\n  tasks = [];\n  endTasks = [];\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = /*#__PURE__*/new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nlet _CoalescedStyleScheduler = /*#__PURE__*/(() => {\n  class _CoalescedStyleScheduler {\n    _currentSchedule = null;\n    _ngZone = inject(NgZone);\n    constructor() {}\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n      this._createScheduleIfNeeded();\n      this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n      this._createScheduleIfNeeded();\n      this._currentSchedule.endTasks.push(task);\n    }\n    _createScheduleIfNeeded() {\n      if (this._currentSchedule) {\n        return;\n      }\n      this._currentSchedule = new _Schedule();\n      this._ngZone.runOutsideAngular(() =>\n      // TODO(mmalerba): Scheduling this using something that runs less frequently\n      //  (e.g. requestAnimationFrame, setTimeout, etc.) causes noticeable jank with the column\n      //  resizer. We should audit the usages of schedule / scheduleEnd in that component and see\n      //  if we can refactor it so that we don't need to flush the tasks quite so frequently.\n      queueMicrotask(() => {\n        while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n          const schedule = this._currentSchedule;\n          // Capture new tasks scheduled by the current set of tasks.\n          this._currentSchedule = new _Schedule();\n          for (const task of schedule.tasks) {\n            task();\n          }\n          for (const task of schedule.endTasks) {\n            task();\n          }\n        }\n        this._currentSchedule = null;\n      }));\n    }\n    static ɵfac = function _CoalescedStyleScheduler_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || _CoalescedStyleScheduler)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: _CoalescedStyleScheduler,\n      factory: _CoalescedStyleScheduler.ɵfac\n    });\n  }\n  return _CoalescedStyleScheduler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nlet BaseRowDef = /*#__PURE__*/(() => {\n  class BaseRowDef {\n    template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    /** The columns to be displayed on this row. */\n    columns;\n    /** Differ used to check if any changes were made to the columns. */\n    _columnsDiffer;\n    constructor() {}\n    ngOnChanges(changes) {\n      // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n      // of the columns property or an empty array if none is provided.\n      if (!this._columnsDiffer) {\n        const columns = changes['columns'] && changes['columns'].currentValue || [];\n        this._columnsDiffer = this._differs.find(columns).create();\n        this._columnsDiffer.diff(columns);\n      }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n      return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n      if (this instanceof CdkHeaderRowDef) {\n        return column.headerCell.template;\n      }\n      if (this instanceof CdkFooterRowDef) {\n        return column.footerCell.template;\n      } else {\n        return column.cell.template;\n      }\n    }\n    static ɵfac = function BaseRowDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BaseRowDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseRowDef,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return BaseRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nlet CdkHeaderRowDef = /*#__PURE__*/(() => {\n  class CdkHeaderRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, {\n      optional: true\n    });\n    _hasStickyChanged = false;\n    /** Whether the row is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    _sticky = false;\n    constructor() {\n      super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    static ɵfac = function CdkHeaderRowDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkHeaderRowDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkHeaderRowDef,\n      selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"cdkHeaderRowDef\", \"columns\"],\n        sticky: [2, \"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return CdkHeaderRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nlet CdkFooterRowDef = /*#__PURE__*/(() => {\n  class CdkFooterRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, {\n      optional: true\n    });\n    _hasStickyChanged = false;\n    /** Whether the row is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    _sticky = false;\n    constructor() {\n      super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    static ɵfac = function CdkFooterRowDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkFooterRowDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkFooterRowDef,\n      selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"cdkFooterRowDef\", \"columns\"],\n        sticky: [2, \"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return CdkFooterRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nlet CdkRowDef = /*#__PURE__*/(() => {\n  class CdkRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, {\n      optional: true\n    });\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     */\n    when;\n    constructor() {\n      // TODO(andrewseguin): Add an input for providing a switch function to determine\n      //   if this template should be used.\n      super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    static ɵfac = function CdkRowDef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkRowDef)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkRowDef,\n      selectors: [[\"\", \"cdkRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"cdkRowDefColumns\", \"columns\"],\n        when: [0, \"cdkRowDefWhen\", \"when\"]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CdkRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nlet CdkCellOutlet = /*#__PURE__*/(() => {\n  class CdkCellOutlet {\n    _viewContainer = inject(ViewContainerRef);\n    /** The ordered list of cells to render within this outlet's view container */\n    cells;\n    /** The data context to be provided to each cell */\n    context;\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static mostRecentCellOutlet = null;\n    constructor() {\n      CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n      // If this was the last outlet being rendered in the view, remove the reference\n      // from the static property after it has been destroyed to avoid leaking memory.\n      if (CdkCellOutlet.mostRecentCellOutlet === this) {\n        CdkCellOutlet.mostRecentCellOutlet = null;\n      }\n    }\n    static ɵfac = function CdkCellOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkCellOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkCellOutlet,\n      selectors: [[\"\", \"cdkCellOutlet\", \"\"]]\n    });\n  }\n  return CdkCellOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nlet CdkHeaderRow = /*#__PURE__*/(() => {\n  class CdkHeaderRow {\n    static ɵfac = function CdkHeaderRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkHeaderRow)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkHeaderRow,\n      selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkHeaderRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return CdkHeaderRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nlet CdkFooterRow = /*#__PURE__*/(() => {\n  class CdkFooterRow {\n    static ɵfac = function CdkFooterRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkFooterRow)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkFooterRow,\n      selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkFooterRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return CdkFooterRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nlet CdkRow = /*#__PURE__*/(() => {\n  class CdkRow {\n    static ɵfac = function CdkRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkRow)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkRow,\n      selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function CdkRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return CdkRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nlet CdkNoDataRow = /*#__PURE__*/(() => {\n  class CdkNoDataRow {\n    templateRef = inject(TemplateRef);\n    _contentClassName = 'cdk-no-data-row';\n    constructor() {}\n    static ɵfac = function CdkNoDataRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkNoDataRow)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkNoDataRow,\n      selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]]\n    });\n  }\n  return CdkNoDataRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directions that can be used when setting sticky positioning.\n * @docs-private\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n  _isNativeHtmlTable;\n  _stickCellCss;\n  direction;\n  _coalescedStyleScheduler;\n  _isBrowser;\n  _needsPositionStickyOnElement;\n  _positionListener;\n  _tableInjector;\n  _elemSizeCache = /*#__PURE__*/new WeakMap();\n  _resizeObserver = globalThis?.ResizeObserver ? /*#__PURE__*/new globalThis.ResizeObserver(entries => this._updateCachedSizes(entries)) : null;\n  _updatedStickyColumnsParamsToReplay = [];\n  _stickyColumnsReplayTimeout = null;\n  _cachedCellWidths = [];\n  _borderCellCss;\n  _destroyed = false;\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   * @param _tableInjector The table's Injector.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener, _tableInjector) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._tableInjector = _tableInjector;\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows, stickyDirections) {\n    if (stickyDirections.includes('left') || stickyDirections.includes('right')) {\n      this._removeFromStickyColumnReplayQueue(rows);\n    }\n    const elementsToClear = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n      elementsToClear.push(row, ...Array.from(row.children));\n    }\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._afterNextRender({\n      write: () => {\n        for (const element of elementsToClear) {\n          this._removeStickyStyle(element, stickyDirections);\n        }\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   * @param replay Whether to enqueue this call for replay after a ResizeObserver update.\n   */\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true, replay = true) {\n    // Don't cache any state if none of the columns are sticky.\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      this._positionListener?.stickyColumnsUpdated({\n        sizes: []\n      });\n      this._positionListener?.stickyEndColumnsUpdated({\n        sizes: []\n      });\n      return;\n    }\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n    const isRtl = this.direction === 'rtl';\n    const start = isRtl ? 'right' : 'left';\n    const end = isRtl ? 'left' : 'right';\n    const lastStickyStart = stickyStartStates.lastIndexOf(true);\n    const firstStickyEnd = stickyEndStates.indexOf(true);\n    let cellWidths;\n    let startPositions;\n    let endPositions;\n    if (replay) {\n      this._updateStickyColumnReplayQueue({\n        rows: [...rows],\n        stickyStartStates: [...stickyStartStates],\n        stickyEndStates: [...stickyEndStates]\n      });\n    }\n    this._afterNextRender({\n      earlyRead: () => {\n        cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n      },\n      write: () => {\n        for (const row of rows) {\n          for (let i = 0; i < numCells; i++) {\n            const cell = row.children[i];\n            if (stickyStartStates[i]) {\n              this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n            }\n            if (stickyEndStates[i]) {\n              this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n            }\n          }\n        }\n        if (this._positionListener && cellWidths.some(w => !!w)) {\n          this._positionListener.stickyColumnsUpdated({\n            sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n          });\n          this._positionListener.stickyEndColumnsUpdated({\n            sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n    // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n    // sticky states need to be reversed as well.\n    const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n    const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n    // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n    const stickyOffsets = [];\n    const stickyCellHeights = [];\n    const elementsToStick = [];\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._afterNextRender({\n      earlyRead: () => {\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n          if (!states[rowIndex]) {\n            continue;\n          }\n          stickyOffsets[rowIndex] = stickyOffset;\n          const row = rows[rowIndex];\n          elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n          const height = this._retrieveElementSize(row).height;\n          stickyOffset += height;\n          stickyCellHeights[rowIndex] = height;\n        }\n      },\n      write: () => {\n        const borderedRowIndex = states.lastIndexOf(true);\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n          if (!states[rowIndex]) {\n            continue;\n          }\n          const offset = stickyOffsets[rowIndex];\n          const isBorderedRowIndex = rowIndex === borderedRowIndex;\n          for (const element of elementsToStick[rowIndex]) {\n            this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n          }\n        }\n        if (position === 'top') {\n          this._positionListener?.stickyHeaderRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        } else {\n          this._positionListener?.stickyFooterRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        }\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._afterNextRender({\n      write: () => {\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n          if (stickyStates.some(state => !state)) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n          } else {\n            this._addStickyStyle(tfoot, 'bottom', 0, false);\n          }\n        }\n      }\n    });\n  }\n  /** Triggered by the table's OnDestroy hook. */\n  destroy() {\n    if (this._stickyColumnsReplayTimeout) {\n      clearTimeout(this._stickyColumnsReplayTimeout);\n    }\n    this._resizeObserver?.disconnect();\n    this._destroyed = true;\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element, stickyDirections) {\n    if (!element.classList.contains(this._stickCellCss)) {\n      return;\n    }\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    }\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n    const cellWidths = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      const cell = firstRowCells[i];\n      cellWidths.push(this._retrieveElementSize(cell).width);\n    }\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Retreives the most recently observed size of the specified element from the cache, or\n   * meaures it directly if not yet cached.\n   */\n  _retrieveElementSize(element) {\n    const cachedSize = this._elemSizeCache.get(element);\n    if (cachedSize) {\n      return cachedSize;\n    }\n    const clientRect = element.getBoundingClientRect();\n    const size = {\n      width: clientRect.width,\n      height: clientRect.height\n    };\n    if (!this._resizeObserver) {\n      return size;\n    }\n    this._elemSizeCache.set(element, size);\n    this._resizeObserver.observe(element, {\n      box: 'border-box'\n    });\n    return size;\n  }\n  /**\n   * Conditionally enqueue the requested sticky update and clear previously queued updates\n   * for the same rows.\n   */\n  _updateStickyColumnReplayQueue(params) {\n    this._removeFromStickyColumnReplayQueue(params.rows);\n    // No need to replay if a flush is pending.\n    if (!this._stickyColumnsReplayTimeout) {\n      this._updatedStickyColumnsParamsToReplay.push(params);\n    }\n  }\n  /** Remove updates for the specified rows from the queue. */\n  _removeFromStickyColumnReplayQueue(rows) {\n    const rowsSet = new Set(rows);\n    for (const update of this._updatedStickyColumnsParamsToReplay) {\n      update.rows = update.rows.filter(row => !rowsSet.has(row));\n    }\n    this._updatedStickyColumnsParamsToReplay = this._updatedStickyColumnsParamsToReplay.filter(update => !!update.rows.length);\n  }\n  /** Update _elemSizeCache with the observed sizes. */\n  _updateCachedSizes(entries) {\n    let needsColumnUpdate = false;\n    for (const entry of entries) {\n      const newEntry = entry.borderBoxSize?.length ? {\n        width: entry.borderBoxSize[0].inlineSize,\n        height: entry.borderBoxSize[0].blockSize\n      } : {\n        width: entry.contentRect.width,\n        height: entry.contentRect.height\n      };\n      if (newEntry.width !== this._elemSizeCache.get(entry.target)?.width && isCell(entry.target)) {\n        needsColumnUpdate = true;\n      }\n      this._elemSizeCache.set(entry.target, newEntry);\n    }\n    if (needsColumnUpdate && this._updatedStickyColumnsParamsToReplay.length) {\n      if (this._stickyColumnsReplayTimeout) {\n        clearTimeout(this._stickyColumnsReplayTimeout);\n      }\n      this._stickyColumnsReplayTimeout = setTimeout(() => {\n        if (this._destroyed) {\n          return;\n        }\n        for (const update of this._updatedStickyColumnsParamsToReplay) {\n          this.updateStickyColumns(update.rows, update.stickyStartStates, update.stickyEndStates, true, false);\n        }\n        this._updatedStickyColumnsParamsToReplay = [];\n        this._stickyColumnsReplayTimeout = null;\n      }, 0);\n    }\n  }\n  /**\n   * Invoke afterNextRender with the table's injector, falling back to CoalescedStyleScheduler\n   * if the injector was not provided.\n   */\n  _afterNextRender(spec) {\n    if (this._tableInjector) {\n      afterNextRender(spec, {\n        injector: this._tableInjector\n      });\n    } else {\n      this._coalescedStyleScheduler.schedule(() => {\n        spec.earlyRead?.();\n        spec.write();\n      });\n    }\n  }\n}\nfunction isCell(element) {\n  return ['cdk-cell', 'cdk-header-cell', 'cdk-footer-cell'].some(klass => element.classList.contains(klass));\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = /*#__PURE__*/new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nlet CdkRecycleRows = /*#__PURE__*/(() => {\n  class CdkRecycleRows {\n    static ɵfac = function CdkRecycleRows_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkRecycleRows)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkRecycleRows,\n      selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n  return CdkRecycleRows;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nlet DataRowOutlet = /*#__PURE__*/(() => {\n  class DataRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n      const table = inject(CDK_TABLE);\n      table._rowOutlet = this;\n      table._outletAssigned();\n    }\n    static ɵfac = function DataRowOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DataRowOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DataRowOutlet,\n      selectors: [[\"\", \"rowOutlet\", \"\"]]\n    });\n  }\n  return DataRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nlet HeaderRowOutlet = /*#__PURE__*/(() => {\n  class HeaderRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n      const table = inject(CDK_TABLE);\n      table._headerRowOutlet = this;\n      table._outletAssigned();\n    }\n    static ɵfac = function HeaderRowOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HeaderRowOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: HeaderRowOutlet,\n      selectors: [[\"\", \"headerRowOutlet\", \"\"]]\n    });\n  }\n  return HeaderRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nlet FooterRowOutlet = /*#__PURE__*/(() => {\n  class FooterRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n      const table = inject(CDK_TABLE);\n      table._footerRowOutlet = this;\n      table._outletAssigned();\n    }\n    static ɵfac = function FooterRowOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FooterRowOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FooterRowOutlet,\n      selectors: [[\"\", \"footerRowOutlet\", \"\"]]\n    });\n  }\n  return FooterRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nlet NoDataRowOutlet = /*#__PURE__*/(() => {\n  class NoDataRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n      const table = inject(CDK_TABLE);\n      table._noDataRowOutlet = this;\n      table._outletAssigned();\n    }\n    static ɵfac = function NoDataRowOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NoDataRowOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NoDataRowOutlet,\n      selectors: [[\"\", \"noDataRowOutlet\", \"\"]]\n    });\n  }\n  return NoDataRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE =\n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nlet CdkTable = /*#__PURE__*/(() => {\n  class CdkTable {\n    _differs = inject(IterableDiffers);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _platform = inject(Platform);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _coalescedStyleScheduler = inject(_COALESCED_STYLE_SCHEDULER);\n    _viewportRuler = inject(ViewportRuler);\n    _stickyPositioningListener = inject(STICKY_POSITIONING_LISTENER, {\n      optional: true,\n      skipSelf: true\n    });\n    _document = inject(DOCUMENT);\n    /** Latest data provided by the data source. */\n    _data;\n    /** Subject that emits when the component has been destroyed. */\n    _onDestroy = new Subject();\n    /** List of the rendered rows as identified by their `RenderRow` object. */\n    _renderRows;\n    /** Subscription that listens for the data provided by the data source. */\n    _renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n    _columnDefsByName = new Map();\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     */\n    _rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     */\n    _headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     */\n    _footerRowDefs;\n    /** Differ used to find the changes in the data provided by the data source. */\n    _dataDiffer;\n    /** Stores the row definition that does not have a when predicate. */\n    _defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n    _customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n    _customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n    _customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n    _customFooterRowDefs = new Set();\n    /** No data row that was defined outside of the direct content children of the table. */\n    _customNoDataRow;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    _headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    _footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n    _stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n    _forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n    _cachedRenderRowsMap = new Map();\n    /** Whether the table is applied to a native `<table>`. */\n    _isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     */\n    _stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n     * table subclasses.\n     */\n    stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n    needsPositionStickyOnElement = true;\n    /** Whether the component is being rendered on the server. */\n    _isServer;\n    /** Whether the no data row is currently showing anything. */\n    _isShowingNoDataRow = false;\n    /** Whether the table has rendered out all the outlets for the first time. */\n    _hasAllOutlets = false;\n    /** Whether the table is done initializing. */\n    _hasInitialized = false;\n    /** Aria role to apply to the table's cells based on the table's own role. */\n    _getCellRole() {\n      // Perform this lazily in case the table's role was updated by a directive after construction.\n      if (this._cellRoleInternal === undefined) {\n        // Note that we set `role=\"cell\"` even on native `td` elements,\n        // because some browsers seem to require it. See #29784.\n        const tableRole = this._elementRef.nativeElement.getAttribute('role');\n        return tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n      }\n      return this._cellRoleInternal;\n    }\n    _cellRoleInternal = undefined;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n      return this._trackByFn;\n    }\n    set trackBy(fn) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n        console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n      this._trackByFn = fn;\n    }\n    _trackByFn;\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n      return this._dataSource;\n    }\n    set dataSource(dataSource) {\n      if (this._dataSource !== dataSource) {\n        this._switchDataSource(dataSource);\n      }\n    }\n    _dataSource;\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n      return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(value) {\n      this._multiTemplateDataRows = value;\n      // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n      // this setter will be invoked before the row outlet has been defined hence the null check.\n      if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n        this._forceRenderDataRows();\n        this.updateStickyColumnStyles();\n      }\n    }\n    _multiTemplateDataRows = false;\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n      return this._fixedLayout;\n    }\n    set fixedLayout(value) {\n      this._fixedLayout = value;\n      // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n      this._forceRecalculateCellWidths = true;\n      this._stickyColumnStylesNeedReset = true;\n    }\n    _fixedLayout = false;\n    /**\n     * Emits when the table completes rendering a set of data rows based on the latest data from the\n     * data source, even if the set of rows is empty.\n     */\n    contentChanged = new EventEmitter();\n    // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n    viewChange = new BehaviorSubject({\n      start: 0,\n      end: Number.MAX_VALUE\n    });\n    // Outlets in the table's template where the header, data rows, and footer will be inserted.\n    _rowOutlet;\n    _headerRowOutlet;\n    _footerRowOutlet;\n    _noDataRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     */\n    _contentColumnDefs;\n    /** Set of data row definitions that were provided to the table as content children. */\n    _contentRowDefs;\n    /** Set of header row definitions that were provided to the table as content children. */\n    _contentHeaderRowDefs;\n    /** Set of footer row definitions that were provided to the table as content children. */\n    _contentFooterRowDefs;\n    /** Row definition that will only be rendered if there's no data in the table. */\n    _noDataRow;\n    _injector = inject(Injector);\n    constructor() {\n      const role = inject(new HostAttributeToken('role'), {\n        optional: true\n      });\n      if (!role) {\n        this._elementRef.nativeElement.setAttribute('role', 'table');\n      }\n      this._isServer = !this._platform.isBrowser;\n      this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n      // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n      // the user has provided a custom trackBy, return the result of that function as evaluated\n      // with the values of the `RenderRow`'s data and index.\n      this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n        return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n      });\n    }\n    ngOnInit() {\n      this._setupStickyStyler();\n      this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n        this._forceRecalculateCellWidths = true;\n      });\n    }\n    ngAfterContentInit() {\n      this._hasInitialized = true;\n    }\n    ngAfterContentChecked() {\n      // Only start re-rendering in `ngAfterContentChecked` after the first render.\n      if (this._canRender()) {\n        this._render();\n      }\n    }\n    ngOnDestroy() {\n      this._stickyStyler?.destroy();\n      [this._rowOutlet?.viewContainer, this._headerRowOutlet?.viewContainer, this._footerRowOutlet?.viewContainer, this._cachedRenderRowsMap, this._customColumnDefs, this._customRowDefs, this._customHeaderRowDefs, this._customFooterRowDefs, this._columnDefsByName].forEach(def => {\n        def?.clear();\n      });\n      this._headerRowDefs = [];\n      this._footerRowDefs = [];\n      this._defaultRowDef = null;\n      this._onDestroy.next();\n      this._onDestroy.complete();\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n      this._renderRows = this._getAllRenderRows();\n      const changes = this._dataDiffer.diff(this._renderRows);\n      if (!changes) {\n        this._updateNoDataRow();\n        this.contentChanged.next();\n        return;\n      }\n      const viewContainer = this._rowOutlet.viewContainer;\n      this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n        if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n          this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n        }\n      });\n      // Update the meta context of a row's context data (index, count, first, last, ...)\n      this._updateRowIndexContext();\n      // Update rows that did not get added/removed/moved but may have had their identity changed,\n      // e.g. if trackBy matched data on some property but the actual data reference changed.\n      changes.forEachIdentityChange(record => {\n        const rowView = viewContainer.get(record.currentIndex);\n        rowView.context.$implicit = record.item.data;\n      });\n      this._updateNoDataRow();\n      this.contentChanged.next();\n      this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n      this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n      this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n      this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n      this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.add(headerRowDef);\n      this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.delete(headerRowDef);\n      this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.add(footerRowDef);\n      this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.delete(footerRowDef);\n      this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n      this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n      const headerRows = this._getRenderedRows(this._headerRowOutlet);\n      // Hide the thead element if there are no header rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n      if (this._isNativeHtmlTable) {\n        const thead = closestTableSection(this._headerRowOutlet, 'thead');\n        if (thead) {\n          thead.style.display = headerRows.length ? '' : 'none';\n        }\n      }\n      const stickyStates = this._headerRowDefs.map(def => def.sticky);\n      this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n      this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n      // Reset the dirty state of the sticky input change since it has been used.\n      this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n      const footerRows = this._getRenderedRows(this._footerRowOutlet);\n      // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n      if (this._isNativeHtmlTable) {\n        const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n        if (tfoot) {\n          tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n      }\n      const stickyStates = this._footerRowDefs.map(def => def.sticky);\n      this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n      this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n      this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n      // Reset the dirty state of the sticky input change since it has been used.\n      this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n      const headerRows = this._getRenderedRows(this._headerRowOutlet);\n      const dataRows = this._getRenderedRows(this._rowOutlet);\n      const footerRows = this._getRenderedRows(this._footerRowOutlet);\n      // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n      // In a table using a fixed layout, row content won't affect column width, so sticky styles\n      // don't need to be cleared unless either the sticky column config changes or one of the row\n      // defs change.\n      if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        this._stickyColumnStylesNeedReset = false;\n      }\n      // Update the sticky styles for each header row depending on the def's sticky state\n      headerRows.forEach((headerRow, i) => {\n        this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n      });\n      // Update the sticky styles for each data row depending on its def's sticky state\n      this._rowDefs.forEach(rowDef => {\n        // Collect all the rows rendered with this row definition.\n        const rows = [];\n        for (let i = 0; i < dataRows.length; i++) {\n          if (this._renderRows[i].rowDef === rowDef) {\n            rows.push(dataRows[i]);\n          }\n        }\n        this._addStickyColumnStyles(rows, rowDef);\n      });\n      // Update the sticky styles for each footer row depending on the def's sticky state\n      footerRows.forEach((footerRow, i) => {\n        this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n      });\n      // Reset the dirty state of the sticky input change since it has been used.\n      Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /** Invoked whenever an outlet is created and has been assigned to the table. */\n    _outletAssigned() {\n      // Trigger the first render once all outlets have been assigned. We do it this way, as\n      // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n      // the next change detection will happen.\n      // Also we can't use queries to resolve the outlets, because they're wrapped in a\n      // conditional, so we have to rely on them being assigned via DI.\n      if (!this._hasAllOutlets && this._rowOutlet && this._headerRowOutlet && this._footerRowOutlet && this._noDataRowOutlet) {\n        this._hasAllOutlets = true;\n        // In some setups this may fire before `ngAfterContentInit`\n        // so we need a check here. See #28538.\n        if (this._canRender()) {\n          this._render();\n        }\n      }\n    }\n    /** Whether the table has all the information to start rendering. */\n    _canRender() {\n      return this._hasAllOutlets && this._hasInitialized;\n    }\n    /** Renders the table if its state has changed. */\n    _render() {\n      // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n      this._cacheRowDefs();\n      this._cacheColumnDefs();\n      // Make sure that the user has at least added header, footer, or data row def.\n      if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingRowDefsError();\n      }\n      // Render updates if the list of columns have been changed for the header, row, or footer defs.\n      const columnsChanged = this._renderUpdatedColumns();\n      const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n      // Ensure sticky column styles are reset if set to `true` elsewhere.\n      this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n      this._forceRecalculateCellWidths = rowDefsChanged;\n      // If the header row definition has been changed, trigger a render to the header row.\n      if (this._headerRowDefChanged) {\n        this._forceRenderHeaderRows();\n        this._headerRowDefChanged = false;\n      }\n      // If the footer row definition has been changed, trigger a render to the footer row.\n      if (this._footerRowDefChanged) {\n        this._forceRenderFooterRows();\n        this._footerRowDefChanged = false;\n      }\n      // If there is a data source and row definitions, connect to the data source unless a\n      // connection has already been made.\n      if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n        this._observeRenderChanges();\n      } else if (this._stickyColumnStylesNeedReset) {\n        // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n        // called when it row data arrives. Otherwise, we need to call it proactively.\n        this.updateStickyColumnStyles();\n      }\n      this._checkStickyStates();\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n      const renderRows = [];\n      // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n      // new cache while unused ones can be picked up by garbage collection.\n      const prevCachedRenderRows = this._cachedRenderRowsMap;\n      this._cachedRenderRowsMap = new Map();\n      if (!this._data) {\n        return renderRows;\n      }\n      // For each data object, get the list of rows that should be rendered, represented by the\n      // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n      for (let i = 0; i < this._data.length; i++) {\n        let data = this._data[i];\n        const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n        if (!this._cachedRenderRowsMap.has(data)) {\n          this._cachedRenderRowsMap.set(data, new WeakMap());\n        }\n        for (let j = 0; j < renderRowsForData.length; j++) {\n          let renderRow = renderRowsForData[j];\n          const cache = this._cachedRenderRowsMap.get(renderRow.data);\n          if (cache.has(renderRow.rowDef)) {\n            cache.get(renderRow.rowDef).push(renderRow);\n          } else {\n            cache.set(renderRow.rowDef, [renderRow]);\n          }\n          renderRows.push(renderRow);\n        }\n      }\n      return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n      const rowDefs = this._getRowDefs(data, dataIndex);\n      return rowDefs.map(rowDef => {\n        const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n        if (cachedRenderRows.length) {\n          const dataRow = cachedRenderRows.shift();\n          dataRow.dataIndex = dataIndex;\n          return dataRow;\n        } else {\n          return {\n            data,\n            rowDef,\n            dataIndex\n          };\n        }\n      });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n      this._columnDefsByName.clear();\n      const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n      columnDefs.forEach(columnDef => {\n        if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableDuplicateColumnNameError(columnDef.name);\n        }\n        this._columnDefsByName.set(columnDef.name, columnDef);\n      });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n      this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n      this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n      this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n      // After all row definitions are determined, find the row definition to be considered default.\n      const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n      if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMultipleDefaultRowDefsError();\n      }\n      this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n      const columnsDiffReducer = (acc, def) => {\n        // The differ should be run for every column, even if `acc` is already\n        // true (see #29922)\n        const diff = !!def.getColumnsDiff();\n        return acc || diff;\n      };\n      // Force re-render data rows if the list of column definitions have changed.\n      const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n      if (dataColumnsChanged) {\n        this._forceRenderDataRows();\n      }\n      // Force re-render header/footer rows if the list of column definitions have changed.\n      const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n      if (headerColumnsChanged) {\n        this._forceRenderHeaderRows();\n      }\n      const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n      if (footerColumnsChanged) {\n        this._forceRenderFooterRows();\n      }\n      return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n      this._data = [];\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      }\n      // Stop listening for data from the previous data source.\n      if (this._renderChangeSubscription) {\n        this._renderChangeSubscription.unsubscribe();\n        this._renderChangeSubscription = null;\n      }\n      if (!dataSource) {\n        if (this._dataDiffer) {\n          this._dataDiffer.diff([]);\n        }\n        if (this._rowOutlet) {\n          this._rowOutlet.viewContainer.clear();\n        }\n      }\n      this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n      // If no data source has been set, there is nothing to observe for changes.\n      if (!this.dataSource) {\n        return;\n      }\n      let dataStream;\n      if (isDataSource(this.dataSource)) {\n        dataStream = this.dataSource.connect(this);\n      } else if (isObservable(this.dataSource)) {\n        dataStream = this.dataSource;\n      } else if (Array.isArray(this.dataSource)) {\n        dataStream = of(this.dataSource);\n      }\n      if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownDataSourceError();\n      }\n      this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n        this._data = data || [];\n        this.renderRows();\n      });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n      // Clear the header row outlet if any content exists.\n      if (this._headerRowOutlet.viewContainer.length > 0) {\n        this._headerRowOutlet.viewContainer.clear();\n      }\n      this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n      this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n      // Clear the footer row outlet if any content exists.\n      if (this._footerRowOutlet.viewContainer.length > 0) {\n        this._footerRowOutlet.viewContainer.clear();\n      }\n      this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n      this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n      const columnDefs = Array.from(rowDef?.columns || []).map(columnName => {\n        const columnDef = this._columnDefsByName.get(columnName);\n        if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnName);\n        }\n        return columnDef;\n      });\n      const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n      const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n      this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n      const renderedRows = [];\n      for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n        const viewRef = rowOutlet.viewContainer.get(i);\n        renderedRows.push(viewRef.rootNodes[0]);\n      }\n      return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n      if (this._rowDefs.length == 1) {\n        return [this._rowDefs[0]];\n      }\n      let rowDefs = [];\n      if (this.multiTemplateDataRows) {\n        rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n      } else {\n        let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n        if (rowDef) {\n          rowDefs.push(rowDef);\n        }\n      }\n      if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingMatchingRowDefError(data);\n      }\n      return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n      const rowDef = renderRow.rowDef;\n      const context = {\n        $implicit: renderRow.data\n      };\n      return {\n        templateRef: rowDef.template,\n        context,\n        index\n      };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n      // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n      const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n      this._renderCellTemplateForItem(rowDef, context);\n      return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n      for (let cellTemplate of this._getCellTemplates(rowDef)) {\n        if (CdkCellOutlet.mostRecentCellOutlet) {\n          CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n      const viewContainer = this._rowOutlet.viewContainer;\n      for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n        const viewRef = viewContainer.get(renderIndex);\n        const context = viewRef.context;\n        context.count = count;\n        context.first = renderIndex === 0;\n        context.last = renderIndex === count - 1;\n        context.even = renderIndex % 2 === 0;\n        context.odd = !context.even;\n        if (this.multiTemplateDataRows) {\n          context.dataIndex = this._renderRows[renderIndex].dataIndex;\n          context.renderIndex = renderIndex;\n        } else {\n          context.index = this._renderRows[renderIndex].dataIndex;\n        }\n      }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n      if (!rowDef || !rowDef.columns) {\n        return [];\n      }\n      return Array.from(rowDef.columns, columnId => {\n        const column = this._columnDefsByName.get(columnId);\n        if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnId);\n        }\n        return rowDef.extractCellTemplate(column);\n      });\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n      this._dataDiffer.diff([]);\n      this._rowOutlet.viewContainer.clear();\n      this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n      const stickyCheckReducer = (acc, d) => {\n        return acc || d.hasStickyChanged();\n      };\n      // Note that the check needs to occur for every definition since it notifies the definition\n      // that it can reset its dirty state. Using another operator like `some` may short-circuit\n      // remaining definitions and leave them in an unchecked state.\n      if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyHeaderRowStyles();\n      }\n      if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyFooterRowStyles();\n      }\n      if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n        this._stickyColumnStylesNeedReset = true;\n        this.updateStickyColumnStyles();\n      }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n      const direction = this._dir ? this._dir.value : 'ltr';\n      this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener, this._injector);\n      (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n        this._stickyStyler.direction = value;\n        this.updateStickyColumnStyles();\n      });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n      return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n      const noDataRow = this._customNoDataRow || this._noDataRow;\n      if (!noDataRow) {\n        return;\n      }\n      const shouldShow = this._rowOutlet.viewContainer.length === 0;\n      if (shouldShow === this._isShowingNoDataRow) {\n        return;\n      }\n      const container = this._noDataRowOutlet.viewContainer;\n      if (shouldShow) {\n        const view = container.createEmbeddedView(noDataRow.templateRef);\n        const rootNode = view.rootNodes[0];\n        // Only add the attributes if we have a single root node since it's hard\n        // to figure out which one to add it to when there are multiple.\n        if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n          rootNode.setAttribute('role', 'row');\n          rootNode.classList.add(noDataRow._contentClassName);\n        }\n      } else {\n        container.clear();\n      }\n      this._isShowingNoDataRow = shouldShow;\n      this._changeDetectorRef.markForCheck();\n    }\n    static ɵfac = function CdkTable_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkTable)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkTable,\n      selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n      contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n          i0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n        }\n      },\n      hostAttrs: [1, \"cdk-table\"],\n      hostVars: 2,\n      hostBindings: function CdkTable_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n        }\n      },\n      inputs: {\n        trackBy: \"trackBy\",\n        dataSource: \"dataSource\",\n        multiTemplateDataRows: [2, \"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute],\n        fixedLayout: [2, \"fixedLayout\", \"fixedLayout\", booleanAttribute]\n      },\n      outputs: {\n        contentChanged: \"contentChanged\"\n      },\n      exportAs: [\"cdkTable\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }])],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 2,\n      consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n      template: function CdkTable_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵtemplate(2, CdkTable_Conditional_2_Template, 1, 0)(3, CdkTable_Conditional_3_Template, 7, 0)(4, CdkTable_Conditional_4_Template, 4, 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n        }\n      },\n      dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return CdkTable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n  const uppercaseSection = section.toUpperCase();\n  let current = outlet.viewContainer.element.nativeElement;\n  while (current) {\n    // 1 is an element node.\n    const nodeName = current.nodeType === 1 ? current.nodeName : null;\n    if (nodeName === uppercaseSection) {\n      return current;\n    } else if (nodeName === 'TABLE') {\n      // Stop traversing past the `table` node.\n      break;\n    }\n    current = current.parentNode;\n  }\n  return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nlet CdkTextColumn = /*#__PURE__*/(() => {\n  class CdkTextColumn {\n    _table = inject(CdkTable, {\n      optional: true\n    });\n    _options = inject(TEXT_COLUMN_OPTIONS, {\n      optional: true\n    });\n    /** Column name that should be used to reference this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._name = name;\n      // With Ivy, inputs can be initialized before static query results are\n      // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n      this._syncColumnDefName();\n    }\n    _name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     */\n    headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     */\n    dataAccessor;\n    /** Alignment of the cell values. */\n    justify = 'start';\n    /** @docs-private */\n    columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * @docs-private\n     */\n    cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * @docs-private\n     */\n    headerCell;\n    constructor() {\n      this._options = this._options || {};\n    }\n    ngOnInit() {\n      this._syncColumnDefName();\n      if (this.headerText === undefined) {\n        this.headerText = this._createDefaultHeaderText();\n      }\n      if (!this.dataAccessor) {\n        this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n      }\n      if (this._table) {\n        // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n        // since the columnDef will not pick up its content by the time the table finishes checking\n        // its content and initializing the rows.\n        this.columnDef.cell = this.cell;\n        this.columnDef.headerCell = this.headerCell;\n        this._table.addColumnDef(this.columnDef);\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getTableTextColumnMissingParentTableError();\n      }\n    }\n    ngOnDestroy() {\n      if (this._table) {\n        this._table.removeColumnDef(this.columnDef);\n      }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n      const name = this.name;\n      if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableTextColumnMissingNameError();\n      }\n      if (this._options && this._options.defaultHeaderTextTransform) {\n        return this._options.defaultHeaderTextTransform(name);\n      }\n      return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n      if (this.columnDef) {\n        this.columnDef.name = this.name;\n      }\n    }\n    static ɵfac = function CdkTextColumn_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkTextColumn)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkTextColumn,\n      selectors: [[\"cdk-text-column\"]],\n      viewQuery: function CdkTextColumn_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkColumnDef, 7);\n          i0.ɵɵviewQuery(CdkCellDef, 7);\n          i0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        }\n      },\n      inputs: {\n        name: \"name\",\n        headerText: \"headerText\",\n        dataAccessor: \"dataAccessor\",\n        justify: \"justify\"\n      },\n      decls: 3,\n      vars: 0,\n      consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n      template: function CdkTextColumn_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainerStart(0, 0);\n          i0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n          i0.ɵɵelementContainerEnd();\n        }\n      },\n      dependencies: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n      encapsulation: 2\n    });\n  }\n  return CdkTextColumn;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\nlet CdkTableModule = /*#__PURE__*/(() => {\n  class CdkTableModule {\n    static ɵfac = function CdkTableModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkTableModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkTableModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ScrollingModule]\n    });\n  }\n  return CdkTableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    _sticky = false;\n    /** Whether the sticky input has changed since it was last checked. */\n    _hasStickyChanged = false;\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    constructor(...args) {\n      super(...args);\n    }\n  };\n}\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, ChangeDetectionStrategy, ViewEncapsulation, Component, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CDK_TABLE, _CoalescedStyleScheduler, _COALESCED_STYLE_SCHEDULER, STICKY_POSITIONING_LISTENER, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction MatTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 2);\n    i0.ɵɵelementContainer(3, 3)(4, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 3)(2, 4)(3, 5);\n  }\n}\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nlet MatRecycleRows = /*#__PURE__*/(() => {\n  class MatRecycleRows {\n    static ɵfac = function MatRecycleRows_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatRecycleRows)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRecycleRows,\n      selectors: [[\"mat-table\", \"recycleRows\", \"\"], [\"table\", \"mat-table\", \"\", \"recycleRows\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }])]\n    });\n  }\n  return MatRecycleRows;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTable = /*#__PURE__*/(() => {\n  class MatTable extends CdkTable {\n    /** Overrides the sticky CSS class set by the `CdkTable`. */\n    stickyCssClass = 'mat-mdc-table-sticky';\n    /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n    needsPositionStickyOnElement = false;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTable_BaseFactory;\n      return function MatTable_Factory(__ngFactoryType__) {\n        return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = i0.ɵɵgetInheritedFactory(MatTable)))(__ngFactoryType__ || MatTable);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTable,\n      selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-table\", \"mdc-data-table__table\"],\n      hostVars: 2,\n      hostBindings: function MatTable_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mdc-table-fixed-layout\", ctx.fixedLayout);\n        }\n      },\n      exportAs: [\"matTable\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkTable,\n        useExisting: MatTable\n      }, {\n        provide: CDK_TABLE,\n        useExisting: MatTable\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n      //  is only included in the build if used.\n      {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 2,\n      consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"role\", \"rowgroup\", 1, \"mdc-data-table__content\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n      template: function MatTable_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵtemplate(2, MatTable_Conditional_2_Template, 1, 0)(3, MatTable_Conditional_3_Template, 7, 0)(4, MatTable_Conditional_4_Template, 4, 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n        }\n      },\n      dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-sys-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-sys-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-sys-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-sys-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mdc-data-table__row:last-child>.mat-mdc-header-cell{border-bottom:none}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child>.mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return MatTable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nlet MatCellDef = /*#__PURE__*/(() => {\n  class MatCellDef extends CdkCellDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCellDef_BaseFactory;\n      return function MatCellDef_Factory(__ngFactoryType__) {\n        return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatCellDef)))(__ngFactoryType__ || MatCellDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCellDef,\n      selectors: [[\"\", \"matCellDef\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nlet MatHeaderCellDef = /*#__PURE__*/(() => {\n  class MatHeaderCellDef extends CdkHeaderCellDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderCellDef_BaseFactory;\n      return function MatHeaderCellDef_Factory(__ngFactoryType__) {\n        return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(__ngFactoryType__ || MatHeaderCellDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderCellDef,\n      selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatHeaderCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nlet MatFooterCellDef = /*#__PURE__*/(() => {\n  class MatFooterCellDef extends CdkFooterCellDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterCellDef_BaseFactory;\n      return function MatFooterCellDef_Factory(__ngFactoryType__) {\n        return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCellDef)))(__ngFactoryType__ || MatFooterCellDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterCellDef,\n      selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatFooterCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nlet MatColumnDef = /*#__PURE__*/(() => {\n  class MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n      super._updateColumnCssClassName();\n      this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatColumnDef_BaseFactory;\n      return function MatColumnDef_Factory(__ngFactoryType__) {\n        return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatColumnDef)))(__ngFactoryType__ || MatColumnDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatColumnDef,\n      selectors: [[\"\", \"matColumnDef\", \"\"]],\n      inputs: {\n        name: [0, \"matColumnDef\", \"name\"]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }, {\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: MatColumnDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatColumnDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header cell template container that adds the right classes and role. */\nlet MatHeaderCell = /*#__PURE__*/(() => {\n  class MatHeaderCell extends CdkHeaderCell {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderCell_BaseFactory;\n      return function MatHeaderCell_Factory(__ngFactoryType__) {\n        return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCell)))(__ngFactoryType__ || MatHeaderCell);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderCell,\n      selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n      hostAttrs: [\"role\", \"columnheader\", 1, \"mat-mdc-header-cell\", \"mdc-data-table__header-cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatHeaderCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer cell template container that adds the right classes and role. */\nlet MatFooterCell = /*#__PURE__*/(() => {\n  class MatFooterCell extends CdkFooterCell {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterCell_BaseFactory;\n      return function MatFooterCell_Factory(__ngFactoryType__) {\n        return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCell)))(__ngFactoryType__ || MatFooterCell);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterCell,\n      selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-footer-cell\", \"mdc-data-table__cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatFooterCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Cell template container that adds the right classes and role. */\nlet MatCell = /*#__PURE__*/(() => {\n  class MatCell extends CdkCell {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCell_BaseFactory;\n      return function MatCell_Factory(__ngFactoryType__) {\n        return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatCell)))(__ngFactoryType__ || MatCell);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCell,\n      selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-cell\", \"mdc-data-table__cell\"],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nlet MatHeaderRowDef = /*#__PURE__*/(() => {\n  class MatHeaderRowDef extends CdkHeaderRowDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderRowDef_BaseFactory;\n      return function MatHeaderRowDef_Factory(__ngFactoryType__) {\n        return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(__ngFactoryType__ || MatHeaderRowDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatHeaderRowDef,\n      selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"matHeaderRowDef\", \"columns\"],\n        sticky: [2, \"matHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatHeaderRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nlet MatFooterRowDef = /*#__PURE__*/(() => {\n  class MatFooterRowDef extends CdkFooterRowDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterRowDef_BaseFactory;\n      return function MatFooterRowDef_Factory(__ngFactoryType__) {\n        return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRowDef)))(__ngFactoryType__ || MatFooterRowDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatFooterRowDef,\n      selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"matFooterRowDef\", \"columns\"],\n        sticky: [2, \"matFooterRowDefSticky\", \"sticky\", booleanAttribute]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatFooterRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nlet MatRowDef = /*#__PURE__*/(() => {\n  class MatRowDef extends CdkRowDef {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatRowDef_BaseFactory;\n      return function MatRowDef_Factory(__ngFactoryType__) {\n        return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatRowDef)))(__ngFactoryType__ || MatRowDef);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatRowDef,\n      selectors: [[\"\", \"matRowDef\", \"\"]],\n      inputs: {\n        columns: [0, \"matRowDefColumns\", \"columns\"],\n        when: [0, \"matRowDefWhen\", \"when\"]\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nlet MatHeaderRow = /*#__PURE__*/(() => {\n  class MatHeaderRow extends CdkHeaderRow {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatHeaderRow_BaseFactory;\n      return function MatHeaderRow_Factory(__ngFactoryType__) {\n        return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRow)))(__ngFactoryType__ || MatHeaderRow);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatHeaderRow,\n      selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-header-row\", \"mdc-data-table__header-row\"],\n      exportAs: [\"matHeaderRow\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }]), i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatHeaderRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return MatHeaderRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nlet MatFooterRow = /*#__PURE__*/(() => {\n  class MatFooterRow extends CdkFooterRow {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatFooterRow_BaseFactory;\n      return function MatFooterRow_Factory(__ngFactoryType__) {\n        return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRow)))(__ngFactoryType__ || MatFooterRow);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatFooterRow,\n      selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-footer-row\", \"mdc-data-table__row\"],\n      exportAs: [\"matFooterRow\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }]), i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatFooterRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return MatFooterRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nlet MatRow = /*#__PURE__*/(() => {\n  class MatRow extends CdkRow {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatRow_BaseFactory;\n      return function MatRow_Factory(__ngFactoryType__) {\n        return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatRow)))(__ngFactoryType__ || MatRow);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatRow,\n      selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n      hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-row\", \"mdc-data-table__row\"],\n      exportAs: [\"matRow\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkRow,\n        useExisting: MatRow\n      }]), i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkCellOutlet\", \"\"]],\n      template: function MatRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 0);\n        }\n      },\n      dependencies: [CdkCellOutlet],\n      encapsulation: 2\n    });\n  }\n  return MatRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nlet MatNoDataRow = /*#__PURE__*/(() => {\n  class MatNoDataRow extends CdkNoDataRow {\n    _contentClassName = 'mat-mdc-no-data-row';\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatNoDataRow_BaseFactory;\n      return function MatNoDataRow_Factory(__ngFactoryType__) {\n        return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatNoDataRow)))(__ngFactoryType__ || MatNoDataRow);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatNoDataRow,\n      selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkNoDataRow,\n        useExisting: MatNoDataRow\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatNoDataRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nlet MatTextColumn = /*#__PURE__*/(() => {\n  class MatTextColumn extends CdkTextColumn {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatTextColumn_BaseFactory;\n      return function MatTextColumn_Factory(__ngFactoryType__) {\n        return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = i0.ɵɵgetInheritedFactory(MatTextColumn)))(__ngFactoryType__ || MatTextColumn);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTextColumn,\n      selectors: [[\"mat-text-column\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 3,\n      vars: 0,\n      consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n      template: function MatTextColumn_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainerStart(0, 0);\n          i0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n          i0.ɵɵelementContainerEnd();\n        }\n      },\n      dependencies: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n      encapsulation: 2\n    });\n  }\n  return MatTextColumn;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EXPORTED_DECLARATIONS = [\n// Table\nMatTable, MatRecycleRows,\n// Template defs\nMatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef,\n// Cell directives\nMatHeaderCell, MatCell, MatFooterCell,\n// Row directives\nMatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];\nlet MatTableModule = /*#__PURE__*/(() => {\n  class MatTableModule {\n    static ɵfac = function MatTableModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatTableModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTableModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CdkTableModule, MatCommonModule]\n    });\n  }\n  return MatTableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n  /** Stream that emits when a new data array is set on the data source. */\n  _data;\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  _renderData = /*#__PURE__*/new BehaviorSubject([]);\n  /** Stream that emits when a new filter string is set on the data source. */\n  _filter = /*#__PURE__*/new BehaviorSubject('');\n  /** Used to react to internal changes of the paginator that are made by the data source itself. */\n  _internalPageChanges = /*#__PURE__*/new Subject();\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription = null;\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData;\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() {\n    return this._data.value;\n  }\n  set data(data) {\n    data = Array.isArray(data) ? data : [];\n    this._data.next(data);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter() {\n    return this._filter.value;\n  }\n  set filter(filter) {\n    this._filter.next(filter);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort() {\n    return this._sort;\n  }\n  set sort(sort) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  _sort;\n  /**\n   * Instance of the paginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the paginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator() {\n    return this._paginator;\n  }\n  set paginator(paginator) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  _paginator;\n  /**\n   * Data accessor function that is used for accessing data properties for sorting through\n   * the default sortData function.\n   * This default function assumes that the sort header IDs (which defaults to the column name)\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n   * May be set to a custom function for different behavior.\n   * @param data Data object that is being accessed.\n   * @param sortHeaderId The name of the column that represents the data.\n   */\n  sortingDataAccessor = (data, sortHeaderId) => {\n    const value = data[sortHeaderId];\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we leave them as strings.\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n    return value;\n  };\n  /**\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n   * By default, the function retrieves the active sort and its direction and compares data\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n   * of data ordering.\n   * @param data The array of data that should be sorted.\n   * @param sort The connected MatSort that holds the current sort state.\n   */\n  sortData = (data, sort) => {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!active || direction == '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n      // If there are data in the column that can be converted to a number,\n      // it must be ensured that the rest of the data\n      // is of the same type so as not to order incorrectly.\n      const valueAType = typeof valueA;\n      const valueBType = typeof valueB;\n      if (valueAType !== valueBType) {\n        if (valueAType === 'number') {\n          valueA += '';\n        }\n        if (valueBType === 'number') {\n          valueB += '';\n        }\n      }\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n      // one value exists while the other doesn't. In this case, existing value should come last.\n      // This avoids inconsistent results when comparing values to undefined/null.\n      // If neither value exists, return 0 (equal).\n      let comparatorResult = 0;\n      if (valueA != null && valueB != null) {\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  };\n  /**\n   * Checks if a data object matches the data source's filter string. By default, each data object\n   * is converted to a string of its properties and returns true if the filter has\n   * at least one occurrence in that string. By default, the filter string has its whitespace\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n   * filter matching.\n   * @param data Data object used to check against the filter.\n   * @param filter Filter string that has been set on the data source.\n   * @returns Whether the filter matches against the data\n   */\n  filterPredicate = (data, filter) => {\n    // Transform the filter by converting it to lowercase and removing whitespace.\n    const transformedFilter = filter.trim().toLowerCase();\n    // Loops over the values in the array and returns true if any of them match the filter string\n    return Object.values(data).some(value => `${value}`.toLowerCase().includes(transformedFilter));\n  };\n  constructor(initialData = []) {\n    super();\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n    const pageChange = this._paginator ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : of(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterPredicate function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterPredicate.\n    // May be overridden for customization.\n    this.filteredData = this.filter == null || this.filter === '' ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n    return this.filteredData;\n  }\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data) {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) {\n      return data;\n    }\n    return this.sortData(data.slice(), this.sort);\n  }\n  /**\n   * Returns a paged slice of the provided data array according to the provided paginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data) {\n    if (!this.paginator) {\n      return data;\n    }\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n      if (!paginator) {\n        return;\n      }\n      paginator.length = filteredDataLength;\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n    return this._renderData;\n  }\n  /**\n   * Used by the MatTable. Called when it disconnects from the data source.\n   * @docs-private\n   */\n  disconnect() {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n}\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n","export enum EBattleStatsColumns {\n  Id = '№',\n  Name = 'name',\n  Tank = 'tank',\n  Team = 'team',\n  Level = 'level',\n  Kills = 'kills',\n  Deaths = 'deaths',\n  Date = 'date',\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { IUnitStats } from '../../../common/resources/interfaces/tank.interface';\nimport { EBattleStatsColumns } from '../enums/user-statistics.enum';\n\n@Pipe({\n  name: 'mapBattle',\n})\nexport class MapBattlePipe implements PipeTransform {\n\n  transform(\n    unit: IUnitStats,\n    column: EBattleStatsColumns,\n  ): Partial< { value: string | number; body: string; head: string }> {\n    switch (column) {\n      case EBattleStatsColumns.Tank:\n        return {\n          body: unit.hull.path,\n          head: unit.turret.path,\n        };\n      case EBattleStatsColumns.Name:\n        return { value: unit.name };\n      case EBattleStatsColumns.Team:\n        return { value: unit.team };\n      case EBattleStatsColumns.Level:\n        return { value: unit.level };\n      case EBattleStatsColumns.Kills:\n        return { value: unit.kills };\n      case EBattleStatsColumns.Deaths:\n        return { value: unit.deaths };\n      case EBattleStatsColumns.Date:\n        return { value: unit.date };\n      default:\n        return { value: '' };\n    }\n  }\n\n}\n","import { DatePipe, NgClass, NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  ElementRef,\n  inject,\n  Injector,\n  input,\n  Renderer2,\n  signal, viewChildren,\n} from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { NgScrollbar } from 'ngx-scrollbar';\n\nimport { IDemoBattle } from '../../../../common/resources/interfaces/game.interface';\nimport { IBreakPointState } from '../../../../shared/services/breakpoint/breakpoint.interface';\nimport { BreakpointService } from '../../../../shared/services/breakpoint/breakpoint.service';\nimport { EBattleStatsColumns } from '../../enums/user-statistics.enum';\nimport { MapBattlePipe } from '../../pipes/map-battle.pipe';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-battles-table',\n  imports: [\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MapBattlePipe,\n    NgOptimizedImage,\n    DatePipe,\n    NgClass,\n    NgScrollbar,\n  ],\n  templateUrl: './battles-table.component.html',\n  styleUrl: './battles-table.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BattlesTableComponent {\n\n  private readonly breakpointService = inject(BreakpointService);\n  private readonly renderer = inject(Renderer2);\n  private readonly injector = inject(Injector);\n\n  expandedEl = viewChildren<ElementRef<HTMLElement>>('expandedEl');\n\n  breakpoint = toSignal<IBreakPointState>(\n    this.breakpointService.adjustedBreakPointObserver$, { injector: this.injector },\n  );\n\n  isLargeScreen = computed<boolean>(\n    () => this.breakpoint().laptop || this.breakpoint().desktop || this.breakpoint().desktopFHD,\n  );\n\n  battles = input.required<IDemoBattle[]>();\n\n  readonly eBattleStatsColumns = EBattleStatsColumns;\n\n  readonly columnsToDisplay: EBattleStatsColumns[] = [\n    EBattleStatsColumns.Id,\n    EBattleStatsColumns.Name,\n    EBattleStatsColumns.Tank,\n    EBattleStatsColumns.Team,\n    EBattleStatsColumns.Level,\n    EBattleStatsColumns.Kills,\n    EBattleStatsColumns.Deaths,\n    EBattleStatsColumns.Date,\n  ];\n\n  columnsToDisplayWithExpand: string[] = [...this.columnsToDisplay, 'expand'];\n\n  expandedElement = signal<IDemoBattle | null>(null);\n\n  public toggle(element: IDemoBattle, index: number): void {\n    this.expandedElement.set(this.expandedElement()?.id === element.id ? null : element);\n    this.expandedEl().forEach((elRef: ElementRef<HTMLElement>, i: number) => {\n      const el = elRef.nativeElement;\n      if (index === i && this.expandedElement()?.id === element.id) {\n        this.renderer.setStyle(el, 'height', `${el.scrollHeight}px`);\n      } else {\n        this.renderer.setStyle(el, 'height', `0px`);\n      }\n    });\n  }\n}\n","<ng-scrollbar class=\"scrollbar-v\" thumbClass=\"thumb-v\" trackClass=\"track-v\">\n  <table\n    mat-table\n    multiTemplateDataRows\n    class=\"battles-table mat-elevation-z8\"\n    [dataSource]=\"battles()\">\n\n    @for (column of columnsToDisplay; track $index) {\n      <ng-container [matColumnDef]=\"column\">\n        <th\n          mat-header-cell\n          [ngClass]=\"{\n              'column': true,\n              'column-head': true,\n              'hidden-column':\n              (column === eBattleStatsColumns.Date || column === eBattleStatsColumns.Id) && !isLargeScreen()\n            }\"\n          *matHeaderCellDef>\n          <span class=\"value\">{{ column }}</span>\n        </th>\n        <td\n          mat-cell\n          [ngClass]=\"{\n              'column': true,\n              'name-column': column === eBattleStatsColumns.Name,\n              'hidden-column':\n              (column === eBattleStatsColumns.Date || column === eBattleStatsColumns.Id) && !isLargeScreen()\n            }\"\n          *matCellDef=\"let element; let i = dataIndex\">\n          @switch (column) {\n            @case (eBattleStatsColumns.Id) {\n              <span class=\"index\">{{ i + 1 }}</span>\n            }\n            @case (eBattleStatsColumns.Tank) {\n              @let src = (element.player | mapBattle : column);\n              <div class=\"tank-icon\">\n                <img fill [ngSrc]=\"src.body\" alt=\"body\"/>\n                <img fill [ngSrc]=\"src.head\" alt=\"head\"/>\n              </div>\n            }\n            @case (eBattleStatsColumns.Date) {\n              <span class=\"value date-value\">\n                {{ (element.player | mapBattle : column).value | date : 'yyyy-MM-dd/hh:mm a' }}\n              </span>\n            }\n            @default {\n              <span class=\"value\">{{ (element.player | mapBattle : column).value }}</span>\n            }\n          }\n        </td>\n      </ng-container>\n    }\n\n    <ng-container matColumnDef=\"expand\">\n      <th mat-header-cell class=\"column column-head\" aria-label=\"row actions\" *matHeaderCellDef></th>\n      <td mat-cell class=\"column btn-column\" *matCellDef=\"let element; let i = dataIndex\">\n\n        <button\n          mat-mini-fab\n          type=\"button\"\n          aria-label=\"expand row\"\n          [ngClass]=\"{\n          'table-btn': true,\n          'table-toggle-btn': true,\n          'table-toggle-btn-expanded': expandedElement()?.id === element.id\n        }\"\n          (click)=\"toggle(element, i); $event.stopPropagation()\">\n          <mat-icon>keyboard_arrow_down</mat-icon>\n        </button>\n\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplayWithExpand.length\">\n        <div #expandedEl class=\"battle-details-wrapper\">\n\n          <table\n            mat-table\n            class=\"battles-table inner-table mat-elevation-z8\"\n            [dataSource]=\"element.bots\">\n\n            @for (column of columnsToDisplay; track $index) {\n              <ng-container [matColumnDef]=\"column\">\n                <th mat-header-cell *matHeaderCellDef></th>\n                <td\n                  mat-cell\n                  [ngClass]=\"{\n                      'column': true,\n                      'inner-column': true,\n                      'name-column': column === eBattleStatsColumns.Name,\n                      'hidden-column':\n                        (column === eBattleStatsColumns.Date || column === eBattleStatsColumns.Id) && !isLargeScreen()\n                    }\"\n                  *matCellDef=\"let subElement\">\n                  @switch (column) {\n                    @case (eBattleStatsColumns.Id) {\n                      <div class=\"stub\"></div>\n                    }\n                    @case (eBattleStatsColumns.Tank) {\n                      @let src = (subElement | mapBattle : column);\n                      <div class=\"tank-icon\">\n                        <img fill [ngSrc]=\"src.body\" alt=\"body\"/>\n                        <img fill [ngSrc]=\"src.head\" alt=\"head\"/>\n                      </div>\n                    }\n                    @case (eBattleStatsColumns.Date) {\n                      <span class=\"value inner-date-value\">\n                        {{ (element.player | mapBattle : column).value | date : 'yyyy-MM-dd/hh:mm a' }}\n                      </span>\n                    }\n                    @default {\n                      <span class=\"value\">{{ (subElement | mapBattle : column).value }}</span>\n                    }\n                  }\n                </td>\n              </ng-container>\n            }\n\n            <ng-container matColumnDef=\"expand\">\n              <th mat-header-cell class=\"column column-head\" aria-label=\"row actions\" *matHeaderCellDef></th>\n              <td mat-cell class=\"column btn-column inner-column\" *matCellDef=\"let element\">\n                <div class=\"stub\"></div>\n              </td>\n            </ng-container>\n\n            <tr mat-row *matRowDef=\"let row; columns: columnsToDisplayWithExpand;\"></tr>\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplayWithExpand\"></tr>\n          </table>\n\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplayWithExpand; sticky: true\"></tr>\n    <tr\n      mat-row\n      class=\"table-element-row\"\n      *matRowDef=\"let element; columns: columnsToDisplayWithExpand;\">\n    </tr>\n    <tr mat-row class=\"detail-row\" *matRowDef=\"let row; columns: ['expandedDetail']\"></tr>\n  </table>\n</ng-scrollbar>\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, booleanAttribute, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, TemplateRef, ApplicationRef, Injector, ViewContainerRef, Directive, QueryList, EventEmitter, ANIMATION_MODULE_TYPE, afterNextRender, Output, ContentChild, ContentChildren, ViewChild, NgZone, Renderer2, NgModule } from '@angular/core';\nimport { FocusMonitor, _IdGenerator, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { startWith, switchMap, takeUntil, take, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _StructuralStylesLoader } from './structural-styles-B2ekkpE5.mjs';\nimport { MatRipple } from './ripple-BPguEKwi.mjs';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { _bindEventWithOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport { MatRippleModule } from './index-eRSoE0yr.mjs';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [[[\"mat-icon\"], [\"\", \"matMenuItemIcon\", \"\"]], \"*\"];\nconst _c2 = [\"mat-icon, [matMenuItemIcon]\", \"*\"];\nfunction MatMenuItem_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"polygon\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closed.emit(\"click\"));\n    })(\"animationstart\", function MatMenu_ng_template_0_Template_div_animationstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationStart($event.animationName));\n    })(\"animationend\", function MatMenu_ng_template_0_Template_div_animationend_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event.animationName));\n    })(\"animationcancel\", function MatMenu_ng_template_0_Template_div_animationcancel_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event.animationName));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-menu-panel-animations-disabled\", ctx_r1._animationsDisabled)(\"mat-menu-panel-exit-animation\", ctx_r1._panelAnimationState === \"void\")(\"mat-menu-panel-animating\", ctx_r1._isAnimating);\n    i0.ɵɵproperty(\"id\", ctx_r1.panelId);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1.ariaLabelledby || null)(\"aria-describedby\", ctx_r1.ariaDescribedby || null);\n  }\n}\nconst MAT_MENU_PANEL = /*#__PURE__*/new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nlet MatMenuItem = /*#__PURE__*/(() => {\n  class MatMenuItem {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    _focusMonitor = inject(FocusMonitor);\n    _parentMenu = inject(MAT_MENU_PANEL, {\n      optional: true\n    });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    /** ARIA role for the menu item. */\n    role = 'menuitem';\n    /** Whether the menu item is disabled. */\n    disabled = false;\n    /** Whether ripples are disabled on the menu item. */\n    disableRipple = false;\n    /** Stream that emits when the menu item is hovered. */\n    _hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n    _focused = new Subject();\n    /** Whether the menu item is highlighted. */\n    _highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    _triggersSubmenu = false;\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      this._parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n      } else {\n        this._getHostElement().focus(options);\n      }\n      this._focused.next(this);\n    }\n    ngAfterViewInit() {\n      if (this._focusMonitor) {\n        // Start monitoring the element, so it gets the appropriate focused classes. We want\n        // to show the focus style for menu items only when the focus was not caused by a\n        // mouse or touch interaction.\n        this._focusMonitor.monitor(this._elementRef, false);\n      }\n    }\n    ngOnDestroy() {\n      if (this._focusMonitor) {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n      }\n      if (this._parentMenu && this._parentMenu.removeItem) {\n        this._parentMenu.removeItem(this);\n      }\n      this._hovered.complete();\n      this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n      return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n      this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      const clone = this._elementRef.nativeElement.cloneNode(true);\n      const icons = clone.querySelectorAll('mat-icon, .material-icons');\n      // Strip away icons, so they don't show up in the text.\n      for (let i = 0; i < icons.length; i++) {\n        icons[i].remove();\n      }\n      return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n      // We need to mark this for check for the case where the content is coming from a\n      // `matMenuContent` whose change detection tree is at the declaration position,\n      // not the insertion position. See #23175.\n      this._highlighted = isHighlighted;\n      this._changeDetectorRef.markForCheck();\n    }\n    _setTriggersSubmenu(triggersSubmenu) {\n      this._triggersSubmenu = triggersSubmenu;\n      this._changeDetectorRef.markForCheck();\n    }\n    _hasFocus() {\n      return this._document && this._document.activeElement === this._getHostElement();\n    }\n    static ɵfac = function MatMenuItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuItem)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMenuItem,\n      selectors: [[\"\", \"mat-menu-item\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-menu-item\", \"mat-focus-indicator\"],\n      hostVars: 8,\n      hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n            return ctx._checkDisabled($event);\n          })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n            return ctx._handleMouseEnter();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx.disabled || null);\n          i0.ɵɵclassProp(\"mat-mdc-menu-item-highlighted\", ctx._highlighted)(\"mat-mdc-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n        }\n      },\n      inputs: {\n        role: \"role\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      exportAs: [\"matMenuItem\"],\n      attrs: _c0,\n      ngContentSelectors: _c2,\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"mat-mdc-menu-item-text\"], [\"matRipple\", \"\", 1, \"mat-mdc-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n      template: function MatMenuItem_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"span\", 0);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"div\", 1);\n          i0.ɵɵtemplate(4, MatMenuItem_Conditional_4_Template, 2, 0, \":svg:svg\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._triggersSubmenu ? 4 : -1);\n        }\n      },\n      dependencies: [MatRipple],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatMenuItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = /*#__PURE__*/new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nlet MatMenuContent = /*#__PURE__*/(() => {\n  class MatMenuContent {\n    _template = inject(TemplateRef);\n    _appRef = inject(ApplicationRef);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _document = inject(DOCUMENT);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _portal;\n    _outlet;\n    /** Emits when the menu content has been attached. */\n    _attached = new Subject();\n    constructor() {}\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n      if (!this._portal) {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n      }\n      this.detach();\n      if (!this._outlet) {\n        this._outlet = new DomPortalOutlet(this._document.createElement('div'), null, this._appRef, this._injector);\n      }\n      const element = this._template.elementRef.nativeElement;\n      // Because we support opening the same menu from different triggers (which in turn have their\n      // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n      // risk it staying attached to a pane that's no longer in the DOM.\n      element.parentNode.insertBefore(this._outlet.outletElement, element);\n      // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n      // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n      // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n      // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n      // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n      this._changeDetectorRef.markForCheck();\n      this._portal.attach(this._outlet, context);\n      this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n      if (this._portal?.isAttached) {\n        this._portal.detach();\n      }\n    }\n    ngOnDestroy() {\n      this.detach();\n      this._outlet?.dispose();\n    }\n    static ɵfac = function MatMenuContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuContent)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatMenuContent,\n      selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }])]\n    });\n  }\n  return MatMenuContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/** Name of the enter animation `@keyframes`. */\nconst ENTER_ANIMATION = '_mat-menu-enter';\n/** Name of the exit animation `@keyframes`. */\nconst EXIT_ANIMATION = '_mat-menu-exit';\nlet MatMenu = /*#__PURE__*/(() => {\n  class MatMenu {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _injector = inject(Injector);\n    _keyManager;\n    _xPosition;\n    _yPosition;\n    _firstItemFocusRef;\n    _exitFallbackTimeout;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled;\n    /** All items inside the menu. Includes items nested inside another menu. */\n    _allItems;\n    /** Only the direct descendant menu items. */\n    _directDescendantItems = new QueryList();\n    /** Classes to be applied to the menu panel. */\n    _classList = {};\n    /** Current state of the panel animation. */\n    _panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n    _animationDone = new Subject();\n    /** Whether the menu is animating. */\n    _isAnimating = false;\n    /** Parent menu of the current menu panel. */\n    parentMenu;\n    /** Layout direction of the menu. */\n    direction;\n    /** Class or list of classes to be added to the overlay panel. */\n    overlayPanelClass;\n    /** Class to be added to the backdrop element. */\n    backdropClass;\n    /** aria-label for the menu panel. */\n    ariaLabel;\n    /** aria-labelledby for the menu panel. */\n    ariaLabelledby;\n    /** aria-describedby for the menu panel. */\n    ariaDescribedby;\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n      return this._xPosition;\n    }\n    set xPosition(value) {\n      if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionX();\n      }\n      this._xPosition = value;\n      this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n      return this._yPosition;\n    }\n    set yPosition(value) {\n      if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuInvalidPositionY();\n      }\n      this._yPosition = value;\n      this.setPositionClasses();\n    }\n    /** @docs-private */\n    templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    items;\n    /**\n     * Menu content that will be rendered lazily.\n     * @docs-private\n     */\n    lazyContent;\n    /** Whether the menu should overlap its trigger. */\n    overlapTrigger;\n    /** Whether the menu has a backdrop. */\n    hasBackdrop;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n      const previousPanelClass = this._previousPanelClass;\n      const newClassList = {\n        ...this._classList\n      };\n      if (previousPanelClass && previousPanelClass.length) {\n        previousPanelClass.split(' ').forEach(className => {\n          newClassList[className] = false;\n        });\n      }\n      this._previousPanelClass = classes;\n      if (classes && classes.length) {\n        classes.split(' ').forEach(className => {\n          newClassList[className] = true;\n        });\n        this._elementRef.nativeElement.className = '';\n      }\n      this._classList = newClassList;\n    }\n    _previousPanelClass;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n      return this.panelClass;\n    }\n    set classList(classes) {\n      this.panelClass = classes;\n    }\n    /** Event emitted when the menu is closed. */\n    closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n    close = this.closed;\n    panelId = inject(_IdGenerator).getId('mat-menu-panel-');\n    constructor() {\n      const defaultOptions = inject(MAT_MENU_DEFAULT_OPTIONS);\n      this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n      this._xPosition = defaultOptions.xPosition;\n      this._yPosition = defaultOptions.yPosition;\n      this.backdropClass = defaultOptions.backdropClass;\n      this.overlapTrigger = defaultOptions.overlapTrigger;\n      this.hasBackdrop = defaultOptions.hasBackdrop;\n      this._animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      }) === 'NoopAnimations';\n    }\n    ngOnInit() {\n      this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n      this._updateDirectDescendants();\n      this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n      this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n      // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n      // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n      // is internal and we know that it gets completed on destroy.\n      this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n      this._directDescendantItems.changes.subscribe(itemsList => {\n        // Move focus to another item, if the active item is removed from the list.\n        // We need to debounce the callback, because multiple items might be removed\n        // in quick succession.\n        const manager = this._keyManager;\n        if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n          const items = itemsList.toArray();\n          const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n          if (items[index] && !items[index].disabled) {\n            manager.setActiveItem(index);\n          } else {\n            manager.setNextItemActive();\n          }\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._directDescendantItems.destroy();\n      this.closed.complete();\n      this._firstItemFocusRef?.destroy();\n      clearTimeout(this._exitFallbackTimeout);\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n      // Coerce the `changes` property because Angular types it as `Observable<any>`\n      const itemChanges = this._directDescendantItems.changes;\n      return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) {}\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) {}\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      const manager = this._keyManager;\n      switch (keyCode) {\n        case ESCAPE:\n          if (!hasModifierKey(event)) {\n            event.preventDefault();\n            this.closed.emit('keydown');\n          }\n          break;\n        case LEFT_ARROW:\n          if (this.parentMenu && this.direction === 'ltr') {\n            this.closed.emit('keydown');\n          }\n          break;\n        case RIGHT_ARROW:\n          if (this.parentMenu && this.direction === 'rtl') {\n            this.closed.emit('keydown');\n          }\n          break;\n        default:\n          if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n            manager.setFocusOrigin('keyboard');\n          }\n          manager.onKeydown(event);\n          return;\n      }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n      // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n      this._firstItemFocusRef?.destroy();\n      this._firstItemFocusRef = afterNextRender(() => {\n        const menuPanel = this._resolvePanel();\n        // If an item in the menuPanel is already focused, avoid overriding the focus.\n        if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n          const manager = this._keyManager;\n          manager.setFocusOrigin(origin).setFirstItemActive();\n          // If there's no active item at this point, it means that all the items are disabled.\n          // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n          // give _some_ feedback to screen readers.\n          if (!manager.activeItem && menuPanel) {\n            menuPanel.focus();\n          }\n        }\n      }, {\n        injector: this._injector\n      });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n      this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * @deprecated No longer used and will be removed.\n     * @breaking-change 21.0.0\n     */\n    setElevation(_depth) {}\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n      this._classList = {\n        ...this._classList,\n        ['mat-menu-before']: posX === 'before',\n        ['mat-menu-after']: posX === 'after',\n        ['mat-menu-above']: posY === 'above',\n        ['mat-menu-below']: posY === 'below'\n      };\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(state) {\n      const isExit = state === EXIT_ANIMATION;\n      if (isExit || state === ENTER_ANIMATION) {\n        if (isExit) {\n          clearTimeout(this._exitFallbackTimeout);\n          this._exitFallbackTimeout = undefined;\n        }\n        this._animationDone.next(isExit ? 'void' : 'enter');\n        this._isAnimating = false;\n      }\n    }\n    _onAnimationStart(state) {\n      if (state === ENTER_ANIMATION || state === EXIT_ANIMATION) {\n        this._isAnimating = true;\n      }\n    }\n    _setIsOpen(isOpen) {\n      this._panelAnimationState = isOpen ? 'enter' : 'void';\n      if (isOpen) {\n        if (this._keyManager.activeItemIndex === 0) {\n          // Scroll the content element to the top as soon as the animation starts. This is necessary,\n          // because we move focus to the first item while it's still being animated, which can throw\n          // the browser off when it determines the scroll position. Alternatively we can move focus\n          // when the animation is done, however moving focus asynchronously will interrupt screen\n          // readers which are in the process of reading out the menu already. We take the `element`\n          // from the `event` since we can't use a `ViewChild` to access the pane.\n          const menuPanel = this._resolvePanel();\n          if (menuPanel) {\n            menuPanel.scrollTop = 0;\n          }\n        }\n      } else if (!this._animationsDisabled) {\n        // Some apps do `* { animation: none !important; }` in tests which will prevent the\n        // `animationend` event from firing. Since the exit animation is loading-bearing for\n        // removing the content from the DOM, add a fallback timer.\n        this._exitFallbackTimeout = setTimeout(() => this._onAnimationDone(EXIT_ANIMATION), 200);\n      }\n      // Animation events won't fire when animations are disabled so we simulate them.\n      if (this._animationsDisabled) {\n        setTimeout(() => {\n          this._onAnimationDone(isOpen ? ENTER_ANIMATION : EXIT_ANIMATION);\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n      this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n        this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n        this._directDescendantItems.notifyOnChanges();\n      });\n    }\n    /** Gets the menu panel DOM node. */\n    _resolvePanel() {\n      let menuPanel = null;\n      if (this._directDescendantItems.length) {\n        // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n        // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n        // because the panel is inside an `ng-template`. We work around it by starting from one of\n        // the items and walking up the DOM.\n        menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n      }\n      return menuPanel;\n    }\n    static ɵfac = function MatMenu_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenu)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatMenu,\n      selectors: [[\"mat-menu\"]],\n      contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allItems = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      viewQuery: function MatMenu_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        }\n      },\n      hostVars: 3,\n      hostBindings: function MatMenu_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        }\n      },\n      inputs: {\n        backdropClass: \"backdropClass\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n        xPosition: \"xPosition\",\n        yPosition: \"yPosition\",\n        overlapTrigger: [2, \"overlapTrigger\", \"overlapTrigger\", booleanAttribute],\n        hasBackdrop: [2, \"hasBackdrop\", \"hasBackdrop\", value => value == null ? null : booleanAttribute(value)],\n        panelClass: [0, \"class\", \"panelClass\"],\n        classList: \"classList\"\n      },\n      outputs: {\n        closed: \"closed\",\n        close: \"close\"\n      },\n      exportAs: [\"matMenu\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }])],\n      ngContentSelectors: _c3,\n      decls: 1,\n      vars: 0,\n      consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-mdc-menu-panel\", 3, \"click\", \"animationstart\", \"animationend\", \"animationcancel\", \"id\"], [1, \"mat-mdc-menu-content\"]],\n      template: function MatMenu_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 12, \"ng-template\");\n        }\n      },\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatMenu;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-menu-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Mapping between menu panels and the last trigger that opened them. */\nconst PANELS_TO_TRIGGERS = /*#__PURE__*/new WeakMap();\n/** Directive applied to an element that should trigger a `mat-menu`. */\nlet MatMenuTrigger = /*#__PURE__*/(() => {\n  class MatMenuTrigger {\n    _overlay = inject(Overlay);\n    _element = inject(ElementRef);\n    _viewContainerRef = inject(ViewContainerRef);\n    _menuItemInstance = inject(MatMenuItem, {\n      optional: true,\n      self: true\n    });\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _focusMonitor = inject(FocusMonitor);\n    _ngZone = inject(NgZone);\n    _scrollStrategy = inject(MAT_MENU_SCROLL_STRATEGY);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _cleanupTouchstart;\n    _portal;\n    _overlayRef = null;\n    _menuOpen = false;\n    _closingActionsSubscription = Subscription.EMPTY;\n    _hoverSubscription = Subscription.EMPTY;\n    _menuCloseSubscription = Subscription.EMPTY;\n    _pendingRemoval;\n    /**\n     * We're specifically looking for a `MatMenu` here since the generic `MatMenuPanel`\n     * interface lacks some functionality around nested menus and animations.\n     */\n    _parentMaterialMenu;\n    /**\n     * Cached value of the padding of the parent menu panel.\n     * Used to offset sub-menus to compensate for the padding.\n     */\n    _parentInnerPadding;\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    _openedBy = undefined;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n      return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n      this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n      return this._menu;\n    }\n    set menu(menu) {\n      if (menu === this._menu) {\n        return;\n      }\n      this._menu = menu;\n      this._menuCloseSubscription.unsubscribe();\n      if (menu) {\n        if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatMenuRecursiveError();\n        }\n        this._menuCloseSubscription = menu.close.subscribe(reason => {\n          this._destroyMenu(reason);\n          // If a click closed the menu, we should close the entire chain of nested menus.\n          if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n            this._parentMaterialMenu.closed.emit(reason);\n          }\n        });\n      }\n      this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n    }\n    _menu;\n    /** Data to be passed along to any lazily-rendered content. */\n    menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n    menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n    menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    onMenuClose = this.menuClosed;\n    constructor() {\n      const parentMenu = inject(MAT_MENU_PANEL, {\n        optional: true\n      });\n      const renderer = inject(Renderer2);\n      this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n      this._cleanupTouchstart = _bindEventWithOptions(renderer, this._element.nativeElement, 'touchstart', event => {\n        if (!isFakeTouchstartFromScreenReader(event)) {\n          this._openedBy = 'touch';\n        }\n      }, passiveEventListenerOptions);\n    }\n    ngAfterContentInit() {\n      this._handleHover();\n    }\n    ngOnDestroy() {\n      if (this.menu && this._ownsMenu(this.menu)) {\n        PANELS_TO_TRIGGERS.delete(this.menu);\n      }\n      this._cleanupTouchstart();\n      this._pendingRemoval?.unsubscribe();\n      this._menuCloseSubscription.unsubscribe();\n      this._closingActionsSubscription.unsubscribe();\n      this._hoverSubscription.unsubscribe();\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n      }\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n      return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n      return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n      return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n      const menu = this.menu;\n      if (this._menuOpen || !menu) {\n        return;\n      }\n      this._pendingRemoval?.unsubscribe();\n      const previousTrigger = PANELS_TO_TRIGGERS.get(menu);\n      PANELS_TO_TRIGGERS.set(menu, this);\n      // If the same menu is currently attached to another trigger,\n      // we need to close it so it doesn't end up in a broken state.\n      if (previousTrigger && previousTrigger !== this) {\n        previousTrigger.closeMenu();\n      }\n      const overlayRef = this._createOverlay(menu);\n      const overlayConfig = overlayRef.getConfig();\n      const positionStrategy = overlayConfig.positionStrategy;\n      this._setPosition(menu, positionStrategy);\n      overlayConfig.hasBackdrop = menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n      // We need the `hasAttached` check for the case where the user kicked off a removal animation,\n      // but re-entered the menu. Re-attaching the same portal will trigger an error otherwise.\n      if (!overlayRef.hasAttached()) {\n        overlayRef.attach(this._getPortal(menu));\n        menu.lazyContent?.attach(this.menuData);\n      }\n      this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n      menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n      menu.direction = this.dir;\n      menu.focusFirstItem(this._openedBy || 'program');\n      this._setIsMenuOpen(true);\n      if (menu instanceof MatMenu) {\n        menu._setIsOpen(true);\n        menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n          // Re-adjust the position without locking when the amount of items\n          // changes so that the overlay is allowed to pick a new optimal position.\n          positionStrategy.withLockedPosition(false).reapplyLastPosition();\n          positionStrategy.withLockedPosition(true);\n        });\n      }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n      this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n      if (this._focusMonitor && origin) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n      } else {\n        this._element.nativeElement.focus(options);\n      }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n      this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n      const overlayRef = this._overlayRef;\n      const menu = this._menu;\n      if (!overlayRef || !this.menuOpen) {\n        return;\n      }\n      this._closingActionsSubscription.unsubscribe();\n      this._pendingRemoval?.unsubscribe();\n      // Note that we don't wait for the animation to finish if another trigger took\n      // over the menu, because the panel will end up empty which looks glitchy.\n      if (menu instanceof MatMenu && this._ownsMenu(menu)) {\n        this._pendingRemoval = menu._animationDone.pipe(take(1)).subscribe(() => {\n          overlayRef.detach();\n          menu.lazyContent?.detach();\n        });\n        menu._setIsOpen(false);\n      } else {\n        overlayRef.detach();\n        menu?.lazyContent?.detach();\n      }\n      if (menu && this._ownsMenu(menu)) {\n        PANELS_TO_TRIGGERS.delete(menu);\n      }\n      // Always restore focus if the user is navigating using the keyboard or the menu was opened\n      // programmatically. We don't restore for non-root triggers, because it can prevent focus\n      // from making it back to the root trigger when closing a long chain of menus by clicking\n      // on the backdrop.\n      if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n        this.focus(this._openedBy);\n      }\n      this._openedBy = undefined;\n      this._setIsMenuOpen(false);\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n      if (isOpen !== this._menuOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n          this._menuItemInstance._setHighlighted(isOpen);\n        }\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n      if (!this._overlayRef) {\n        const config = this._getOverlayConfig(menu);\n        this._subscribeToPositions(menu, config.positionStrategy);\n        this._overlayRef = this._overlay.create(config);\n        this._overlayRef.keydownEvents().subscribe(event => {\n          if (this.menu instanceof MatMenu) {\n            this.menu._handleKeydown(event);\n          }\n        });\n      }\n      return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n      return new OverlayConfig({\n        positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n        backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n        panelClass: menu.overlayPanelClass,\n        scrollStrategy: this._scrollStrategy(),\n        direction: this._dir || 'ltr'\n      });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n      if (menu.setPositionClasses) {\n        position.positionChanges.subscribe(change => {\n          this._ngZone.run(() => {\n            const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n            const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n            menu.setPositionClasses(posX, posY);\n          });\n        });\n      }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n      let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n      let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n      let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n      let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n      let offsetY = 0;\n      if (this.triggersSubmenu()) {\n        // When the menu is a sub-menu, it should always align itself\n        // to the edges of the trigger, instead of overlapping it.\n        overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n        originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n        if (this._parentMaterialMenu) {\n          if (this._parentInnerPadding == null) {\n            const firstItem = this._parentMaterialMenu.items.first;\n            this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n          }\n          offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n        }\n      } else if (!menu.overlapTrigger) {\n        originY = overlayY === 'top' ? 'bottom' : 'top';\n        originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n      }\n      positionStrategy.withPositions([{\n        originX,\n        originY,\n        overlayX,\n        overlayY,\n        offsetY\n      }, {\n        originX: originFallbackX,\n        originY,\n        overlayX: overlayFallbackX,\n        overlayY,\n        offsetY\n      }, {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }, {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n      const backdrop = this._overlayRef.backdropClick();\n      const detachments = this._overlayRef.detachments();\n      const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n      const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => this._menuOpen && active !== this._menuItemInstance)) : of();\n      return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n      if (!isFakeMousedownFromScreenReader(event)) {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the menu as opened by mouse in those cases.\n        this._openedBy = event.button === 0 ? 'mouse' : undefined;\n        // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the menu item.\n        if (this.triggersSubmenu()) {\n          event.preventDefault();\n        }\n      }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      // Pressing enter on the trigger will trigger the click handler later.\n      if (keyCode === ENTER || keyCode === SPACE) {\n        this._openedBy = 'keyboard';\n      }\n      if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n        this._openedBy = 'keyboard';\n        this.openMenu();\n      }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n      if (this.triggersSubmenu()) {\n        // Stop event propagation to avoid closing the parent menu.\n        event.stopPropagation();\n        this.openMenu();\n      } else {\n        this.toggleMenu();\n      }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      if (this.triggersSubmenu() && this._parentMaterialMenu) {\n        this._hoverSubscription = this._parentMaterialMenu._hovered().subscribe(active => {\n          if (active === this._menuItemInstance && !active.disabled) {\n            this._openedBy = 'mouse';\n            this.openMenu();\n          }\n        });\n      }\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n      // Note that we can avoid this check by keeping the portal on the menu panel.\n      // While it would be cleaner, we'd have to introduce another required method on\n      // `MatMenuPanel`, making it harder to consume.\n      if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n        this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n      }\n      return this._portal;\n    }\n    /**\n     * Determines whether the trigger owns a specific menu panel, at the current point in time.\n     * This allows us to distinguish the case where the same panel is passed into multiple triggers\n     * and multiple are open at a time.\n     */\n    _ownsMenu(menu) {\n      return PANELS_TO_TRIGGERS.get(menu) === this;\n    }\n    static ɵfac = function MatMenuTrigger_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuTrigger)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatMenuTrigger,\n      selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-menu-trigger\"],\n      hostVars: 3,\n      hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n            return ctx._handleClick($event);\n          })(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n            return ctx._handleMousedown($event);\n          })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-haspopup\", ctx.menu ? \"menu\" : null)(\"aria-expanded\", ctx.menuOpen)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n        }\n      },\n      inputs: {\n        _deprecatedMatMenuTriggerFor: [0, \"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n        menu: [0, \"matMenuTriggerFor\", \"menu\"],\n        menuData: [0, \"matMenuTriggerData\", \"menuData\"],\n        restoreFocus: [0, \"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n      },\n      outputs: {\n        menuOpened: \"menuOpened\",\n        onMenuOpen: \"onMenuOpen\",\n        menuClosed: \"menuClosed\",\n        onMenuClose: \"onMenuClose\"\n      },\n      exportAs: [\"matMenuTrigger\"]\n    });\n  }\n  return MatMenuTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatMenuModule = /*#__PURE__*/(() => {\n  class MatMenuModule {\n    static ɵfac = function MatMenuModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatMenuModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatMenuModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n    });\n  }\n  return MatMenuModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matMenuAnimations = {\n  // Represents:\n  // trigger('transformMenu', [\n  //   state(\n  //     'void',\n  //     style({\n  //       opacity: 0,\n  //       transform: 'scale(0.8)',\n  //     }),\n  //   ),\n  //   transition(\n  //     'void => enter',\n  //     animate(\n  //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n  //       style({\n  //         opacity: 1,\n  //         transform: 'scale(1)',\n  //       }),\n  //     ),\n  //   ),\n  //   transition('* => void', animate('100ms 25ms linear', style({opacity: 0}))),\n  // ])\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: {\n    type: 7,\n    name: 'transformMenu',\n    definitions: [{\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 0,\n          transform: 'scale(0.8)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => enter',\n      animation: {\n        type: 4,\n        styles: {\n          type: 6,\n          styles: {\n            opacity: 1,\n            transform: 'scale(1)'\n          },\n          offset: null\n        },\n        timings: '120ms cubic-bezier(0, 0, 0.2, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => void',\n      animation: {\n        type: 4,\n        styles: {\n          type: 6,\n          styles: {\n            opacity: 0\n          },\n          offset: null\n        },\n        timings: '100ms 25ms linear'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('fadeInItems', [\n  //   // TODO(crisbeto): this is inside the `transformMenu`\n  //   // now. Remove next time we do breaking changes.\n  //   state('showing', style({opacity: 1})),\n  //   transition('void => *', [\n  //     style({opacity: 0}),\n  //     animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n  //   ]),\n  // ])\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: {\n    type: 7,\n    name: 'fadeInItems',\n    definitions: [{\n      type: 0,\n      name: 'showing',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 1\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => *',\n      animation: [{\n        type: 6,\n        styles: {\n          opacity: 0\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n","import {\n  ChangeDetectionStrategy,\n  Component, inject,\n  output, signal,\n  viewChild,\n} from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationService } from '../../../../shared/components/validation/validation-service/validation.service';\nimport { IQuantityResult } from '../../../resources/interfaces/game.interface';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-quantity-menu',\n  imports: [\n    InputTextComponent,\n    ReactiveFormsModule,\n    MatButton,\n    MatMiniFabButton,\n    MatIconModule,\n  ],\n  templateUrl: './quantity-menu.component.html',\n  styleUrl: './quantity-menu.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuantityMenuComponent {\n\n  private readonly validationService = inject(ValidationService);\n\n  quantityChange = output<IQuantityResult>();\n  inputText = viewChild(InputTextComponent);\n\n  quantity = signal<string>('1');\n\n  quantityControl = new FormControl<number>(1);\n\n  updateValidators(quantity: number): void {\n    this.quantity.set(quantity.toString());\n    this.quantityControl.setValidators([\n      Validators.required, Validators.min(1), Validators.max(quantity),\n    ]);\n    this.validationService.multipleOf(this.quantityControl);\n    this.quantityControl.updateValueAndValidity();\n    this.quantityControl.patchValue(quantity);\n    this.inputText().cdr.detectChanges();\n  }\n\n  onCancel(): void {\n    this.quantityChange.emit({\n      status: false,\n      quantity: 0,\n    });\n  }\n\n  onSubmit(): void {\n    if (this.quantityControl.valid) {\n      this.quantityChange.emit({\n        status: true,\n        quantity: +this.quantityControl.value,\n      });\n    }\n  }\n}\n","<button mat-button type=\"button\" class=\"mat-text-btn quantity-wrapper\"\n     (click)=\"$event.stopImmediatePropagation()\">\n\n  <button class=\"nav-btn\" mat-mini-fab type=\"button\" (click)=\"onCancel()\">\n    <mat-icon>close</mat-icon>\n  </button>\n\n  <tnm-input-text\n    class=\"quantity-control\"\n    borderColor=\"var(--mat-sys-primary-container)\"\n    inputType=\"number\"\n    [placeholder]=\"quantity()\"\n    [formControl]=\"quantityControl\"\n    [disableErrors]=\"true\"\n    [centered]=\"true\">\n  </tnm-input-text>\n\n  <button class=\"nav-btn\" mat-mini-fab type=\"button\" (click)=\"onSubmit()\">\n    <mat-icon>check</mat-icon>\n  </button>\n</button>\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, input, Renderer2 } from '@angular/core';\n\nimport { IInvention } from '../../../resources/interfaces/tank.interface';\n\n@Component({\n  selector: 'tnm-tank-inventions',\n  imports: [\n    NgOptimizedImage,\n    NgClass,\n  ],\n  templateUrl: './tank-inventions.component.html',\n  styleUrl: './tank-inventions.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankInventionsComponent {\n\n  private readonly renderer = inject(Renderer2);\n\n  inventions = input.required<IInvention[]>();\n\n  onDragEnter(event: DragEvent): void {\n    event.stopImmediatePropagation();\n    const el = event.target as HTMLDivElement;\n    this.renderer.setStyle(el, 'border-width', '3px');\n  }\n\n  onDragLeave(event: DragEvent): void {\n    event.stopImmediatePropagation();\n    const el = event.target as HTMLDivElement;\n    this.renderer.setStyle(el, 'border-width', '1px');\n  }\n}\n","<div class=\"inventory-wrapper\">\n  <div class=\"inventory-container\">\n    <div class=\"inventory-items\">\n      @for (invention of inventions(); track $index) {\n        <div\n          class=\"inventory-item\"\n          (dragenter)=\"onDragEnter($event)\"\n          (dragleave)=\"onDragLeave($event)\">\n          @if (!invention) {\n            <div [ngClass]=\"{ 'icon-wrapper': true, 'icon-stub': !invention }\">\n              <img fill class=\"inventory-item-img\" ngSrc=\"assets/icons/tank/invention-stub.svg\" alt=\"#\">\n            </div>\n          }\n        </div>\n      }\n    </div>\n  </div>\n</div>\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject, input, output, Renderer2 } from '@angular/core';\n\nimport { ITankItem } from '../../../resources/interfaces/tank.interface';\n\n@Component({\n  selector: 'tnm-tank-item-slot',\n  imports: [\n    NgOptimizedImage,\n    NgClass,\n  ],\n  templateUrl: './tank-item-slot.component.html',\n  styleUrl: './tank-item-slot.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankItemSlotComponent {\n\n  private readonly renderer = inject(Renderer2);\n\n  tankItem = input<ITankItem>(null);\n  multipleItems = input<boolean>(false);\n  dragStart = output<ITankItem>();\n  dragEnd = output<ITankItem>();\n\n  iconSrc = computed<string>(() => this.tankItem()?.path);\n  quantity = computed<number>(() => this.tankItem()?.quantity);\n\n  onDragEnter(contentEl: HTMLDivElement): void {\n    this.renderer.setStyle(contentEl, 'border-width', '3px');\n  }\n\n  onDragLeave(contentEl: HTMLDivElement): void {\n    this.renderer.setStyle(contentEl, 'border-width', '1px');\n  }\n\n  onDrop(contentEl: HTMLDivElement): void {\n    this.renderer.setStyle(contentEl, 'border-width', '1px');\n  }\n\n  onDragStart(): void {\n    this.dragStart.emit(this.tankItem());\n  }\n\n  onDragEnd(): void {\n    this.dragEnd.emit(this.tankItem());\n  }\n\n}\n","<div\n  class=\"detail-container\"\n  draggable=\"true\"\n  (dragenter)=\"onDragEnter(container)\"\n  (dragleave)=\"onDragLeave(container)\"\n  (dragstart)=\"onDragStart()\"\n  (dragend)=\"onDragEnd()\"\n  (drop)=\"onDrop(container)\"\n  #container>\n  <div class=\"detail-container-content\">\n    <div [ngClass]=\"{ 'img-wrapper': true, 'min-img': multipleItems() }\">\n      @if (iconSrc()) {\n        <img fill draggable=\"false\" class=\"img\" alt=\"#\" [ngSrc]=\"iconSrc()\"/>\n      } @else {\n        <img fill draggable=\"false\" class=\"img stub\" alt=\"#\" ngSrc=\"assets/icons/tank/stub-bullet.svg\"/>\n      }\n    </div>\n    @if (multipleItems() && quantity()) {\n      <span>{{ quantity() }}</span>\n    }\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component, computed,\n  DestroyRef,\n  inject,\n  input,\n  OnInit,\n  output,\n  viewChildren,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatButton } from '@angular/material/button';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\n\nimport { delay, merge } from 'rxjs';\n\nimport {\n  QuantityMenuComponent,\n} from '../../../../../../common/elements/game-containers/quantity-menu/quantity-menu.component';\nimport {\n  TankInventionsComponent,\n} from '../../../../../../common/elements/game-containers/tank-inventions/tank-inventions.component';\nimport {\n  TankItemSlotComponent,\n} from '../../../../../../common/elements/game-containers/tank-item-slot/tank-item-slot.component';\nimport {\n  ETankItemType,\n  ETankTransactionHosts,\n  ETankTransactionTargets,\n} from '../../../../../../common/resources/enums/game.enum';\nimport { IQuantityResult } from '../../../../../../common/resources/interfaces/game.interface';\nimport {\n  IBullet,\n  IDemoTank,\n  ITankItem,\n  ITankTransactionItem,\n} from '../../../../../../common/resources/interfaces/tank.interface';\nimport { copy, swap } from '../../../../../../shared/constants/utils';\nimport { TankItemTransactionService } from '../../../../services/tank-item-transaction/tank-item-transaction.service';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-tank-inventory',\n  imports: [\n    TankItemSlotComponent,\n    MatButton,\n    MatMenuModule,\n    QuantityMenuComponent,\n    TankInventionsComponent,\n  ],\n  templateUrl: './tank-inventory.component.html',\n  styleUrl: './tank-inventory.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankInventoryComponent implements OnInit {\n\n  private readonly tankItemTransactionService = inject(TankItemTransactionService);\n  private readonly dr = inject(DestroyRef);\n\n  private itemQuantityChanged = false;\n  private bulletActiveIndex: number | null = null;\n\n  tank = input.required<IDemoTank>();\n  saveTank = output<IDemoTank>();\n  matTriggers = viewChildren(MatMenuTrigger);\n  quantityMenus = viewChildren(QuantityMenuComponent);\n\n  tankClone = computed<IDemoTank>(() => copy(this.tank()));\n\n  ngOnInit(): void {\n    this.observeInventoryItem();\n    this.observeTankInventoryTransactionReady();\n    this.observeTransactionResult();\n  }\n\n  onTurretChange(): void {\n    if (this.tankItemTransactionService.transactionTankItemType === ETankItemType.TankTurret) {\n      this.tankItemTransactionService.startTransaction(this.tankClone().turret, ETankTransactionTargets.Tank);\n      const tankTransactionItem: Readonly<ITankTransactionItem> =\n        this.tankItemTransactionService.fillTransaction(1, true);\n      if (tankTransactionItem) {\n        this.tankClone().turret = tankTransactionItem.newItem;\n      }\n    } else {\n      this.tankItemTransactionService.destroyTransaction();\n    }\n  }\n\n  onHullChange(): void {\n    if (this.tankItemTransactionService.transactionTankItemType === ETankItemType.TankHull) {\n      this.tankItemTransactionService.startTransaction(this.tankClone().hull, ETankTransactionTargets.Tank);\n      const tankTransactionItem: Readonly<ITankTransactionItem> =\n        this.tankItemTransactionService.fillTransaction(1, true);\n      if (tankTransactionItem) {\n        this.tankClone().hull = tankTransactionItem.newItem;\n      }\n    } else {\n      this.tankItemTransactionService.destroyTransaction();\n    }\n  }\n\n  onBulletChange(index: number | null): void {\n    if (this.tankItemTransactionService.transactionTankItemType === ETankItemType.Bullet) {\n      const newBullet: ITankItem = this.tankItemTransactionService.transactionNewItem;\n      const possibleIndex: number = this.tankClone().bullets.findIndex(\n        bullet => bullet?.name === newBullet.name,\n      );\n      if (index === null) {\n        index = this.tankClone().bullets.findIndex(bullet => !bullet);\n        index = index >= 0 ? index : 0;\n      }\n      const actualIndex: number = possibleIndex >= 0 ? possibleIndex : index;\n      const oldBullet: IBullet = this.tankClone().bullets[actualIndex];\n      const tankTransactionItem: Readonly<ITankTransactionItem> =\n        this.tankItemTransactionService.startTransaction(oldBullet, ETankTransactionTargets.Tank);\n      if (tankTransactionItem) {\n        switch (tankTransactionItem.host) {\n          case ETankTransactionHosts.Inventory: {\n            this.bulletActiveIndex = actualIndex;\n            this.tankClone().bullets[actualIndex] = copy(tankTransactionItem.remainedItem) as IBullet;\n            this.matTriggers()[actualIndex].openMenu();\n            this.quantityMenus()[actualIndex].updateValidators(tankTransactionItem.newItem.quantity);\n            break;\n          }\n          case ETankTransactionHosts.Tank: {\n            this.tankClone().bullets = swap(this.tankClone().bullets, this.bulletActiveIndex, index);\n            this.tankItemTransactionService.destroyTransaction();\n            this.bulletActiveIndex = null;\n            this.saveTank.emit(this.tankClone());\n            break;\n          }\n        }\n      }\n    } else {\n      this.bulletActiveIndex = null;\n      this.tankItemTransactionService.destroyTransaction();\n    }\n  }\n\n  onItemQuantityChange(quantityResult: IQuantityResult): void {\n    if (!this.itemQuantityChanged && quantityResult.status) {\n      this.itemQuantityChanged = true;\n      const tank: IDemoTank = this.tankClone();\n      const tankTransactionItem: Readonly<ITankTransactionItem> =\n        this.tankItemTransactionService.fillTransaction(quantityResult.quantity);\n      if (tankTransactionItem) {\n        tank.bullets[this.bulletActiveIndex] = tankTransactionItem.newItem as IBullet;\n      }\n    }\n    this.matTriggers()[this.bulletActiveIndex].closeMenu();\n  }\n\n  onMenuClosed(): void {\n    if (!this.itemQuantityChanged) {\n      this.saveTank.emit(this.tank());\n    }\n    this.itemQuantityChanged = false;\n    this.bulletActiveIndex = null;\n    this.tankItemTransactionService.destroyTransaction();\n  }\n\n  onBulletSlotDragStart(index: number, item: ITankItem): void {\n    this.bulletActiveIndex = index;\n    this.tankItemTransactionService.createTransaction(item, ETankTransactionHosts.Tank);\n  }\n\n  onBulletSlotDragEnd(): void {\n    this.bulletActiveIndex = null;\n    if (!this.tankItemTransactionService.transactionInProgress) {\n      this.tankItemTransactionService.destroyTransaction();\n    }\n  }\n\n  onBulletDoubleClick(index: number): void {\n    const item = this.tankClone().bullets[index];\n    this.tankItemTransactionService.createTransaction(item, ETankTransactionHosts.Tank);\n    this.tankItemTransactionService.tankItemClicked$.next();\n  }\n\n  private observeInventoryItem(): void {\n    this.tankItemTransactionService.inventoryItemClicked$.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(() => {\n      switch (this.tankItemTransactionService.transactionTankItemType) {\n        case ETankItemType.TankTurret: {\n          this.onTurretChange();\n          break;\n        }\n        case ETankItemType.TankHull: {\n          this.onHullChange();\n          break;\n        }\n        case ETankItemType.Bullet: {\n          this.onBulletChange(null);\n          break;\n        }\n      }\n    });\n  }\n\n  private observeTankInventoryTransactionReady(): void {\n    this.tankItemTransactionService.tankInventoryTransactionReady$.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(tankTransactionItem => {\n      if (tankTransactionItem.newItem.itemType === ETankItemType.Bullet) {\n        const updatedTankItems: ITankItem[] = this.tankItemTransactionService.handleTransactionCompletion(\n          this.tankClone().bullets,\n          tankTransactionItem,\n        );\n        this.tankClone().bullets = updatedTankItems as IBullet[];\n      }\n    });\n  }\n\n  private observeTransactionResult(): void {\n    merge(\n      this.tankItemTransactionService.tankInventoryTransactionCompleted$,\n      this.tankItemTransactionService.inventoryTankTransactionCompleted$,\n    ).pipe(\n      delay(0),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(result => {\n      result ? this.saveTank.emit(this.tankClone()) : this.saveTank.emit(this.tank());\n    });\n  }\n}\n","<div class=\"tank-details\">\n  <div class=\"tank-details-container\">\n    <tnm-tank-item-slot\n      [tankItem]=\"tankClone()?.turret\"\n      (dragover)=\"$event.preventDefault()\"\n      (drop)=\"onTurretChange()\">\n    </tnm-tank-item-slot>\n    <tnm-tank-item-slot\n      [tankItem]=\"tankClone()?.hull\"\n      (dragover)=\"$event.preventDefault()\"\n      (drop)=\"onHullChange()\">\n    </tnm-tank-item-slot>\n    @for (bullet of tankClone()?.bullets; track $index) {\n      <div class=\"tank-detail-wrapper\">\n        <tnm-tank-item-slot\n          [tankItem]=\"bullet\"\n          [multipleItems]=\"true\"\n          (dragover)=\"$event.preventDefault()\"\n          (dragStart)=\"onBulletSlotDragStart($index, $event)\"\n          (dragEnd)=\"onBulletSlotDragEnd()\"\n          (drop)=\"onBulletChange($index)\"\n          (dblclick)=\"onBulletDoubleClick($index)\">\n        </tnm-tank-item-slot>\n        <button\n          mat-button\n          type=\"button\"\n          class=\"menu-trigger\"\n          [matMenuTriggerFor]=\"menu\"\n          (menuClosed)=\"onMenuClosed()\">\n          Menu\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <tnm-quantity-menu\n            (quantityChange)=\"onItemQuantityChange($event)\">\n          </tnm-quantity-menu>\n        </mat-menu>\n      </div>\n    }\n  </div>\n  @if (tank()) {\n    <tnm-tank-inventions class=\"inventions\" [inventions]=\"tankClone().inventions\"></tnm-tank-inventions>\n  }\n</div>\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'tnm-game-item-btn',\n  imports: [\n    MatButtonModule,\n    NgOptimizedImage,\n    MatIconModule,\n    NgClass,\n  ],\n  templateUrl: './game-item-btn.component.html',\n  styleUrl: './game-item-btn.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GameItemBtnComponent {\n\n  iconSrc1 = input.required<string>();\n  iconSrc2 = input<string>(null);\n  iconSrc3 = input<string>(null);\n  blocked = input<boolean>(false);\n  priced = input<boolean>(false);\n  focused = input<boolean>(false);\n  rounded = input<boolean>(false);\n  smallIcon = input<boolean>(false);\n  largeIcon = input<boolean>(false);\n  name = input<string>('');\n  rotate = input<number>(0);\n  price = input<number>(0);\n\n  onClick = output<MouseEvent>();\n\n  rotateValue = computed<string>(() => `rotate(${this.rotate()}deg)`);\n}\n","<div [ngClass]=\"{ 'game-item-btn-wrapper': true, 'focused': focused() }\">\n  <div type=\"button\" class=\"game-item-btn\">\n    <div [ngClass]=\"{\n      'game-item': true,\n      'blocked-item': blocked(),\n      'priced-item': priced(),\n      'rounded': rounded() }\">\n      <img\n        fill\n        alt=\"#\"\n        [ngClass]=\"{ 'available-icon': true, 'small-icon': smallIcon(), 'large-icon': largeIcon() }\"\n        [ngSrc]=\"iconSrc1()\"\n        [style.transform]=\"rotateValue()\"/>\n      @if (iconSrc2()) {\n        <img fill class=\"available-icon\" alt=\"#\" [ngSrc]=\"iconSrc2()\" [style.transform]=\"rotateValue()\"/>\n      }\n      @if (iconSrc3()) {\n        <img fill class=\"available-icon\" alt=\"#\" [ngSrc]=\"iconSrc3()\"/>\n      }\n    </div>\n  </div>\n  @if (blocked()) {\n    <div class=\"tag\">\n      <mat-icon class=\"blocked-icon\">lock</mat-icon>\n    </div>\n  }\n  @if (name()) {\n    <div class=\"tag\">\n      <span class=\"name\">{{ name() }}</span>\n    </div>\n  }\n  @if (priced()) {\n    <div class=\"tag\">\n      <span class=\"price\">{{ price() }}</span>\n      <mat-icon class=\"priced-icon\" svgIcon=\"gold\"></mat-icon>\n    </div>\n  }\n  <button mat-button class=\"surface mat-text-btn\" type=\"button\" (click)=\"onClick.emit($event)\"></button>\n</div>\n","import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\n\nimport {\n  GameItemBtnComponent,\n} from '../../../../../../common/elements/game-buttons/game-item-btn/game-item-btn.component';\nimport { IDemoGame } from '../../../../../../common/resources/interfaces/game.interface';\nimport { IDemoTank } from '../../../../../../common/resources/interfaces/tank.interface';\n\n@Component({\n  selector: 'tnm-tank-list',\n  imports: [\n    GameItemBtnComponent,\n  ],\n  templateUrl: './tank-list.component.html',\n  styleUrl: './tank-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankListComponent {\n\n  tanks = input.required<IDemoTank[]>();\n  game = input.required<Partial<IDemoGame>>();\n  buyTank = output<IDemoTank>();\n  selectTank = output<number>();\n\n  onBuyTank(tank: IDemoTank): void {\n    this.buyTank.emit(tank);\n  }\n\n  onSelectTank(index: number): void {\n    this.selectTank.emit(index);\n  }\n}\n","<div class=\"tanks-container\">\n  <div class=\"tanks-list\">\n    @for (tank of tanks(); track $index) {\n      @if (game()?.tanks?.length) {\n        @if ($index < game().tanks.length) {\n          <tnm-game-item-btn\n            class=\"tank-btn rotate\"\n            [iconSrc1]=\"tank.hull.path\"\n            [iconSrc2]=\"tank.turret.path\"\n            [name]=\"tank.name\"\n            [focused]=\"tank.chosenAsPlayer\"\n            [rotate]=\"270\"\n            (onClick)=\"onSelectTank($index)\">\n          </tnm-game-item-btn>\n        } @else if ($index === game().tanks.length) {\n          <tnm-game-item-btn\n            class=\"tank-btn rotate\"\n            [iconSrc1]=\"tank.hull.path\"\n            [iconSrc2]=\"tank.turret.path\"\n            [priced]=\"true\"\n            [price]=\"1000\"\n            [rotate]=\"270\"\n            (onClick)=\"onBuyTank(tank)\">\n          </tnm-game-item-btn>\n        } @else {\n          <tnm-game-item-btn\n            class=\"tank-btn rotate\"\n            [iconSrc1]=\"tank.hull.path\"\n            [iconSrc2]=\"tank.turret.path\"\n            [blocked]=\"true\"\n            [rotate]=\"270\">\n          </tnm-game-item-btn>\n        }\n      }\n    }\n  </div>\n</div>\n","import { NgClass, NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, DestroyRef, inject, OnInit, signal } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { InputTextComponent } from '../../../../shared/components/input-text/input-text.component';\nimport { ValidationService } from '../../../../shared/components/validation/validation-service/validation.service';\nimport { ETankItemType } from '../../../resources/enums/game.enum';\nimport { IShopDealConfig } from '../../../resources/interfaces/shop.interface';\nimport { GameItemBtnComponent } from '../../game-buttons/game-item-btn/game-item-btn.component';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-shop-deal-dialog',\n  imports: [\n    MatButton,\n    GameItemBtnComponent,\n    NgOptimizedImage,\n    InputTextComponent,\n    ReactiveFormsModule,\n    NgClass,\n  ],\n  templateUrl: './shop-deal-dialog.component.html',\n  styleUrl: './shop-deal-dialog.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShopDealDialogComponent implements OnInit {\n\n  private readonly dr = inject(DestroyRef);\n  private readonly dialogRef = inject(MatDialogRef<ShopDealDialogComponent>);\n  private readonly validationService = inject(ValidationService);\n  readonly data = inject<IShopDealConfig>(MAT_DIALOG_DATA);\n\n  quantityControl = new FormControl<number>(1, [\n    Validators.required, Validators.min(1), Validators.max(1000),\n  ]);\n\n  price = signal<number>(this.data.shopItem.price);\n  isDeal = computed<boolean>(() => this.data.playerCoins >= this.price());\n\n  get isBullet(): boolean {\n    return this.data.shopItem.item.itemType === ETankItemType.Bullet;\n  }\n\n  ngOnInit(): void {\n    this.observeQuantity();\n    this.validationService.multipleOf(this.quantityControl);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close({\n      price: 0,\n      quantity: 0,\n      shopItem: this.data.shopItem,\n      result: false,\n    });\n  }\n\n  onConfirm(): void {\n    if (this.quantityControl.valid && this.isDeal()) {\n      this.dialogRef.close({\n        price: this.price(),\n        quantity: +this.quantityControl.value,\n        shopItem: this.data.shopItem,\n        result: true,\n      });\n    }\n  }\n\n  private observeQuantity(): void {\n    this.quantityControl.valueChanges.pipe(\n      takeUntilDestroyed(this.dr),\n    ).subscribe(value => {\n      if (this.quantityControl.valid) {\n        this.price.set(this.data.shopItem.price * value);\n      }\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <h2 class=\"title\">{{ 'TRADE' }}</h2>\n\n  <div class=\"arenas-wrapper\">\n    <div class=\"arenas-wrapper-item\">\n      <span>Your Arenas:</span>\n      <span>Price:</span>\n    </div>\n    <div class=\"arenas-wrapper-item\">\n      <div class=\"arenas\">\n        <span>{{data.playerCoins}}</span>\n        <img ngSrc=\"assets/icons/arena.svg\" alt=\"#\" width=\"24\" height=\"24\">\n      </div>\n      <div class=\"arenas\">\n        <span [ngClass]=\"{'invalid': !isDeal()}\">{{price()}}</span>\n        <img ngSrc=\"assets/icons/arena.svg\" alt=\"#\" width=\"24\" height=\"24\">\n      </div>\n    </div>\n  </div>\n\n  <strong class=\"message \"> Let's make a deal! </strong>\n\n  <div class=\"shop-item-wrapper\">\n    <tnm-game-item-btn\n      class=\"shop-item\"\n      [iconSrc1]=\"data.shopItem.item.path\"\n      [rotate]=\"isBullet ? 60 : 0\"\n      [smallIcon]=\"isBullet\"\n      [priced]=\"true\"\n      [price]=\"data.shopItem.price\">\n    </tnm-game-item-btn>\n  </div>\n\n  <div class=\"quantity\">\n    <span>Quantity: </span>\n    <tnm-input-text\n      borderColor=\"var(--mat-sys-primary-container)\"\n      placeholder=\"Enter quantity\"\n      inputType=\"number\"\n      [formControl]=\"quantityControl\"\n      [disableErrors]=\"true\"\n      [centered]=\"true\">\n    </tnm-input-text>\n  </div>\n\n  <div class=\"nav-buttons\">\n    <button\n      mat-flat-button\n      type=\"button\"\n      class=\"mat-submit-btn cancel-btn\"\n      (click)=\"onCancel()\">\n      CANCEL\n    </button>\n    <button\n      mat-flat-button\n      type=\"button\"\n      class=\"mat-submit-btn\"\n      [disabled]=\"quantityControl.invalid || !isDeal()\"\n      (click)=\"onConfirm()\">\n      OKAY\n    </button>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\n\nimport { IShopItem } from '../../../resources/interfaces/shop.interface';\nimport { GameItemBtnComponent } from '../../game-buttons/game-item-btn/game-item-btn.component';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-shop',\n  imports: [\n    GameItemBtnComponent,\n  ],\n  templateUrl: './shop.component.html',\n  styleUrl: './shop.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShopComponent {\n\n  shopItems = input.required<IShopItem[]>();\n  rotatePictures = input<number>(0);\n  smallIcons = input<boolean>(false);\n  largeIcons = input<boolean>(false);\n  buyItem = output<IShopItem>();\n\n\n  onBuyItem(shopItem: IShopItem): void {\n    this.buyItem.emit(shopItem);\n  }\n\n}\n","<div class=\"shop-wrapper\">\n  @for (shopItem of shopItems(); track shopItem.item.name) {\n    <tnm-game-item-btn\n      class=\"shop-item\"\n      [iconSrc1]=\"shopItem.item.path\"\n      [priced]=\"true\"\n      [price]=\"shopItem.price\"\n      [rotate]=\"rotatePictures()\"\n      [smallIcon]=\"smallIcons()\"\n      [largeIcon]=\"largeIcons()\"\n      (onClick)=\"onBuyItem(shopItem)\">\n    </tnm-game-item-btn>\n  }\n</div>\n","import { ETankBulletNames, ETankHullNames, ETankTurretNames } from '../enums/game.enum';\nimport { IShopItem } from '../interfaces/shop.interface';\n\nimport { tankBullets, tankHulls, tankTurrets } from './tank-settings';\n\nexport const turretPrices: { [key in ETankTurretNames]: number } = {\n  [ETankTurretNames.RegularRed]: 100,\n  [ETankTurretNames.RegularBlue]: 200,\n  [ETankTurretNames.USAStyle]: 300,\n  [ETankTurretNames.ForestStyle]: 400,\n  [ETankTurretNames.UkraineStyle]: 500,\n};\n\nexport const hullPrices: { [key in ETankHullNames]: number } = {\n  [ETankHullNames.RegularRed]: 100,\n  [ETankHullNames.RegularBlue]: 200,\n  [ETankHullNames.USAStyle]: 300,\n  [ETankHullNames.UkraineStyle]: 500,\n};\n\nexport const bulletPrices: { [key in ETankBulletNames]: number } = {\n  [ETankBulletNames.Gray]: 1,\n  [ETankBulletNames.Green]: 20,\n  [ETankBulletNames.Golden]: 25,\n  [ETankBulletNames.Blue]: 30,\n  [ETankBulletNames.Red]: 35,\n};\n\nexport const tankTurretsShop: IShopItem[] = [\n  ...tankTurrets.map(turret => ({\n    item: turret,\n    price: turretPrices[turret.name],\n  })),\n];\n\nexport const tankHullsShop: IShopItem[] = [\n  ...tankHulls.map(hull => ({\n    item: hull,\n    price: hullPrices[hull.name],\n  })),\n];\n\nexport const tankBulletsShop: IShopItem[] = [\n  ...tankBullets.map(bullet => ({\n    item: bullet,\n    price: bulletPrices[bullet.name],\n  })),\n];\n","import { ChangeDetectionStrategy, Component, inject, input, output, signal } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTab, MatTabGroup } from '@angular/material/tabs';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  ShopDealDialogComponent,\n} from '../../../../../../common/elements/dialogs/shop-deal-dialog/shop-deal-dialog.component';\nimport { ShopComponent } from '../../../../../../common/elements/game-containers/shop/shop.component';\nimport { tankBulletsShop, tankHullsShop, tankTurretsShop } from '../../../../../../common/resources/constants/shops';\nimport { IDemoPlayer } from '../../../../../../common/resources/interfaces/game.interface';\nimport {\n  IShopDealConfig,\n  IShopDealResult,\n  IShopItem,\n} from '../../../../../../common/resources/interfaces/shop.interface';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-tank-shops',\n  imports: [\n    MatTab,\n    MatTabGroup,\n    ShopComponent,\n  ],\n  templateUrl: './tank-shops.component.html',\n  styleUrl: './tank-shops.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TankShopsComponent {\n\n  private readonly dialog = inject(MatDialog);\n\n  readonly tankHullsShop = tankHullsShop;\n  readonly tankTurretsShop = tankTurretsShop;\n  readonly tankBulletsShop = tankBulletsShop;\n\n  player = input.required<Partial<IDemoPlayer>>();\n  savePlayer = output<Partial<IDemoPlayer>>();\n  selectedTab = signal<number>(0);\n\n  onBuyItem(shopItem: IShopItem): void {\n    const player = this.player();\n    if (player.arenas >= shopItem.price) {\n      this.showShopDealDialog({\n        shopItem,\n        playerCoins: player.arenas,\n      }).subscribe((result: IShopDealResult) => {\n        if (result.result) {\n          this.putItemInInventory(player, result);\n          this.savePlayer.emit(player);\n        }\n      });\n    } else {\n      this.showShopDealDialog({\n        shopItem,\n        playerCoins: player.arenas,\n      });\n    }\n  }\n\n  private putItemInInventory(player: Partial<IDemoPlayer>, dealResult: IShopDealResult): void {\n    player.arenas -= dealResult.dealPrice;\n    const existingItemIndex = player.inventory.findIndex(\n      item => item?.quantity && item.path === dealResult.shopItem.item.path,\n    );\n    if (existingItemIndex >= 0) {\n      player.inventory[existingItemIndex].quantity += dealResult.quantity;\n    } else {\n      const freeItemIndex = player.inventory.findIndex(item => !item?.quantity);\n      if (freeItemIndex >= 0) {\n        player.inventory[freeItemIndex] = dealResult.shopItem.item;\n        player.inventory[freeItemIndex].quantity += dealResult.quantity;\n      }\n    }\n  }\n\n  private showShopDealDialog(dataConfig: Partial<IShopDealConfig>): Observable<IShopDealResult> {\n    return this.dialog.open(ShopDealDialogComponent, {\n      data: dataConfig,\n      hasBackdrop: true,\n      panelClass: 'mat-vm-dialog',\n    }).afterClosed();\n  }\n}\n","<mat-tab-group\n  class=\"shops-inventory\"\n  [selectedIndex]=\"selectedTab()\"\n  (selectedIndexChange)=\"selectedTab.set($event)\">\n  <mat-tab label=\"Turrets\">\n    <tnm-shop [shopItems]=\"tankTurretsShop\" [largeIcons]=\"true\" (buyItem)=\"onBuyItem($event)\"></tnm-shop>\n  </mat-tab>\n  <mat-tab label=\"Hulls\">\n    <tnm-shop [shopItems]=\"tankHullsShop\" (buyItem)=\"onBuyItem($event)\"></tnm-shop>\n  </mat-tab>\n  <mat-tab label=\"Bullets\">\n    <tnm-shop\n      [shopItems]=\"tankBulletsShop\"\n      [smallIcons]=\"true\"\n      [rotatePictures]=\"60\"\n      (buyItem)=\"onBuyItem($event)\">\n    </tnm-shop>\n  </mat-tab>\n  <mat-tab label=\"Inventions\"> In Progress </mat-tab>\n</mat-tab-group>\n","import { NgOptimizedImage } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  effect,\n  inject,\n  input,\n  OnInit,\n  output,\n  signal,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { debounceTime } from 'rxjs';\n\nimport { IDemoPlayer } from '../../../../../../common/resources/interfaces/game.interface';\nimport { InputTextComponent } from '../../../../../../shared/components/input-text/input-text.component';\nimport { ValidationComponent } from '../../../../../../shared/components/validation/validation.component';\nimport {\n  ValidationService,\n} from '../../../../../../shared/components/validation/validation-service/validation.service';\n\n@Component({\n  selector: 'tnm-war-room-header',\n  imports: [\n    InputTextComponent,\n    TranslatePipe,\n    ValidationComponent,\n    ReactiveFormsModule,\n    NgOptimizedImage,\n  ],\n  templateUrl: './war-room-header.component.html',\n  styleUrl: './war-room-header.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarRoomHeaderComponent implements OnInit {\n\n  private readonly validationService = inject(ValidationService);\n  private readonly dr = inject(DestroyRef);\n\n  private locker = false;\n\n  player = input.required<Partial<IDemoPlayer>>();\n  savePlayerName = output<string>();\n\n  userNameControl = signal<FormControl<string>>(\n    new FormControl('Comrade', {\n      validators: [\n        this.validationService.userNameLength,\n        this.validationService.userName,\n      ],\n      nonNullable: true,\n    }),\n  );\n\n  constructor() {\n    effect(() => {\n      if (this.player().hasOwnProperty('name') && !this.locker) {\n        this.userNameControl().setValue(this.player().name);\n        this.locker = true;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.observeUserName();\n  }\n\n  private observeUserName(): void {\n    this.userNameControl().valueChanges.pipe(\n      debounceTime(500),\n      takeUntilDestroyed(this.dr),\n    ).subscribe(value => {\n      if (this.userNameControl().valid) {\n        this.savePlayerName.emit(value);\n      }\n    });\n  }\n\n}\n","<div class=\"wrapper\">\n  <tnm-input-text\n    class=\"user-name\"\n    [formControl]=\"userNameControl()\"\n    [label]=\"'auth.nickname' | translate\">\n    <tnm-validation [formControl]=\"userNameControl()\"></tnm-validation>\n  </tnm-input-text>\n  <div class=\"user-achievements\">\n    <div class=\"achievement-item\">\n      <strong class=\"item-name\">Battles:</strong>\n      <div class=\"item-value\">\n        <span>{{ player().totalBattles }}</span>\n        <img ngSrc=\"assets/icons/battles.svg\" alt=\"#\" width=\"25\" height=\"25\"/>\n      </div>\n    </div>\n    <hr/>\n    <div class=\"achievement-item\">\n      <strong class=\"item-name\">Wins:</strong>\n      <div class=\"item-value\">\n        <span>{{ player().totalWins }}</span>\n        <img ngSrc=\"assets/icons/win-flag.svg\" alt=\"#\" width=\"24\" height=\"24\"/>\n      </div>\n    </div>\n    <hr/>\n    <div class=\"achievement-item\">\n      <strong class=\"item-name\">Zrists:</strong>\n      <div class=\"item-value\">\n        <span>{{ player().zrists }}</span>\n        <img ngSrc=\"assets/icons/zrist.svg\" alt=\"#\" width=\"23\" height=\"23\"/>\n      </div>\n    </div>\n    <hr/>\n    <div class=\"achievement-item\">\n      <strong class=\"item-name\">Arenas:</strong>\n      <div class=\"item-value\">\n        <span>{{ player().arenas }}</span>\n        <img ngSrc=\"assets/icons/arena.svg\" alt=\"#\" width=\"24\" height=\"24\"/>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { map } from 'rxjs';\n\nimport {\n  PlayerInventoryComponent,\n} from '../../../../common/elements/game-containers/player-inventory/player-inventory.component';\nimport {\n  TankModernizationComponent,\n} from '../../../../common/elements/game-containers/tank-modernization/tank-modernization.component';\nimport { TankViewComponent } from '../../../../common/elements/game-containers/tank-view/tank-view.component';\nimport { IDemoBattle, IDemoGame, IDemoPlayer } from '../../../../common/resources/interfaces/game.interface';\nimport { IDemoTank, ITankItem } from '../../../../common/resources/interfaces/tank.interface';\nimport { StateService } from '../../../../common/resources/services/state/state.service';\nimport { copy } from '../../../../shared/constants/utils';\nimport { BreakpointService } from '../../../../shared/services/breakpoint/breakpoint.service';\nimport { WarRoomService } from '../../services/war-room/war-room.service';\nimport { BattlesTableComponent } from '../battles-table/battles-table.component';\n\nimport { TankInventoryComponent } from './components/tank-inventory/tank-inventory.component';\nimport { TankListComponent } from './components/tank-list/tank-list.component';\nimport { TankShopsComponent } from './components/tank-shops/tank-shops.component';\nimport { WarRoomHeaderComponent } from './components/war-room-header/war-room-header.component';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-war-room',\n  imports: [\n    ReactiveFormsModule,\n    BattlesTableComponent,\n    MatIconModule,\n    MatButtonModule,\n    WarRoomHeaderComponent,\n    TankListComponent,\n    MatTabsModule,\n    PlayerInventoryComponent,\n    TankViewComponent,\n    TankInventoryComponent,\n    TankShopsComponent,\n    TankModernizationComponent,\n  ],\n  templateUrl: './war-room.component.html',\n  styleUrl: './war-room.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarRoomComponent {\n\n  private readonly tanksQuantity = 8;\n\n  private readonly stateService = inject(StateService);\n  private readonly warRoomService = inject(WarRoomService);\n  private readonly breakpointService = inject(BreakpointService);\n\n  isSmallScreen = toSignal(this.breakpointService.adjustedBreakPointObserver$.pipe(\n    map(state => state.mobile || state.tablet),\n  ));\n\n  private defaultTanks: IDemoTank[] = Array(this.tanksQuantity).fill(null).map(\n    () => copy(this.stateService.defaultDemoTank),\n  );\n\n  player = computed<Partial<IDemoPlayer>>(() => {\n    const demoPlayer = this.stateService.demoPlayer();\n    if (demoPlayer) {\n      return { ...demoPlayer };\n    }\n    return {};\n  });\n  inventory = computed<ITankItem[]>(() => copy((this.player()?.inventory ?? [])));\n  battles = computed<IDemoBattle[]>(() => this.stateService.demoBattles() ?? []);\n  game = computed<Partial<IDemoGame>>(() => {\n    const game = this.stateService.demoGame();\n    if (game) {\n      return { ...game };\n    }\n    return {};\n  });\n\n  tanks = computed<IDemoTank[]>(() => this.game()?.tanks?.reduce(\n    (acc: IDemoTank[], item: IDemoTank, index: number) => {\n      acc[index] = item;\n      return acc;\n    },\n    this.defaultTanks,\n  ) ?? []);\n\n  chosenTank = computed<IDemoTank>(() => {\n    const tank = this.game()?.tanks?.find(item => item.chosenAsPlayer) ?? null;\n    if (tank) {\n      return copy(tank);\n    }\n    return null;\n  });\n\n  onSavePlayerName(name: string): void {\n    this.stateService.updateDemoPlayerState({ name });\n  }\n\n  onSavePlayer(player: Partial<IDemoPlayer>): void {\n    this.stateService.updateDemoPlayerState(player);\n  }\n\n  onSaveInventory(inventory: ITankItem[]): void {\n    this.stateService.updateDemoPlayerState({ inventory });\n  }\n\n  onTankNameChange(name: string): void {\n    const tank = this.chosenTank();\n    tank.name = name;\n    this.onSaveTank(tank);\n  }\n\n  onSaveTank(changedTank: IDemoTank): void {\n    const game = this.game();\n    const index = game.tanks.findIndex(item => item.chosenAsPlayer);\n    if (index >= 0) {\n      game.tanks[index] = changedTank;\n      this.stateService.updateDemoGameState(game);\n    }\n  }\n\n  onSelectTank(index: number): void {\n    const game = this.game();\n    game.tanks.forEach(item => {\n      item.chosenAsPlayer = false;\n    });\n    game.tanks[index].chosenAsPlayer = true;\n    this.warRoomService.tankNameLocker = false;\n    this.stateService.updateDemoGameState(game);\n  }\n\n  onBuyTank(tank: IDemoTank): void {\n    const player = this.player();\n    // todo restructuring\n    const tankPrice = 1000;\n    if (player.arenas >= tankPrice) {\n      player.arenas -= tankPrice;\n      this.stateService.updateDemoPlayerState(player);\n      const game = this.game();\n      game.tanks.push(tank);\n      this.stateService.updateDemoGameState(this.game());\n    }\n  }\n\n}\n","<div class=\"wrapper\">\n\n  <h2 class=\"title\">Your War Room</h2>\n\n  <section class=\"war-room-header\">\n    <tnm-war-room-header [player]=\"player()\" (savePlayerName)=\"onSavePlayerName($event)\"></tnm-war-room-header>\n  </section>\n\n  <section class=\"war-room-content\">\n    @if (chosenTank() && player()) {\n      <div class=\"war-room-content-item\">\n        <h3 class=\"sub-title\">Tanks:</h3>\n        <tnm-tank-list\n          [game]=\"game()\"\n          [tanks]=\"tanks()\"\n          (buyTank)=\"onBuyTank($event)\"\n          (selectTank)=\"onSelectTank($event)\">\n        </tnm-tank-list>\n      </div>\n\n      <div class=\"war-room-content-item without-sub-title\">\n        <tnm-tank-view\n          [tankName]=\"chosenTank()?.name\"\n          [selectedTankBody]=\"chosenTank()?.hull\"\n          [selectedTankHead]=\"chosenTank()?.turret\"\n          (tankNameChange)=\"onTankNameChange($event)\">\n        </tnm-tank-view>\n      </div>\n\n      @if (isSmallScreen()) {\n        <div class=\"war-room-content-item without-sub-title\">\n          <tnm-tank-inventory [tank]=\"chosenTank()\" (saveTank)=\"onSaveTank($event)\"></tnm-tank-inventory>\n        </div>\n      }\n\n      <div class=\"war-room-content-item\">\n        <h3 class=\"sub-title\">Inventory:</h3>\n        <tnm-player-inventory [inventory]=\"inventory()\" (saveInventory)=\"onSaveInventory($event)\">\n        </tnm-player-inventory>\n      </div>\n\n      @if (!isSmallScreen()) {\n        <div class=\"war-room-content-item without-sub-title\">\n          <tnm-tank-inventory [tank]=\"chosenTank()\" (saveTank)=\"onSaveTank($event)\"></tnm-tank-inventory>\n        </div>\n      }\n\n      @if (isSmallScreen()) {\n        <div class=\"war-room-content-item without-sub-title\">\n          <tnm-tank-modernization [tank]=\"chosenTank()\"></tnm-tank-modernization>\n        </div>\n      }\n\n      <div class=\"war-room-content-item simple-title\">\n        <h3 class=\"sub-title\">Market:</h3>\n        <tnm-tank-shops [player]=\"player()\" (savePlayer)=\"onSavePlayer($event)\"></tnm-tank-shops>\n      </div>\n\n      @if (!isSmallScreen()) {\n        <div class=\"war-room-content-item without-sub-title\">\n          <tnm-tank-modernization [tank]=\"chosenTank()\"></tnm-tank-modernization>\n        </div>\n      }\n    }\n  </section>\n\n  <section class=\"battles-history\">\n    <h3 class=\"sub-title\">Battles:</h3>\n    @if (battles().length) {\n      <tnm-battles-table [battles]=\"battles()\"></tnm-battles-table>\n    } @else {\n      <strong class=\"empty-history\">No battle stats yet — join a game to get started!</strong>\n    }\n  </section>\n</div>\n","import { ChangeDetectionStrategy, Component, inject, OnInit, output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\nimport { StateService } from '../../../../common/resources/services/state/state.service';\nimport { PositionSettingsComponent } from '../position-settings/position-settings.component';\nimport { WarRoomComponent } from '../war-room/war-room.component';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-demo-settings',\n  imports: [\n    PositionSettingsComponent,\n    MatButtonModule,\n    WarRoomComponent,\n  ],\n  templateUrl: './demo-settings.component.html',\n  styleUrl: './demo-settings.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DemoSettingsComponent implements OnInit {\n\n  signInClick = output<void>();\n\n  private readonly router = inject(Router);\n  private readonly stateService = inject(StateService);\n\n  ngOnInit(): void {\n    this.stateService.inDemo = false;\n  }\n\n  onDemo(): void {\n    this.stateService.inDemo = true;\n    this.router.navigate(['demo']).then();\n  }\n\n}\n","<div class=\"wrapper\">\n  <tnm-war-room></tnm-war-room>\n  <div class=\"game-settings\">\n    <tnm-position-settings></tnm-position-settings>\n  </div>\n  <button mat-flat-button type=\"button\" class=\"mat-submit-btn\" (click)=\"onDemo()\">Play Demo</button>\n  <small class=\"log-in-row\">\n    or\n    <button mat-button type=\"button\" class=\"mat-text-btn\" (click)=\"signInClick.emit()\">Log In</button>\n    and unlock more features\n  </small>\n</div>\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, ContentChildren, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nlet MatToolbarRow = /*#__PURE__*/(() => {\n  class MatToolbarRow {\n    static ɵfac = function MatToolbarRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbarRow)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatToolbarRow,\n      selectors: [[\"mat-toolbar-row\"]],\n      hostAttrs: [1, \"mat-toolbar-row\"],\n      exportAs: [\"matToolbarRow\"]\n    });\n  }\n  return MatToolbarRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatToolbar = /*#__PURE__*/(() => {\n  class MatToolbar {\n    _elementRef = inject(ElementRef);\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT);\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the toolbar. This API is supported in M2 themes only, it has\n     * no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/toolbar/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Reference to all toolbar row elements that have been projected. */\n    _toolbarRows;\n    constructor() {}\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n      }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n      if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n        if (isCombinedUsage) {\n          throwToolbarMixedModesError();\n        }\n      }\n    }\n    static ɵfac = function MatToolbar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbar)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatToolbar,\n      selectors: [[\"mat-toolbar\"]],\n      contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-toolbar\"],\n      hostVars: 6,\n      hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n        }\n      },\n      inputs: {\n        color: \"color\"\n      },\n      exportAs: [\"matToolbar\"],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 0,\n      template: function MatToolbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n        }\n      },\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatToolbar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nlet MatToolbarModule = /*#__PURE__*/(() => {\n  class MatToolbarModule {\n    static ɵfac = function MatToolbarModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatToolbarModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatToolbarModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n  return MatToolbarModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, Renderer2, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Output, Input, ViewChild, ContentChild, ContentChildren, ChangeDetectionStrategy, ViewEncapsulation, Component, Directive, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _IdGenerator, LiveAnnouncer, removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, ENTER, SPACE, A, ESCAPE, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, takeUntil, take } from 'rxjs/operators';\nimport { NgClass } from '@angular/common';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from './form-field-BPX7ZLIc.mjs';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOption, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT } from './option-B6mQ8PwE.mjs';\nimport { ErrorStateMatcher } from './error-options-BPhcAVoK.mjs';\nimport { _ErrorStateTracker } from './error-state-DAicm3pw.mjs';\nimport { MatFormFieldModule } from './module-BOQEdUAz.mjs';\nimport { MatOptionModule } from './index-BU5avYQW.mjs';\nimport { MatCommonModule } from './common-module-DoCSSHRt.mjs';\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵclassProp(\"mat-select-panel-animations-enabled\", !ctx_r1._animationsDisabled);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass);\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\n\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = /*#__PURE__*/new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = /*#__PURE__*/new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  source;\n  value;\n  constructor(/** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nlet MatSelect = /*#__PURE__*/(() => {\n  class MatSelect {\n    _viewportRuler = inject(ViewportRuler);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _idGenerator = inject(_IdGenerator);\n    _renderer = inject(Renderer2);\n    _parentFormField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    ngControl = inject(NgControl, {\n      self: true,\n      optional: true\n    });\n    _liveAnnouncer = inject(LiveAnnouncer);\n    _defaultOptions = inject(MAT_SELECT_CONFIG, {\n      optional: true\n    });\n    _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    }) === 'NoopAnimations';\n    _initialized = new Subject();\n    _cleanupDetach;\n    /** All of the defined select options. */\n    options;\n    // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n    // public API so we have to keep it. It should be deprecated and removed eventually.\n    /** All of the defined groups of options. */\n    optionGroups;\n    /** User-supplied override of the trigger element. */\n    customTrigger;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }, {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      panelClass: 'mat-mdc-select-panel-above'\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      panelClass: 'mat-mdc-select-panel-above'\n    }];\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n      const option = this.options.toArray()[index];\n      if (option) {\n        const panel = this.panel.nativeElement;\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const element = option._getHostElement();\n        if (index === 0 && labelCount === 1) {\n          // If we've got one group label before the option and we're at the top option,\n          // scroll the list to the top. This is better UX than scrolling the list to the\n          // top of the option, because it allows the user to read the top group's label.\n          panel.scrollTop = 0;\n        } else {\n          panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n        }\n      }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n      this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n      return new MatSelectChange(this, value);\n    }\n    /** Factory function used to create a scroll strategy for this select. */\n    _scrollStrategyFactory = inject(MAT_SELECT_SCROLL_STRATEGY);\n    /** Whether or not the overlay panel is open. */\n    _panelOpen = false;\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    _compareWith = (o1, o2) => o1 === o2;\n    /** Unique id for this input. */\n    _uid = this._idGenerator.getId('mat-select-');\n    /** Current `aria-labelledby` value for the select trigger. */\n    _triggerAriaLabelledBy = null;\n    /**\n     * Keeps track of the previous form control assigned to the select.\n     * Used to detect if it has changed.\n     */\n    _previousControl;\n    /** Emits whenever the component is destroyed. */\n    _destroy = new Subject();\n    /** Tracks the error state of the select. */\n    _errorStateTracker;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /**\n     * Disable the automatic labeling to avoid issues like #27241.\n     * @docs-private\n     */\n    disableAutomaticLabeling = true;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    userAriaDescribedBy;\n    /** Deals with the selection logic. */\n    _selectionModel;\n    /** Manages keyboard events for options in the panel. */\n    _keyManager;\n    /** Ideal origin for the overlay panel. */\n    _preferredOverlayOrigin;\n    /** Width of the overlay panel. */\n    _overlayWidth;\n    /** `View -> model callback called when value changes` */\n    _onChange = () => {};\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n    /** ID for the DOM node containing the select's value. */\n    _valueId = this._idGenerator.getId('mat-select-value-');\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy;\n    _overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n    /** Whether the select is focused. */\n    get focused() {\n      return this._focused || this._panelOpen;\n    }\n    _focused = false;\n    /** A name for this control that can be used by `mat-form-field`. */\n    controlType = 'mat-select';\n    /** Trigger that opens the select. */\n    trigger;\n    /** Panel containing the select options. */\n    panel;\n    /** Overlay pane containing the options. */\n    _overlayDir;\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    panelClass;\n    /** Whether the select is disabled. */\n    disabled = false;\n    /** Whether ripples in the select are disabled. */\n    disableRipple = false;\n    /** Tab index of the select. */\n    tabIndex = 0;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._syncParentProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n      return this._placeholder;\n    }\n    set placeholder(value) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether the component is required. */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n      this.stateChanges.next();\n    }\n    _required;\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectDynamicMultipleError();\n      }\n      this._multiple = value;\n    }\n    _multiple = false;\n    /** Whether to center the active option over the trigger. */\n    disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n      return this._compareWith;\n    }\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonFunctionValueError();\n      }\n      this._compareWith = fn;\n      if (this._selectionModel) {\n        // A different comparator means the selection could change.\n        this._initializeSelection();\n      }\n    }\n    /** Value of the select control. */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      const hasAssigned = this._assignValue(newValue);\n      if (hasAssigned) {\n        this._onChange(newValue);\n      }\n    }\n    _value;\n    /** Aria label of the select. */\n    ariaLabel = '';\n    /** Input that can be used to specify the `aria-labelledby` attribute. */\n    ariaLabelledby;\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    sortComparator;\n    /** Unique id of the element. */\n    get id() {\n      return this._id;\n    }\n    set id(value) {\n      this._id = value || this._uid;\n      this.stateChanges.next();\n    }\n    _id;\n    /** Whether the select is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    /**\n     * Width of the panel. If set to `auto`, the panel will match the trigger width.\n     * If set to null or an empty string, the panel will grow to match the longest option's text.\n     */\n    panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n    /**\n     * By default selecting an option with a `null` or `undefined` value will reset the select's\n     * value. Enable this option if the reset behavior doesn't match your requirements and instead\n     * the nullable options should become selected. The value of this input can be controlled app-wide\n     * using the `MAT_SELECT_CONFIG` injection token.\n     */\n    canSelectNullableOptions = this._defaultOptions?.canSelectNullableOptions ?? false;\n    /** Combined stream of all of the child options' change events. */\n    optionSelectionChanges = defer(() => {\n      const options = this.options;\n      if (options) {\n        return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n      }\n      return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n    });\n    /** Event emitted when the select panel has been toggled. */\n    openedChange = new EventEmitter();\n    /** Event emitted when the select has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the select has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the selected value has been changed by the user. */\n    selectionChange = new EventEmitter();\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    constructor() {\n      const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n      const parentForm = inject(NgForm, {\n        optional: true\n      });\n      const parentFormGroup = inject(FormGroupDirective, {\n        optional: true\n      });\n      const tabIndex = inject(new HostAttributeToken('tabindex'), {\n        optional: true\n      });\n      if (this.ngControl) {\n        // Note: we provide the value accessor through here, instead of\n        // the `providers` to avoid running into a circular import.\n        this.ngControl.valueAccessor = this;\n      }\n      // Note that we only want to set this when the defaults pass it in, otherwise it should\n      // stay as `undefined` so that it falls back to the default in the key manager.\n      if (this._defaultOptions?.typeaheadDebounceInterval != null) {\n        this.typeaheadDebounceInterval = this._defaultOptions.typeaheadDebounceInterval;\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n      this._scrollStrategy = this._scrollStrategyFactory();\n      this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n      // Force setter to be called in case id was not specified.\n      this.id = this.id;\n    }\n    ngOnInit() {\n      this._selectionModel = new SelectionModel(this.multiple);\n      this.stateChanges.next();\n      this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n        if (this.panelOpen) {\n          this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n          this._changeDetectorRef.detectChanges();\n        }\n      });\n    }\n    ngAfterContentInit() {\n      this._initialized.next();\n      this._initialized.complete();\n      this._initKeyManager();\n      this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n        event.added.forEach(option => option.select());\n        event.removed.forEach(option => option.deselect());\n      });\n      this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n        this._resetOptions();\n        this._initializeSelection();\n      });\n    }\n    ngDoCheck() {\n      const newAriaLabelledby = this._getTriggerAriaLabelledby();\n      const ngControl = this.ngControl;\n      // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n      // is computed as a result of a content query which can cause this binding to trigger a\n      // \"changed after checked\" error.\n      if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n        const element = this._elementRef.nativeElement;\n        this._triggerAriaLabelledBy = newAriaLabelledby;\n        if (newAriaLabelledby) {\n          element.setAttribute('aria-labelledby', newAriaLabelledby);\n        } else {\n          element.removeAttribute('aria-labelledby');\n        }\n      }\n      if (ngControl) {\n        // The disabled state might go out of sync if the form group is swapped out. See #17860.\n        if (this._previousControl !== ngControl.control) {\n          if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n            this.disabled = ngControl.disabled;\n          }\n          this._previousControl = ngControl.control;\n        }\n        this.updateErrorState();\n      }\n    }\n    ngOnChanges(changes) {\n      // Updating the disabled state is handled by the input, but we need to additionally let\n      // the parent form field know to run change detection when the disabled state changes.\n      if (changes['disabled'] || changes['userAriaDescribedBy']) {\n        this.stateChanges.next();\n      }\n      if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n        this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n      }\n    }\n    ngOnDestroy() {\n      this._cleanupDetach?.();\n      this._keyManager?.destroy();\n      this._destroy.next();\n      this._destroy.complete();\n      this.stateChanges.complete();\n      this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n      this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n      if (!this._canOpen()) {\n        return;\n      }\n      // It's important that we read this as late as possible, because doing so earlier will\n      // return a different element since it's based on queries in the form field which may\n      // not have run yet. Also this needs to be assigned before we measure the overlay width.\n      if (this._parentFormField) {\n        this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n      }\n      this._cleanupDetach?.();\n      this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n      this._applyModalPanelOwnership();\n      this._panelOpen = true;\n      this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n        this._changeDetectorRef.detectChanges();\n        this._positioningSettled();\n      });\n      this._overlayDir.attachOverlay();\n      this._keyManager.withHorizontalOrientation(null);\n      this._highlightCorrectOption();\n      this._changeDetectorRef.markForCheck();\n      // Required for the MDC form field to pick up when the overlay has been opened.\n      this.stateChanges.next();\n      // Simulate the animation event before we moved away from `@angular/animations`.\n      Promise.resolve().then(() => this.openedChange.emit(true));\n    }\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    _trackedModal = null;\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `LiveAnnouncer` and any other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      if (!modal) {\n        // Most commonly, the autocomplete trigger is not inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      if (this._trackedModal) {\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      }\n      addAriaReferencedId(modal, 'aria-owns', panelId);\n      this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n      if (!this._trackedModal) {\n        // Most commonly, the autocomplete trigger is not used inside a modal.\n        return;\n      }\n      const panelId = `${this.id}-panel`;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n      if (this._panelOpen) {\n        this._panelOpen = false;\n        this._exitAndDetach();\n        this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n        this._changeDetectorRef.markForCheck();\n        this._onTouched();\n        // Required for the MDC form field to pick up when the overlay has been closed.\n        this.stateChanges.next();\n        // Simulate the animation event before we moved away from `@angular/animations`.\n        Promise.resolve().then(() => this.openedChange.emit(false));\n      }\n    }\n    /** Triggers the exit animation and detaches the overlay at the end. */\n    _exitAndDetach() {\n      if (this._animationsDisabled || !this.panel) {\n        this._detachOverlay();\n        return;\n      }\n      this._cleanupDetach?.();\n      this._cleanupDetach = () => {\n        cleanupEvent();\n        clearTimeout(exitFallbackTimer);\n        this._cleanupDetach = undefined;\n      };\n      const panel = this.panel.nativeElement;\n      const cleanupEvent = this._renderer.listen(panel, 'animationend', event => {\n        if (event.animationName === '_mat-select-exit') {\n          this._cleanupDetach?.();\n          this._detachOverlay();\n        }\n      });\n      // Since closing the overlay depends on the animation, we have a fallback in case the panel\n      // doesn't animate. This can happen in some internal tests that do `* {animation: none}`.\n      const exitFallbackTimer = setTimeout(() => {\n        this._cleanupDetach?.();\n        this._detachOverlay();\n      }, 200);\n      panel.classList.add('mat-select-panel-exit');\n    }\n    /** Detaches the current overlay directive. */\n    _detachOverlay() {\n      this._overlayDir.detachOverlay();\n      // Some of the overlay detachment logic depends on change detection.\n      // Mark for check to ensure that things get picked up in a timely manner.\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n      this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n      return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n      return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n      if (this.empty) {\n        return '';\n      }\n      if (this._multiple) {\n        const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n        if (this._isRtl()) {\n          selectedOptions.reverse();\n        }\n        // TODO(crisbeto): delimiter should be configurable for proper localization.\n        return selectedOptions.join(', ');\n      }\n      return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n      return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n      if (!this.disabled) {\n        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n      }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n      const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n      const manager = this._keyManager;\n      // Open the select on ALT + arrow key to match the native <select>\n      if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (!this.multiple) {\n        const previouslySelectedOption = this.selected;\n        manager.onKeydown(event);\n        const selectedOption = this.selected;\n        // Since the value has changed, we need to announce it ourselves.\n        if (selectedOption && previouslySelectedOption !== selectedOption) {\n          // We set a duration on the live announcement, because we want the live element to be\n          // cleared after a while so that users can't navigate to it using the arrow keys.\n          this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n        }\n      }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n      const manager = this._keyManager;\n      const keyCode = event.keyCode;\n      const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n      const isTyping = manager.isTyping();\n      if (isArrowKey && event.altKey) {\n        // Close the select on ALT + arrow key to match the native <select>\n        event.preventDefault();\n        this.close();\n        // Don't do anything in this case if the user is typing,\n        // because the typing sequence can include the space key.\n      } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n        event.preventDefault();\n        manager.activeItem._selectViaInteraction();\n      } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n        event.preventDefault();\n        const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n        this.options.forEach(option => {\n          if (!option.disabled) {\n            hasDeselectedOptions ? option.select() : option.deselect();\n          }\n        });\n      } else {\n        const previouslyFocusedIndex = manager.activeItemIndex;\n        manager.onKeydown(event);\n        if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n          manager.activeItem._selectViaInteraction();\n        }\n      }\n    }\n    /** Handles keyboard events coming from the overlay. */\n    _handleOverlayKeydown(event) {\n      // TODO(crisbeto): prior to #30363 this was being handled inside the overlay directive, but we\n      // need control over the animation timing so we do it manually. We should remove the `keydown`\n      // listener from `.mat-mdc-select-panel` and handle all the events here. That may cause\n      // further test breakages so it's left for a follow-up.\n      if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close();\n      }\n    }\n    _onFocus() {\n      if (!this.disabled) {\n        this._focused = true;\n        this.stateChanges.next();\n      }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n      this._focused = false;\n      this._keyManager?.cancelTypeahead();\n      if (!this.disabled && !this.panelOpen) {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      }\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n      return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n      return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        if (this.ngControl) {\n          this._value = this.ngControl.value;\n        }\n        this._setSelectionByValue(this._value);\n        this.stateChanges.next();\n      });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n      this.options.forEach(option => option.setInactiveStyles());\n      this._selectionModel.clear();\n      if (this.multiple && value) {\n        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getMatSelectNonArrayValueError();\n        }\n        value.forEach(currentValue => this._selectOptionByValue(currentValue));\n        this._sortValues();\n      } else {\n        const correspondingOption = this._selectOptionByValue(value);\n        // Shift focus to the active item. Note that we shouldn't do this in multiple\n        // mode, because we don't know what option the user interacted with last.\n        if (correspondingOption) {\n          this._keyManager.updateActiveItem(correspondingOption);\n        } else if (!this.panelOpen) {\n          // Otherwise reset the highlighted option. Note that we only want to do this while\n          // closed, because doing it while open can shift the user's focus unnecessarily.\n          this._keyManager.updateActiveItem(-1);\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n      const correspondingOption = this.options.find(option => {\n        // Skip options that are already in the model. This allows us to handle cases\n        // where the same primitive value is selected multiple times.\n        if (this._selectionModel.isSelected(option)) {\n          return false;\n        }\n        try {\n          // Treat null as a special reset value.\n          return (option.value != null || this.canSelectNullableOptions) && this._compareWith(option.value, value);\n        } catch (error) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Notify developers of errors in their comparator.\n            console.warn(error);\n          }\n          return false;\n        }\n      });\n      if (correspondingOption) {\n        this._selectionModel.select(correspondingOption);\n      }\n      return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n      // Always re-assign an array, because it might have been mutated.\n      if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n        if (this.options) {\n          this._setSelectionByValue(newValue);\n        }\n        this._value = newValue;\n        return true;\n      }\n      return false;\n    }\n    // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n    // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n    // recommendation.\n    //\n    // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n    // makes a few exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    //\n    // The user can focus disabled options using the keyboard, but the user cannot click disabled\n    // options.\n    _skipPredicate = option => {\n      if (this.panelOpen) {\n        // Support keyboard focusing disabled options in an ARIA listbox.\n        return false;\n      }\n      // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n      // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n      // closed.\n      return option.disabled;\n    };\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n      if (this.panelWidth === 'auto') {\n        const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n        return refToMeasure.nativeElement.getBoundingClientRect().width;\n      }\n      return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n      if (this.options) {\n        for (const option of this.options) {\n          option._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n      this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n      this._keyManager.tabOut.subscribe(() => {\n        if (this.panelOpen) {\n          // Select the active item when tabbing away. This is consistent with how the native\n          // select behaves. Note that we only want to do this in single selection mode.\n          if (!this.multiple && this._keyManager.activeItem) {\n            this._keyManager.activeItem._selectViaInteraction();\n          }\n          // Restore focus to the trigger before closing. Ensures that the focus\n          // position won't be lost if the user got focus into the overlay.\n          this.focus();\n          this.close();\n        }\n      });\n      this._keyManager.change.subscribe(() => {\n        if (this._panelOpen && this.panel) {\n          this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n        } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n      });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n      const changedOrDestroyed = merge(this.options.changes, this._destroy);\n      this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n        this._onSelect(event.source, event.isUserInput);\n        if (event.isUserInput && !this.multiple && this._panelOpen) {\n          this.close();\n          this.focus();\n        }\n      });\n      // Listen to changes in the internal state of the options and react accordingly.\n      // Handles cases like the labels of the selected options changing.\n      merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n        // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n        // be the result of an expression changing. We have to use `detectChanges` in order\n        // to avoid \"changed after checked\" errors (see #14793).\n        this._changeDetectorRef.detectChanges();\n        this.stateChanges.next();\n      });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n      const wasSelected = this._selectionModel.isSelected(option);\n      if (!this.canSelectNullableOptions && option.value == null && !this._multiple) {\n        option.deselect();\n        this._selectionModel.clear();\n        if (this.value != null) {\n          this._propagateChanges(option.value);\n        }\n      } else {\n        if (wasSelected !== option.selected) {\n          option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n        }\n        if (isUserInput) {\n          this._keyManager.setActiveItem(option);\n        }\n        if (this.multiple) {\n          this._sortValues();\n          if (isUserInput) {\n            // In case the user selected the option with their mouse, we\n            // want to restore focus back to the trigger, in order to\n            // prevent the select keyboard controls from clashing with\n            // the ones from `mat-option`.\n            this.focus();\n          }\n        }\n      }\n      if (wasSelected !== this._selectionModel.isSelected(option)) {\n        this._propagateChanges();\n      }\n      this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n      if (this.multiple) {\n        const options = this.options.toArray();\n        this._selectionModel.sort((a, b) => {\n          return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n        });\n        this.stateChanges.next();\n      }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n      let valueToEmit;\n      if (this.multiple) {\n        valueToEmit = this.selected.map(option => option.value);\n      } else {\n        valueToEmit = this.selected ? this.selected.value : fallbackValue;\n      }\n      this._value = valueToEmit;\n      this.valueChange.emit(valueToEmit);\n      this._onChange(valueToEmit);\n      this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n      if (this._keyManager) {\n        if (this.empty) {\n          // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n          // because it activates the first option that passes the skip predicate, rather than the\n          // first *enabled* option.\n          let firstEnabledOptionIndex = -1;\n          for (let index = 0; index < this.options.length; index++) {\n            const option = this.options.get(index);\n            if (!option.disabled) {\n              firstEnabledOptionIndex = index;\n              break;\n            }\n          }\n          this._keyManager.setActiveItem(firstEnabledOptionIndex);\n        } else {\n          this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n        }\n      }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n      return !this._panelOpen && !this.disabled && this.options?.length > 0 && !!this._overlayDir;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n      this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId() || null;\n      const labelExpression = labelId ? labelId + ' ' : '';\n      return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n      if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n        return this._keyManager.activeItem.id;\n      }\n      return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n      if (this.ariaLabel) {\n        return null;\n      }\n      const labelId = this._parentFormField?.getLabelId();\n      let value = (labelId ? labelId + ' ' : '') + this._valueId;\n      if (this.ariaLabelledby) {\n        value += ' ' + this.ariaLabelledby;\n      }\n      return value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      if (ids.length) {\n        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        this._elementRef.nativeElement.removeAttribute('aria-describedby');\n      }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n      this.focus();\n      this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      // Since the panel doesn't overlap the trigger, we\n      // want the label to only float when there's a value.\n      return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n    }\n    static ɵfac = function MatSelect_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSelect)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSelect,\n      selectors: [[\"mat-select\"]],\n      contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        }\n      },\n      viewQuery: function MatSelect_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n      hostVars: 19,\n      hostBindings: function MatSelect_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n            return ctx._onFocus();\n          })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n            return ctx._onBlur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n          i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n        }\n      },\n      inputs: {\n        userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n        panelClass: \"panelClass\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n        placeholder: \"placeholder\",\n        required: [2, \"required\", \"required\", booleanAttribute],\n        multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n        disableOptionCentering: [2, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n        compareWith: \"compareWith\",\n        value: \"value\",\n        ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n        errorStateMatcher: \"errorStateMatcher\",\n        typeaheadDebounceInterval: [2, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n        sortComparator: \"sortComparator\",\n        id: \"id\",\n        panelWidth: \"panelWidth\",\n        canSelectNullableOptions: [2, \"canSelectNullableOptions\", \"canSelectNullableOptions\", booleanAttribute]\n      },\n      outputs: {\n        openedChange: \"openedChange\",\n        _openedStream: \"opened\",\n        _closedStream: \"closed\",\n        selectionChange: \"selectionChange\",\n        valueChange: \"valueChange\"\n      },\n      exportAs: [\"matSelect\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatFormFieldControl,\n        useExisting: MatSelect\n      }, {\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatSelect\n      }]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c3,\n      decls: 11,\n      vars: 9,\n      consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"detach\", \"backdropClick\", \"overlayKeydown\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayFlexibleDimensions\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n      template: function MatSelect_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵelementStart(0, \"div\", 2, 0);\n          i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.open());\n          });\n          i0.ɵɵelementStart(3, \"div\", 3);\n          i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1, \"span\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 8);\n          i0.ɵɵelement(9, \"path\", 9);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 10, \"ng-template\", 10);\n          i0.ɵɵlistener(\"detach\", function MatSelect_Template_ng_template_detach_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          })(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.close());\n          })(\"overlayKeydown\", function MatSelect_Template_ng_template_overlayKeydown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleOverlayKeydown($event));\n          });\n        }\n        if (rf & 2) {\n          const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵattribute(\"id\", ctx._valueId);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.empty ? 4 : 5);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"cdkConnectedOverlayDisableClose\", true)(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth)(\"cdkConnectedOverlayFlexibleDimensions\", true);\n        }\n      },\n      dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n      styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSelect;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nlet MatSelectTrigger = /*#__PURE__*/(() => {\n  class MatSelectTrigger {\n    static ɵfac = function MatSelectTrigger_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSelectTrigger)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSelectTrigger,\n      selectors: [[\"mat-select-trigger\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SELECT_TRIGGER,\n        useExisting: MatSelectTrigger\n      }])]\n    });\n  }\n  return MatSelectTrigger;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSelectModule = /*#__PURE__*/(() => {\n  class MatSelectModule {\n    static ɵfac = function MatSelectModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSelectModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSelectModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n    });\n  }\n  return MatSelectModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger };\n","import { NgModule } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@NgModule()\nexport class SvgMaterialModule {\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'en-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/en-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'uk-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/uk-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'de-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/de-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'fr-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/fr-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'pl-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/pl-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'es-flag',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/es-flag.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'google',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/google.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'facebook',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/facebook.svg',\n      ),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'gold',\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/arena.svg',\n      ),\n    );\n  }\n}\n","import { ILanguage } from './language.interface';\n\nexport const languages: ILanguage[] = [\n  { icon: 'en-flag', name: 'en' },\n  { icon: 'es-flag', name: 'es' },\n  { icon: 'de-flag', name: 'de' },\n  { icon: 'fr-flag', name: 'fr' },\n  { icon: 'pl-flag', name: 'pl' },\n  { icon: 'uk-flag', name: 'uk' },\n];\n","import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { SvgMaterialModule } from '../../modules/svg-material/svg-material.module';\n\nimport { ILanguage } from './language.interface';\nimport { languages } from './select-language';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-select-language',\n  imports: [\n    FormsModule,\n    SvgMaterialModule,\n\n    MatIconModule,\n    MatSelectModule,\n  ],\n  templateUrl: './select-language.component.html',\n  styleUrl: './select-language.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectLanguageComponent implements OnInit {\n\n  private readonly translateService = inject(TranslateService);\n\n  languages: ILanguage[] = languages;\n  language!: ILanguage;\n\n  ngOnInit(): void {\n    this.initLanguage();\n  }\n\n  private initLanguage(): void {\n    const currLangName: string = this.translateService.currentLang;\n    const currLanguage: ILanguage | undefined = this.languages.find(lang => lang.name === currLangName);\n    this.language = currLanguage ? currLanguage : this.languages[0];\n  }\n\n  onLanguageChange(): void {\n    this.translateService.use(this.language.name);\n  }\n}\n","<mat-select class=\"language-form\" [(ngModel)]=\"language\" (ngModelChange)=\"onLanguageChange()\">\n\n  <mat-select-trigger>\n    <mat-icon class=\"language-icon\" [svgIcon]=\"language.icon\"></mat-icon>\n  </mat-select-trigger>\n\n  @for (lang of languages; track $index) {\n    <mat-option class=\"language-option\" [value]=\"lang\">\n      <mat-icon class=\"language-option-icon\" [svgIcon]=\"lang.icon\"></mat-icon>\n      {{ lang.name }}\n    </mat-option>\n  }\n\n</mat-select>\n","import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { TranslatePipe } from '@ngx-translate/core';\n\nimport { SelectLanguageComponent } from '../../../../shared/components/select-language/select-language.component';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-welcome-header',\n  imports: [\n    NgOptimizedImage,\n    TranslatePipe,\n    SelectLanguageComponent,\n\n    MatToolbarModule,\n    MatButtonModule,\n  ],\n  templateUrl: './welcome-header.component.html',\n  styleUrl: './welcome-header.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WelcomeHeaderComponent {\n\n  signInClick = output<void>();\n\n  onSignInBtnClick(): void {\n    this.signInClick.emit();\n  }\n}\n","<mat-toolbar class=\"wrapper\">\n\n  <div class=\"left-header-container\">\n    <img\n      priority\n      draggable=\"false\"\n      ngSrc=\"images/tnm-logo.png\" alt=\"TNMLogo\"\n      width=\"90\"\n      height=\"90\"/>\n    <nav>\n      <ul class=\"nav-list\">\n        <li><a class=\"nav-link\" href=\"#\">{{ 'header.demo' | translate }}</a></li>\n        <li><a class=\"nav-link\" href=\"#\">Guid</a></li>\n      </ul>\n    </nav>\n  </div>\n\n  <div class=\"right-header-container\">\n    <button\n      mat-button\n      type=\"button\"\n      class=\"sign-in-btn\"\n      (click)=\"onSignInBtnClick()\">\n      {{ 'header.sign_in' | translate }}\n    </button>\n    <hr>\n    <tnm-select-language></tnm-select-language>\n  </div>\n\n</mat-toolbar>\n","import { NgOptimizedImage } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgScrollbarModule } from 'ngx-scrollbar';\n\nimport { AuthDirective } from '../../common/auth/directives/auth/auth.directive';\nimport { IUser } from '../../common/auth/interfaces/auth.interface';\nimport { AuthService } from '../../common/auth/services/auth/auth.service';\nimport { FooterComponent } from '../../common/footer/footer.component';\n\nimport { DemoSettingsComponent } from './components/demo-settings/demo-settings.component';\nimport { WelcomeHeaderComponent } from './components/welcome-header/welcome-header.component';\nimport { WarRoomService } from './services/war-room/war-room.service';\n\n@Component({\n  standalone: true,\n  selector: 'tnm-welcome-page',\n  imports: [\n    WelcomeHeaderComponent,\n    TranslateModule,\n    NgScrollbarModule,\n    NgOptimizedImage,\n    DemoSettingsComponent,\n    FooterComponent,\n    AuthDirective,\n  ],\n  templateUrl: './welcome-page.component.html',\n  styleUrl: './welcome-page.component.scss',\n  providers: [WarRoomService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WelcomePageComponent {\n\n  private readonly router = inject(Router);\n  private readonly authService = inject(AuthService);\n\n  onSignIn(): void {\n    this.authService.signIn$.next();\n  }\n\n  onRefreshRoute(): void {\n    this.router.navigate(['welcome']).then();\n  }\n\n  onUserLoggedIn(user: IUser): void {\n    this.router.navigate(['profile', user.userName]).then();\n  }\n\n}\n","<header>\n  <tnm-welcome-header ngSkipHydration (signInClick)=\"onSignIn()\"></tnm-welcome-header>\n</header>\n<div tnmAuth class=\"wrapper\" (refreshRoute)=\"onRefreshRoute()\" (userLoggedIn)=\"onUserLoggedIn($event)\">\n  <ng-scrollbar class=\"scrollbar-v\" thumbClass=\"thumb-v\" trackClass=\"track-v\">\n    <main>\n      <div class=\"title-wrapper\">\n        <img class=\"title-img\" ngSrc=\"images/title-img.png\" alt=\"title-image\" fill priority/>\n        <div class=\"title-info\">\n          <h1 class=\"title\">Tank Way</h1>\n          <h2 class=\"sub-title\">Join to the most EPIC battle's in the WORLD</h2>\n          <strong class=\"info\">VM-Soft Presents</strong>\n        </div>\n      </div>\n      <tnm-demo-settings (signInClick)=\"onSignIn()\"></tnm-demo-settings>\n      <hr class=\"divider\">\n    </main>\n    <footer>\n      <tnm-footer></tnm-footer>\n    </footer>\n  </ng-scrollbar>\n</div>\n"],"mappings":"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","names":["SingleBoxSharedResizeObserver","Subject","_box","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","inject","NgZone","options","box","__ngFactoryType__","ɵɵdefineInjectable","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","i","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","bezier","mY1","mY2","sampleValues","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","defaultSmoothScrollOptions","SMOOTH_SCROLL_OPTIONS","InjectionToken","SmoothScrollManager","inject","DOCUMENT","NgZone","SMOOTH_SCROLL_OPTIONS","el","x","y","parent","coerceElement","Subject","context","Observable","subscriber","elapsed","value","destroyed","takeWhile","switchMap","resolve","merge","fromEvent","take","options","bezier","takeUntil","finalize","scrollable","customOptions","isRtl","__spreadProps","__spreadValues","target","scrollableEl","targetEl","scrollableRect","targetRect","containerCenterX","containerCenterY","targetCenterX","targetCenterY","bottomEdge","computedOptions","__ngFactoryType__","ɵɵdefineInjectable","_c0","ScrollbarY_Conditional_4_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵclassMapInterpolate1","ɵɵadvance","ScrollbarX_Conditional_4_Template","_c1","Scrollbars_Conditional_0_Template","Scrollbars_Conditional_1_Template","_c2","_c3","preventSelection","doc","tap","enableSelection","stopPropagation","e","getThrottledStream","stream","duration","throttleTime","ViewportClasses","ViewportAdapter","signal","viewportElement","contentElement","spacerElement","value","__ngFactoryType__","ɵɵdefineInjectable","NG_SCROLLBAR","InjectionToken","defaultOptions","defaultScrollTimelinePolyfill","ScrollbarUpdateReason","NG_SCROLLBAR_OPTIONS","NG_SCROLLBAR_POLYFILL","NgScrollbarCore","inject","NG_SCROLLBAR_OPTIONS","SharedResizeObserver","NgZone","Platform","Directionality","SmoothScrollManager","ViewportAdapter","ElementRef","toSignal","signal","input","booleanAttribute","numberAttribute","computed","verticalUsed","horizontalUsed","isVerticallyScrollable","isHorizontallyScrollable","orientation","visibility","viewportDimensions","contentDimensions","output","resizeSub$","hasInitialized","afterRenderEffect","onCleanup","disableSensor","throttleDuration","viewportInit","untracked","ScrollbarUpdateReason","getThrottledStream","combineLatest","reason","options","target","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵstyleProp","ɵɵclassProp","ɵɵProvidersFeature","NG_SCROLLBAR","SCROLLBAR_CONTROL","InjectionToken","ScrollbarAdapter","PointerEventsAdapter","DOCUMENT","effect","disableInteraction","TrackAdapter","pointerDown$","fromEvent","stopPropagation","preventSelection","pointerUp$","enableSelection","pointerEnter$","tap","e","map","pointerLeave$","pointerOver$","merge","startWith","pointerMove$","switchMap","startEvent","takeUntil","delay","over","currDirection","sameDirection","EMPTY","scrollForwardIncrement","scrollBackwardIncrement","position","takeWhile","ɵɵInheritDefinitionFeature","TrackXDirective","start","from","TrackYDirective","top","ɵTrackYDirective_BaseFactory","ɵɵgetInheritedFactory","ScrollbarManager","isPlatformBrowser","PLATFORM_ID","NG_SCROLLBAR_POLYFILL","__async","script","resolve","reject","error","ɵɵdefineInjectable","ThumbAdapter","startTrackMax","startScrollMax","dragStart","of","dragging","dragEnd","startOffset","moveEvent","moveClient","trackRelativeOffset","scrollPosition","startPolyfill","value","ScrollTimeline","element","source","axis","ThumbXDirective","ɵThumbXDirective_BaseFactory","ThumbYDirective","ɵThumbYDirective_BaseFactory","canScrollFunc","scrollOffset","scrollMax","scrollStepFunc","scrollBy","offset","horizontalScrollStepFunc","ScrollbarButton","pointerUpOrLeave$","scrollDirection","dir","interval","animationFrameScheduler","ɵɵdefineComponent","_c0","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ScrollbarY","duration","ɵScrollbarY_BaseFactory","ɵɵtemplate","ScrollbarY_Conditional_4_Template","ɵɵadvance","ɵɵclassMapInterpolate1","ɵɵconditional","ScrollbarX","left","ScrollbarX_Conditional_4_Template","_c1","Scrollbars","Scrollbars_Conditional_0_Template","Scrollbars_Conditional_1_Template","NgScrollbar","contentWrapper","viewChild","ɵɵviewQuerySignal","_c2","ɵɵqueryAdvance","_c3","ɵɵprojectionDef","ɵɵprojection","NgScrollbarModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","BaseControlValueAccessor","_","_renderer","_elementRef","key","value","fn","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","NG_VALUE_ACCESSOR","InjectionToken","DEFAULT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","DefaultValueAccessor","_isAndroid","userAgent","getDOM","COMPOSITION_BUFFER_MODE","InjectionToken","BaseControlValueAccessor","renderer","elementRef","_compositionMode","value","normalizedValue","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","isEmptyInputValue","lengthOrSize","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","max","maxValidator","control","requiredValidator","requiredTrueValidator","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","validators","compose","composeAsync","length","regex","regexStr","isPresent","o","toObservable","isPromise","from","mergeErrors","arrayOfErrors","res","errors","__spreadValues","executeValidators","validator","isValidatorFn","normalizeValidators","c","presentValidators","composeValidators","observables","forkJoin","map","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","getControlAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","current","v","removeValidators","AbstractControlDirective","fn","errorCode","path","ControlContainer","NgControl","AbstractControlStatus","cd","ngControlStatusHost","ngGroupStatusHost","__spreadProps","NgControlStatus","ɵɵclassProp","NgControlStatusGroup","VALID","INVALID","PENDING","DISABLED","ControlEvent","ValueChangeEvent","value","source","PristineChangeEvent","pristine","TouchedChangeEvent","touched","StatusChangeEvent","status","FormSubmittedEvent","FormResetEvent","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","validator","composeValidators","pickAsyncValidators","asyncValidator","coerceToAsyncValidator","composeAsyncValidators","assertControlPresent","parent","isGroup","key","controls","RuntimeError","assertAllValuesPresent","control","_","AbstractControl","validators","asyncValidators","validatorFn","asyncValidatorFn","untracked","v","computed","signal","Subject","addValidators","removeValidators","hasValidator","opts","changed","sourceControl","__spreadProps","__spreadValues","skipPristineCheck","changeFn","shouldHaveEmitted","ctrl","emitEvent","obs","toObservable","errors","path","currPath","name","errorCode","x","changedControl","EventEmitter","newPristine","fn","onlySelf","parentDirty","FormGroup","options","controlName","acc","subtreeUpdated","updated","child","cb","condition","initValue","res","CALL_SET_DISABLED_STATE","InjectionToken","setDisabledStateDefault","controlPath","name","parent","setUpControl","control","dir","callSetDisabledState","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop","cleanUpValidators","registerOnValidatorChange","validators","onChange","validator","onDisabledChange","isDisabled","getControlValidators","mergeValidators","asyncValidators","getControlAsyncValidators","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","asyncValidator","newValue","updateControl","emitModelEvent","setUpFormContainer","cleanUpFormContainer","isPropertyUpdated","changes","viewModel","change","isBuiltInAccessor","valueAccessor","BuiltInControlValueAccessor","syncPendingControls","form","directives","dir","control","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","v","DefaultValueAccessor","removeListItem$1","list","el","index","formDirectiveProvider$1","ControlContainer","forwardRef","NgForm","resolvedPromise$1","untracked","computed","signal","EventEmitter","validators","asyncValidators","callSetDisabledState","FormGroup","composeValidators","composeAsyncValidators","dir","container","setUpControl","group","setUpFormContainer","value","$event","syncPendingControls","FormSubmittedEvent","FormResetEvent","path","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","removeListItem","list","el","index","isFormControlState","formState","FormControl","AbstractControl","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","isOptionsObj","options","changeFn","condition","fn","cb","isFormControl","control","FormControl","formControlBinding$1","NgControl","forwardRef","NgModel","resolvedPromise","FormControl","EventEmitter","parent","validators","asyncValidators","valueAccessors","_changeDetectorRef","callSetDisabledState","selectValueAccessor","changes","oldName","isPropertyUpdated","newValue","setUpControl","value","disabledValue","isDisabled","booleanAttribute","controlName","controlPath","__ngFactoryType__","ɵɵdirectiveInject","ControlContainer","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","ChangeDetectorRef","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵNgNoValidate","__ngFactoryType__","ɵɵdefineDirective","NG_MODEL_WITH_FORM_CONTROL_WARNING","InjectionToken","formControlBinding","NgControl","forwardRef","FormControlDirective","isDisabled","EventEmitter","validators","asyncValidators","valueAccessors","_ngModelWarningConfig","callSetDisabledState","selectValueAccessor","changes","previousForm","cleanUpControl","setUpControl","isPropertyUpdated","newValue","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","formDirectiveProvider","ControlContainer","FormGroupDirective","untracked","value","computed","signal","cleanUpValidators","dir","ctrl","removeListItem$1","$event","syncPendingControls","FormSubmittedEvent","FormResetEvent","oldCtrl","newCtrl","isFormControl","setUpFormContainer","cleanUpFormContainer","setUpValidators","rf","ctx","ɵɵlistener","controlNameBinding","NgControl","forwardRef","FormControlName","isDisabled","EventEmitter","parent","validators","asyncValidators","valueAccessors","_ngModelWarningConfig","selectValueAccessor","changes","isPropertyUpdated","newValue","controlPath","__ngFactoryType__","ɵɵdirectiveInject","ControlContainer","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","NG_MODEL_WITH_FORM_CONTROL_WARNING","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵInternalFormsSharedModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","FormsModule","opts","CALL_SET_DISABLED_STATE","setDisabledStateDefault","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ɵInternalFormsSharedModule","ReactiveFormsModule","NG_MODEL_WITH_FORM_CONTROL_WARNING","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","rf","ctx","ɵɵelement","MatFormField_ng_template_0_Conditional_0_Template","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","ɵɵattribute","ɵɵadvance","ɵɵconditional","MatFormField_ng_template_0_Template","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","labelTemplate_r3","ɵɵreference","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_18_Template","MatFormField_Case_19_Conditional_0_Template","ɵɵtext","ɵɵtextInterpolate","MatFormField_Case_19_Template","MatLabel","__ngFactoryType__","ɵɵdefineDirective","MAT_ERROR","InjectionToken","MatError","inject","_IdGenerator","ɵɵhostProperty","ɵɵProvidersFeature","MatHint","ɵɵclassProp","MAT_PREFIX","MAT_SUFFIX","InjectionToken","MatSuffix","value","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","MatFormFieldFloatingLabel","inject","ElementRef","SharedResizeObserver","NgZone","Subscription","estimateScrollWidth","rf","ctx","ɵɵclassProp","element","htmlEl","clone","scrollWidth","ACTIVATE_CLASS","DEACTIVATING_CLASS","MatFormFieldLineRipple","ngZone","renderer","Renderer2","classList","event","isDeactivating","MatFormFieldNotchedOutline","label","labelWidth","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","_c1","_c2","ɵɵprojectionDef","ɵɵelement","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatFormFieldControl","MAT_FORM_FIELD","InjectionToken","MAT_FORM_FIELD_DEFAULT_OPTIONS","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","MatFormField","inject","ElementRef","ChangeDetectorRef","Directionality","Platform","_IdGenerator","NgZone","Injector","contentChild","MatLabel","value","coerceBooleanProperty","oldValue","newAppearance","Subject","defaults","ANIMATION_MODULE_TYPE","computed","previousControl","control","classPrefix","startWith","map","pairwise","filter","prevErrorState","prevDescribedBy","currentErrorState","currentDescribedBy","takeUntil","p","s","merge","afterRender","prop","ids","startHint","hint","endHint","error","floatingLabel","iconPrefixContainer","textPrefixContainer","iconSuffixContainer","textSuffixContainer","iconPrefixContainerWidth","textPrefixContainerWidth","iconSuffixContainerWidth","textSuffixContainerWidth","negate","prefixWidth","labelHorizontalOffset","prefixAndSuffixWidth","element","rootNode","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuerySignal","ɵɵcontentQuery","MatFormFieldControl","MAT_PREFIX","MAT_SUFFIX","MAT_ERROR","MatHint","ɵɵqueryAdvance","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c3","_c4","_c5","_c6","_c7","MatFormFieldFloatingLabel","MatFormFieldNotchedOutline","MatFormFieldLineRipple","ɵɵclassProp","ɵɵProvidersFeature","FLOATING_LABEL_PARENT","_c9","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c8","ɵɵtemplate","MatFormField_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Template","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_Template","ɵɵprojection","ɵɵelementEnd","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","ɵɵdeclareLet","MatFormField_Case_18_Template","MatFormField_Case_19_Template","tmp_19_0","ɵɵadvance","ɵɵconditional","subscriptMessageType_r4","NgTemplateOutlet","MatFormFieldModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","ObserversModule","_CdkTextFieldStyleLoader","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","listenerOptions","AutofillMonitor","inject","Platform","NgZone","RendererFactory2","_CdkPrivateStyleLoader","elementOrRef","EMPTY","element","coerceElement","info","subject","Subject","cssClass","listener","event","unlisten","_bindEventWithOptions","_info","ɵɵdefineInjectable","TextFieldModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_INPUT_VALUE_ACCESSOR","InjectionToken","ErrorStateMatcher","control","form","__ngFactoryType__","ɵɵdefineInjectable","_ErrorStateTracker","_defaultMatcher","ngControl","_parentFormGroup","_parentForm","_stateChanges","oldState","parent","matcher","control","newState","MAT_INPUT_INVALID_TYPES","MAT_INPUT_CONFIG","InjectionToken","MatInput","inject","ElementRef","Platform","NgControl","AutofillMonitor","NgZone","MAT_FORM_FIELD","Renderer2","_IdGenerator","Subject","value","coerceBooleanProperty","Validators","prevType","getSupportedInputTypes","t","parentForm","NgForm","parentFormGroup","FormGroupDirective","defaultErrorStateMatcher","ErrorStateMatcher","accessor","MAT_INPUT_VALUE_ACCESSOR","element","nodeName","isSignal","_ErrorStateTracker","effect","event","options","isFocused","newValue","placeholder","validity","selectElement","firstOption","ids","existingDescribedBy","toAssign","exclude","id","el","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","MatFormFieldControl","ɵɵNgOnChangesFeature","MatInputModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatFormFieldModule","TextFieldModule","EValidationErrors","EValidationRegExp","ValidationService","userNameLength","control","value","length","EValidationErrors","UserNameLength","userName","match","Name","UserNameFormat","valueExist","pending","exist","error","valid","Pending","passwordLength","PasswordLength","password","Password","PasswordFormat","email","Email","EmailFormat","equalControls","control1","control2","addValidators","EqualControls","dependentControlValid","invalid","DependentControl","multipleOf","multiple","Number","isInteger","MultipleOf","factory","ɵfac","providedIn","InputHeightPipe","transform","height","Number","isNaN","pure","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","label","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","onPasswordTypeChange","ɵɵtextInterpolate1","innerInputType","types","Password","ɵɵelement","ɵɵprojection","ETextInputType","InputTextComponent","constructor","validationService","inject","ValidationService","matInputEl","viewChild","cdr","ChangeDetectorRef","onChange","onTouched","inputType","input","Text","placeholder","borderColor","disableErrors","centered","focused","signal","invalid","pending","formControl","FormControl","nonNullable","matInputHeight","nativeElement","parentElement","clientHeight","ngOnInit","set","dependentControlValid","onInput","event","value","target","onFocusIn","onFocusOut","parentFormControl","updateValueAndValidity","updateInvalidState","writeValue","patchValue","registerOnChange","registerOnTouched","setDisabledState","disabled","disable","enable","validate","control","setTimeout","errors","touched","selectors","viewQuery","rf","ctx","provide","NG_VALUE_ACCESSOR","multi","useExisting","forwardRef","NG_VALIDATORS","ngContentSelectors","_c1","decls","vars","consts","template","ɵɵtemplate","InputTextComponent_Conditional_8_Template","$event","i0","_r1","InputTextComponent_Conditional_11_Template","InputTextComponent_Conditional_12_Template","InputTextComponent_Conditional_13_Template","ɵɵstyleProp","ɵɵpipeBind1","ɵɵproperty","ɵɵpureFunction1","_c2","_c3","ɵɵconditional","FormsModule","DefaultValueAccessor","NgControlStatus","InputHeightPipe","ReactiveFormsModule","FormControlDirective","NgClass","LoaderComponent","MatFormFieldModule","MatFormField","MatLabel","MatSuffix","MatInputModule","MatInput","MatIconModule","MatIcon","styles","changeDetection","NoopValueAccessorDirective","writeValue","value","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","disabled","validate","control","features","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx","ValidationComponent","constructor","injector","inject","Injector","formControl","input","required","ngOnInit","errorMsg","toSignal","combineLatest","valueChanges","statusChanges","pipe","map","hasError","EValidationErrors","Required","touched","EmailFormat","UserNameLength","PasswordLength","UserNameFormat","PasswordFormat","EqualControls","UserNameExist","EmailExist","InvalidCredentials","InvalidEmail","selectors","inputs","features","ɵɵHostDirectivesFeature","NoopValueAccessorDirective","decls","vars","template","rf","ɵɵtemplate","ValidationComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","ReactiveFormsModule","TranslatePipe","MatError","encapsulation","changeDetection","BaseAuthDirective","constructor","dr","inject","DestroyRef","authService","AuthService","validationService","ValidationService","observeControlValueExist","control","pending","exist","request","valueBuff","valueChanges","pipe","debounceTime","filter","value","condition","valid","Object","keys","errors","length","switchMap","set","updateValueAndValidity","catchError","EMPTY","takeUntilDestroyed","subscribe","result","EAuthDialogResult","EEmailMessageTypes","ChangePasswordComponent","BaseAuthDirective","constructor","dialogRef","inject","MatDialogRef","data","MAT_DIALOG_DATA","changePassword$","Subject","ngOnInit","initForm","observePasswordControl","observeChangePassword","onChangePassword","form","valid","next","FormGroup","password","FormControl","validators","Validators","required","validationService","passwordLength","nonNullable","confirmPassword","passwordControl","signal","get","confirmPasswordControl","valueChanges","pipe","takeUntilDestroyed","dr","subscribe","updateValueAndValidity","switchMap","changeModel","email","token","value","authService","changePassword","catchError","EMPTY","user","close","action","EAuthDialogResult","ForgotPassword","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵproperty","invalid","InputTextComponent","MatButton","ValidationComponent","ReactiveFormsModule","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormControlDirective","FormGroupDirective","FormControlName","styles","changeDetection","ForgotPasswordComponent","BaseAuthDirective","constructor","dialogRef","inject","MatDialogRef","resetPassword$","Subject","emailControl","signal","FormControl","validators","Validators","required","validationService","email","nonNullable","ngOnInit","observeResetPassword","onResetPassword","valid","next","pipe","switchMap","authService","sendEmailPasswordReset","value","catchError","error","message","EValidationErrors","InvalidEmail","setErrors","ConfirmEmail","close","action","EAuthDialogResult","data","__spreadProps","__spreadValues","user","withError","EMPTY","takeUntilDestroyed","dr","subscribe","ForgotPassword","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","invalid","InputTextComponent","MatButton","TranslatePipe","ValidationComponent","ReactiveFormsModule","NgControlStatus","FormControlDirective","styles","changeDetection","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","email","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onResend","timer","SendEmailComponent","constructor","dialogRef","inject","MatDialogRef","data","MAT_DIALOG_DATA","authService","AuthService","timerLimit","resend$","Subject","eEmailMessageTypes","EEmailMessageTypes","emailMsgType","signal","userName","withError","computed","timePassed","ngOnInit","calculateTime","observeResend","startTimer","next","onOk","close","interval","setInterval","set","clearInterval","sentAt","EmailConfirmation","emailSentAt","passwordResetSentAt","sentAtTime","Date","getTime","Math","round","pipe","debounceTime","switchMap","console","log","sendEmailConfirmation","catchError","EMPTY","sendEmailPasswordReset","subscribe","user","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","SendEmailComponent_Conditional_1_Template","SendEmailComponent_Conditional_2_Template","SendEmailComponent_Conditional_10_Template","SendEmailComponent_Conditional_11_Template","SendEmailComponent_Conditional_12_Template","SendEmailComponent_Conditional_19_Template","SendEmailComponent_Conditional_20_Template","ɵɵconditional","MatButtonModule","MatButton","styles","changeDetection","SignInUpDirective","BaseAuthDirective","__ngFactoryType__","features","ɵɵInheritDefinitionFeature","SignInComponent","SignInUpDirective","constructor","dialogRef","inject","MatDialogRef","socialAuthService","SocialAuthService","login$","Subject","ngOnInit","initForm","observeLogin","observeGoogleLogin","onLogin","form","valid","next","onFacebookLogin","signIn","FacebookLoginProvider","PROVIDER_ID","then","onNewAccount","close","action","EAuthDialogResult","SignUp","onForgotPassword","ForgotPassword","FormGroup","email","FormControl","validators","Validators","required","validationService","nonNullable","password","emailControl","signal","get","passwordControl","pipe","debounceTime","switchMap","signInModel","value","authService","catchError","error","message","EValidationErrors","InvalidCredentials","setErrors","ConfirmEmail","data","__spreadProps","__spreadValues","user","withError","EMPTY","takeUntilDestroyed","dr","subscribe","result","SignIn","authState","combineLatest","of","emailExist","isSignIn","isGoogle","idToken","SignInGoogle","SignInFacebook","token","authToken","isSignUp","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","invalid","ɵɵtextInterpolate1","TranslatePipe","InputTextComponent","ReactiveFormsModule","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormControlDirective","FormGroupDirective","FormControlName","MatDialogModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatButton","MatFabButton","MatIconModule","MatIcon","ValidationComponent","GoogleSigninButtonDirective","styles","changeDetection","SignUpComponent","SignInUpDirective","constructor","dialogRef","inject","MatDialogRef","register$","Subject","userNamePending","signal","userNameExist","emailPending","emailExist","ngOnInit","initForm","observePasswordControl","observeControlValueExist","userNameControl","authService","bind","emailControl","observeRegister","onRegister","form","valid","next","onBackToLogin","close","action","EAuthDialogResult","SignIn","FormGroup","userName","FormControl","validators","Validators","required","validationService","userNameLength","valueExist","EValidationErrors","UserNameExist","nonNullable","email","EmailExist","password","passwordLength","confirmPassword","get","passwordControl","confirmPasswordControl","equalControls","valueChanges","pipe","takeUntilDestroyed","dr","subscribe","updateValueAndValidity","debounceTime","switchMap","signUpModel","value","signUp","catchError","console","log","EMPTY","user","ConfirmEmail","data","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","invalid","ɵɵtextInterpolate1","FormsModule","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","InputTextComponent","MatButton","ReactiveFormsModule","FormControlDirective","FormGroupDirective","FormControlName","TranslatePipe","ValidationComponent","styles","changeDetection","UserNameComponent","BaseAuthDirective","constructor","dialogRef","inject","MatDialogRef","data","MAT_DIALOG_DATA","signUp$","Subject","userNamePending","signal","userNameExist","userNameControl","FormControl","validators","Validators","required","validationService","userNameLength","userName","valueExist","EValidationErrors","UserNameExist","nonNullable","ngOnInit","observeGoogleLogin","observeControlValueExist","authService","bind","onContinue","valid","next","pipe","debounceTime","switchMap","isGoogle","handleGoogleLogin","handleFacebookLogin","subscribe","response","close","action","EAuthDialogResult","SignIn","signInGoogle","idToken","token","username","value","catchError","EMPTY","signInFacebook","__ngFactoryType__","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","invalid","MatButtonModule","MatButton","InputTextComponent","ReactiveFormsModule","NgControlStatus","FormControlDirective","ValidationComponent","TranslatePipe","styles","changeDetection","AuthDirective","constructor","dr","inject","DestroyRef","aRoute","ActivatedRoute","authService","AuthService","signUp$","Subject","forgotPassword$","changePassword$","user$","sendEmailNotification$","confirmEmail$","refreshRoute","output","userLoggedIn","ngOnInit","observeConfirmEmail","observeChangePassword","observeSignIn","observeSignUp","observeSendEmailNotification","observeUser","observeForgotPassword","observeRouteParams","checkIfAuth","authorised","next","handleSocialLogin","signInDialogResult","action","EAuthDialogResult","SignInGoogle","SignInFacebook","idToken","data","token","isSignUp","isGoogle","request","signInGoogle","bind","signInFacebook","openAuthDialog","UserNameComponent","username","pipe","map","response","SignIn","catchError","EMPTY","of","signIn$","switchMap","SignInComponent","result","takeUntilDestroyed","subscribe","authToken","SignUp","ConfirmEmail","__spreadProps","__spreadValues","emailMsgType","EEmailMessageTypes","EmailConfirmation","ForgotPassword","SignUpComponent","SendEmailComponent","confirmEmail","getUser","user","emit","merge","paramMap","queryParamMap","isLogin","get","email","type","PasswordReset","password","ForgotPasswordComponent","console","log","ChangePasswordComponent","selectors","outputs","FooterComponent","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","UniqueSelectionDispatcher","id","name","listener","registered","__ngFactoryType__","ɵɵdefineInjectable","_DisposeViewRepeaterStrategy","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","record","adjustedPreviousIndex","currentIndex","view","operation","insertContext","_ViewRepeaterOperation","SelectionModel","Subject","_multiple","initiallySelectedValues","_emitChanges","compareWith","value","values","changed","oldValues","newSelectedSet","flushEvent","predicate","inputValue","selection","selectedValue","MatPseudoCheckbox","inject","ANIMATION_MODULE_TYPE","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","_c0","_c1","MatButtonToggle_Conditional_2_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵproperty","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY","MAT_BUTTON_TOGGLE_GROUP","MatButtonToggleChange","source","value","MatButtonToggle","inject","ChangeDetectorRef","ElementRef","FocusMonitor","_IdGenerator","ANIMATION_MODULE_TYPE","value","EventEmitter","_CdkPrivateStyleLoader","_StructuralStylesLoader","toggleGroup","MAT_BUTTON_TOGGLE_GROUP","defaultTabIndex","HostAttributeToken","defaultOptions","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","group","options","newChecked","focusable","toggle","MatButtonToggleChange","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","ɵɵattribute","ɵɵclassProp","booleanAttribute","_c1","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","MatButtonToggle_Conditional_2_Template","ɵɵprojection","ɵɵelementEnd","ɵɵelement","button_r3","ɵɵreference","ɵɵproperty","ɵɵadvance","ɵɵconditional","MatRipple","MatPseudoCheckbox","MatButtonToggleModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","_c0","_c1","_MatInternalFormField","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","ɵɵprojectionDef","ɵɵprojection","_c0","_c1","_c2","MatRadioChange","source","value","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatRadioGroup","MAT_RADIO_GROUP","InjectionToken","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","inject","ChangeDetectorRef","_IdGenerator","EventEmitter","v","newValue","selected","radio","isAlreadySelected","fn","isDisabled","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","dirIndex","ɵɵcontentQuery","MatRadioButton","_t","ɵɵqueryRefresh","ɵɵloadQuery","booleanAttribute","ɵɵProvidersFeature","ElementRef","FocusMonitor","UniqueSelectionDispatcher","NgZone","Renderer2","Injector","_CdkPrivateStyleLoader","_StructuralStylesLoader","radioGroup","animationMode","ANIMATION_MODULE_TYPE","tabIndex","HostAttributeToken","numberAttribute","options","origin","id","name","focusOrigin","event","groupValueChanged","group","input","afterNextRender","ɵɵdefineComponent","ɵɵviewQuery","ɵɵlistener","ɵɵattribute","ɵɵclassProp","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","ɵɵelement","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","_MatInternalFormField","MatRadioModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","_c2","_c3","_c4","MatOption_Conditional_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","MAT_OPTION_PARENT_COMPONENT","InjectionToken","MAT_OPTGROUP","MatOptionSelectionChange","source","isUserInput","MatOption","inject","ElementRef","ChangeDetectorRef","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","_IdGenerator","value","EventEmitter","Subject","styleLoader","_CdkPrivateStyleLoader","_StructuralStylesLoader","_VisuallyHiddenLoader","isSignal","emitEvent","_origin","options","element","event","hasModifierKey","viewValue","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c2","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","booleanAttribute","_c4","ɵɵprojectionDef","_c3","ɵɵtemplate","MatOption_Conditional_0_Template","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelement","ɵɵconditional","ɵɵadvance","ɵɵproperty","MatPseudoCheckbox","MatRipple","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","i","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatPseudoCheckboxModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatOptionModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","ToggleBtnComponent","constructor","value1","input","required","value2","value","model","onChange","onTouched","onToggle","set","writeValue","registerOnChange","registerOnTouched","selectors","inputs","outputs","features","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","multi","useExisting","forwardRef","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","ɵɵelementEnd","stopPropagation","ɵɵtext","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","ɵɵpureFunction1","_c0","_c1","ɵɵtextInterpolate","FormsModule","DefaultValueAccessor","NgControlStatus","NgModel","NgClass","MatRippleModule","MatRipple","styles","changeDetection","DemoSettingsPanelComponent","constructor","title","input","attrTitle","selectors","hostVars","hostBindings","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵprojection","ɵɵadvance","ɵɵtextInterpolate","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","pos_r1","ɵɵadvance","ɵɵtextInterpolate","ɵɵelement","ctx_r1","position","PositionSettingsComponent","constructor","stateService","inject","StateService","eDemoTeams","ETeamNames","teamNamesDescription","positions","team","model","Red","effect","game","demoGame","tank","tanks","find","item","chosenAsPlayer","set","onChanges","Object","entries","key","value","updateDemoGameState","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","ɵɵrepeaterCreate","PositionSettingsComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵtemplate","PositionSettingsComponent_Conditional_6_Template","PositionSettingsComponent_Conditional_7_Template","PositionSettingsComponent_Conditional_9_Template","PositionSettingsComponent_Conditional_10_Template","Blue","ɵɵtwoWayProperty","ɵɵrepeater","ɵɵconditional","ɵɵpureFunction1","_c0","DemoSettingsPanelComponent","MatButtonToggleModule","MatRadioModule","MatRadioGroup","MatRadioButton","ToggleBtnComponent","FormsModule","NgControlStatus","NgModel","NgClass","NgOptimizedImage","styles","changeDetection","_c0","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c1","_c2","_c3","_c4","_c5","_c6","MatTabBody_ng_template_2_Template","_c7","_c8","MatTabGroup_For_3_Conditional_6_ng_template_0_Template","MatTabGroup_For_3_Conditional_6_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","ɵɵproperty","MatTabGroup_For_3_Conditional_7_Template","ɵɵtext","ɵɵtextInterpolate","MatTabGroup_For_3_Template","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ctx_r2","ɵɵrestoreView","$index_r5","ctx_r5","tabHeader_r7","ɵɵreference","ɵɵresetView","$event","ɵɵelement","ɵɵelementEnd","tabNode_r8","ɵɵclassMap","ɵɵclassProp","ɵɵattribute","ɵɵadvance","ɵɵconditional","MatTabGroup_Conditional_4_Template","MatTabGroup_For_8_Template","_r9","tab_r10","$index_r11","MAT_TAB_CONTENT","InjectionToken","MatTabContent","inject","TemplateRef","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","CdkPortal","ɵMatTabLabel_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MAT_TAB_GROUP","MatTab","ViewContainerRef","value","Subject","_CdkPrivateStyleLoader","_StructuralStylesLoader","changes","TemplatePortal","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","ɵɵattribute","booleanAttribute","ɵɵNgOnChangesFeature","_c0","ɵɵprojectionDef","ɵɵtemplate","MatTab_ng_template_0_Template","ACTIVE_CLASS","NO_TRANSITION_CLASS","MatInkBar","_items","item","element","correspondingItem","currentItem","domRect","InkBarItem","ElementRef","newValue","previousIndicatorClientRect","currentClientRect","widthDelta","xPosition","documentNode","inkBarElement","inkBarContentElement","parentElement","MatTabLabelWrapper","InkBarItem","inject","ElementRef","ɵMatTabLabelWrapper_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵInheritDefinitionFeature","passiveEventListenerOptions","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","ChangeDetectorRef","ViewportRuler","Directionality","NgZone","Platform","SharedResizeObserver","Injector","Renderer2","ANIMATION_MODULE_TYPE","Subject","v","value","EventEmitter","_bindEventWithOptions","dirChange","of","resize","debounceTime","takeUntil","viewportResize","realign","FocusKeyManager","afterNextRender","merge","newFocusIndex","EMPTY","startWith","switchMap","tabItems","Observable","observer","resizeObserver","entries","item","skip","filter","e","cleanup","event","hasModifierKey","textContent","index","tabIndex","containerEl","scrollDistance","translateX","direction","viewLength","scrollAmount","labelIndex","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","scrollWidth","containerWidth","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","mouseEvent","timer","maxScrollDistance","distance","position","numberAttribute","MatTabHeader","MatInkBar","ɵMatTabHeader_BaseFactory","ɵɵdefineComponent","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c1","_c2","_c3","_c4","_c5","_c0","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","$event","ɵɵelement","ɵɵelementEnd","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","CdkObserveContent","MAT_TABS_CONFIG","InjectionToken","MatTabBodyPortal","CdkPortalOutlet","MatTabBody","Subscription","isCentering","changeDetectorRef","dir","element","transitionDone","isActive","_c6","ɵɵtemplate","MatTabBody_ng_template_2_Template","CdkScrollable","MatTabGroup","QueryList","stringValue","classList","defaultConfig","_IdGenerator","indexToSelect","isFirstRun","wrapper","tab","tabs","selectedTab","i","header","MatTabChangeEvent","tabHeight","tabHeader","targetIndex","focusOrigin","isCenter","body","MatTab","_c7","_c8","ɵɵclassMap","ɵɵstyleProp","ɵɵProvidersFeature","MAT_TAB_GROUP","ɵɵrepeaterCreate","MatTabGroup_For_3_Template","ɵɵrepeaterTrackByIdentity","MatTabGroup_Conditional_4_Template","MatTabGroup_For_8_Template","ɵɵrepeater","ɵɵconditional","CdkMonitorFocus","MatTabsModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","TankItemTransactionService","constructor","transactionItem","copy","tankDefaultTransactionItem","inventoryTankTransaction$","Subject","tankInventoryTransaction$","inventoryTankTransactionResult$","tankInventoryTransactionResult$","inventoryTankTransactionReady$","tankInventoryTransactionReady$","inventoryTankTransactionCompleted$","tankInventoryTransactionCompleted$","inventoryItemClicked$","tankItemClicked$","transactionInProgress","type","ETankTransactionTypes","NoTransaction","transactionTankItemType","newItem","itemType","transactionNewItem","transactionHost","host","createTransaction","remainedItem","__spreadProps","__spreadValues","quantity","startTransaction","oldItem","target","ETankTransactionHosts","NoHost","destroyTransaction","getTransactionType","Object","freeze","fillTransaction","replace","condition1","condition2","name","transactionClone","InventoryTank","next","TankInventory","handleTransactionCompletion","hostItems","hostItemsClone","oldTankItem","remainedTankItem","oldTankItemAdded","remainedTankItemAdded","forEach","item","index","freeCellIndex","findIndex","sendTransactionResult","Inventory","ETankTransactionTargets","Tank","transactionType","result","factory","ɵfac","providedIn","RotateBulletPipe","transform","value","itemType","ETankItemType","Bullet","pure","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","inventoryCell_r4","quantity","ɵɵtext","ɵɵadvance","ɵɵstyleProp","ɵɵpipeBind1","_c1","itemType","ctx_r2","tankItemType","Bullet","path","ɵɵtextInterpolate","ɵɵlistener","$event","i0","ɵɵrestoreView","_r1","ɵɵresetView","preventDefault","$index_r2","$index","ɵɵnextContext","onInventoryItemDrop","onInventoryItemDragStart","onInventoryItemDragEnd","onInventoryItemDragEnter","onInventoryItemDragLeave","onInventoryItemDoubleClick","ɵɵtemplate","PlayerInventoryComponent_For_4_Conditional_1_Template","PlayerInventoryComponent_For_4_Conditional_2_Template","ɵɵconditional","PlayerInventoryComponent","constructor","renderer","inject","Renderer2","tankItemTransactionService","TankItemTransactionService","dr","DestroyRef","inventory","input","required","inventoryClone","computed","copy","saveInventory","output","ETankItemType","dragIndex","ngOnInit","observeTankItem","observeInventoryTankTransactionReady","observeTransactionResult","index","event","Number","isInteger","updatedInventory","swap","emit","transactionType","getTransactionType","transactionHost","ETankTransactionTargets","Inventory","transactionTankItemType","ETankTransactionTypes","TankInventory","newTankItem","transactionNewItem","possibleIndex","findIndex","item","name","actualIndex","destroyTransaction","oldBullet","startTransaction","tankTransactionItem","fillTransaction","newItem","createTransaction","ETankTransactionHosts","transactionInProgress","inventoryItemClicked$","next","stopImmediatePropagation","el","target","setStyle","tankItemClicked$","pipe","takeUntilDestroyed","subscribe","inventoryTankTransactionReady$","handleTransactionCompletion","i","length","merge","tankInventoryTransactionCompleted$","inventoryTankTransactionCompleted$","delay","result","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","PlayerInventoryComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","NgOptimizedImage","NgClass","RotateBulletPipe","styles","changeDetection","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","item_r1","type","ɵɵtextInterpolate","value","growth","ɵɵproperty","price","TankModernizationComponent","constructor","tank","input","required","characteristics","computed","getTankCharacteristics","selectors","inputs","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","TankModernizationComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","NgOptimizedImage","MatButton","styles","changeDetection","WarRoomService","constructor","tankNameLocker","factory","ɵfac","ɵɵelement","ɵɵproperty","ctx_r2","selectedTankBody","path","ɵɵstyleProp","targetAngle","selectedTankHead","tankNameControl","TankViewComponent","constructor","validationService","inject","ValidationService","warRoomService","WarRoomService","dr","DestroyRef","input","required","tankName","tankNameChange","output","signal","FormControl","validators","userNameLength","userName","nonNullable","effect","tankNameLocker","observeUserName","setValue","onMouseLeave","el","set","onTarget","event","viewWidth","clientWidth","viewHeight","clientHeight","angleBetweenCenterAndPoint","offsetX","offsetY","valueChanges","pipe","debounceTime","takeUntilDestroyed","subscribe","value","valid","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","wrapper_r2","ɵɵreference","ɵɵresetView","ɵɵtemplate","TankViewComponent_Conditional_4_Template","TankViewComponent_Conditional_5_Template","ɵɵelementEnd","TankViewComponent_Conditional_7_Template","ɵɵadvance","ɵɵconditional","NgOptimizedImage","InputTextComponent","ReactiveFormsModule","NgControlStatus","FormControlDirective","styles","changeDetection","EBreakPointsEnum","BreakpointService","constructor","breakPointObserver","inject","BreakpointObserver","adjustedBreakPointObserver$","observe","EBreakPointsEnum","Mobiles","Tablets","Laptops","Desktop","DesktopFHD","pipe","map","state","mobile","breakpoints","tablet","laptop","desktop","desktopFHD","factory","ɵfac","providedIn","_c0","_c1","CdkTable_Conditional_2_Template","rf","ctx","ɵɵprojection","CdkTable_Conditional_3_Template","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","CdkTable_Conditional_4_Template","CDK_TABLE","InjectionToken","CdkCellDef","inject","TemplateRef","__ngFactoryType__","ɵɵdefineDirective","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","CDK_TABLE","name","value","hasStickyChanged","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","booleanAttribute","ɵɵProvidersFeature","BaseCdkCell","columnDef","elementRef","CdkHeaderCell","ElementRef","ɵɵInheritDefinitionFeature","CdkCell","BaseCdkCell","columnDef","inject","CdkColumnDef","elementRef","ElementRef","role","__ngFactoryType__","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","_Schedule","_COALESCED_STYLE_SCHEDULER","InjectionToken","_CoalescedStyleScheduler","NgZone","task","schedule","ɵɵdefineInjectable","BaseRowDef","inject","TemplateRef","IterableDiffers","changes","columns","column","CdkHeaderRowDef","CdkFooterRowDef","__ngFactoryType__","ɵɵdefineDirective","ɵɵNgOnChangesFeature","CDK_TABLE","value","hasStickyChanged","booleanAttribute","ɵɵInheritDefinitionFeature","CdkRowDef","CdkCellOutlet","ViewContainerRef","CdkHeaderRow","ɵɵdefineComponent","rf","ctx","ɵɵelementContainer","CdkRow","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵelementContainer","CdkCellOutlet","CdkNoDataRow","inject","TemplateRef","ɵɵdefineDirective","STICKY_DIRECTIONS","StickyStyler","entries","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_tableInjector","rows","stickyDirections","elementsToClear","row","element","stickyStartStates","stickyEndStates","recalculateCellWidths","replay","state","firstRow","numCells","isRtl","start","end","lastStickyStart","firstStickyEnd","cellWidths","startPositions","endPositions","i","cell","w","width","index","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","borderedRowIndex","offset","isBorderedRowIndex","tableElement","tfoot","dir","dirValue","isBorderElement","zIndexIncrements","zIndex","firstRowCells","widths","positions","nextPosition","cachedSize","clientRect","size","params","rowsSet","update","needsColumnUpdate","entry","newEntry","isCell","spec","afterNextRender","klass","STICKY_POSITIONING_LISTENER","InjectionToken","DataRowOutlet","inject","ViewContainerRef","ElementRef","table","CDK_TABLE","__ngFactoryType__","ɵɵdefineDirective","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CdkTable","inject","IterableDiffers","ChangeDetectorRef","ElementRef","Directionality","Platform","_VIEW_REPEATER_STRATEGY","_COALESCED_STYLE_SCHEDULER","ViewportRuler","STICKY_POSITIONING_LISTENER","DOCUMENT","Subject","tableRole","fn","dataSource","value","EventEmitter","BehaviorSubject","Injector","HostAttributeToken","_i","dataRow","takeUntil","def","isDataSource","changes","viewContainer","record","_adjustedPreviousIndex","currentIndex","change","_ViewRepeaterOperation","rowView","columnDef","rowDef","headerRowDef","footerRowDef","noDataRow","headerRows","thead","closestTableSection","stickyStates","footerRows","tfoot","dataRows","headerRow","i","rows","footerRow","rowDefsChanged","renderRows","prevCachedRenderRows","data","renderRowsForData","j","renderRow","cache","dataIndex","cachedRenderRows","mergeArrayAndSet","defaultRowDefs","columnsDiffReducer","acc","diff","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","dataStream","isObservable","of","columnDefs","columnName","stickyStartStates","stickyEndStates","rowOutlet","renderedRows","viewRef","rowDefs","index","context","outlet","view","cellTemplate","CdkCellOutlet","renderIndex","count","columnId","column","stickyCheckReducer","d","direction","StickyStyler","items","item","shouldShow","container","rootNode","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","CdkNoDataRow","CdkColumnDef","CdkRowDef","CdkHeaderRowDef","CdkFooterRowDef","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","CDK_TABLE","_DisposeViewRepeaterStrategy","_CoalescedStyleScheduler","_c1","ɵɵprojectionDef","_c0","ɵɵprojection","ɵɵtemplate","CdkTable_Conditional_2_Template","CdkTable_Conditional_3_Template","CdkTable_Conditional_4_Template","ɵɵadvance","ɵɵconditional","HeaderRowOutlet","DataRowOutlet","NoDataRowOutlet","FooterRowOutlet","array","set","section","uppercaseSection","current","nodeName","CdkTableModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ScrollingModule","_c0","_c1","MatTable_Conditional_2_Template","rf","ctx","ɵɵprojection","MatTable_Conditional_3_Template","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","MatTable_Conditional_4_Template","MatTable","CdkTable","ɵMatTable_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","ɵɵProvidersFeature","CDK_TABLE","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","STICKY_POSITIONING_LISTENER","ɵɵInheritDefinitionFeature","_c1","ɵɵprojectionDef","_c0","ɵɵprojection","ɵɵtemplate","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","ɵɵadvance","ɵɵconditional","HeaderRowOutlet","DataRowOutlet","NoDataRowOutlet","FooterRowOutlet","MatCellDef","CdkCellDef","ɵMatCellDef_BaseFactory","ɵɵdefineDirective","MatHeaderCellDef","CdkHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatColumnDef","CdkColumnDef","name","ɵMatColumnDef_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MatHeaderCell","CdkHeaderCell","ɵMatHeaderCell_BaseFactory","MatCell","CdkCell","ɵMatCell_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","MatHeaderRowDef","CdkHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","booleanAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MatRowDef","CdkRowDef","ɵMatRowDef_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MatHeaderRow","CdkHeaderRow","ɵMatHeaderRow_BaseFactory","ɵɵdefineComponent","rf","ctx","ɵɵelementContainer","CdkCellOutlet","MatRow","CdkRow","ɵMatRow_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵelementContainer","CdkCellOutlet","MatTableModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CdkTableModule","EBattleStatsColumns","MapBattlePipe","transform","unit","column","EBattleStatsColumns","Tank","body","hull","path","head","turret","Name","value","name","Team","team","Level","level","Kills","kills","Deaths","deaths","Date","date","pure","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c2","column_r1","ctx_r1","eBattleStatsColumns","Date","Id","isLargeScreen","ɵɵadvance","ɵɵtextInterpolate","i_r3","ɵɵdeclareLet","ɵɵelement","src_r5","body","head","ɵɵtextInterpolate1","ɵɵpipeBind2","element_r4","player","value","ɵɵtemplate","BattlesTableComponent_For_3_td_2_Case_1_Template","BattlesTableComponent_For_3_td_2_Case_2_Template","BattlesTableComponent_For_3_td_2_Case_3_Template","BattlesTableComponent_For_3_td_2_Case_4_Template","ɵɵpureFunction2","_c3","Name","ɵɵconditional","tmp_14_0","Tank","ɵɵelementContainerStart","BattlesTableComponent_For_3_th_1_Template","BattlesTableComponent_For_3_td_2_Template","ɵɵlistener","$event","ctx_r6","ɵɵrestoreView","_r6","element_r8","$implicit","i_r9","dataIndex","ɵɵnextContext","toggle","ɵɵresetView","stopPropagation","_c4","tmp_3_0","expandedElement","id","src_r12","element_r13","column_r11","subElement_r10","BattlesTableComponent_td_8_For_5_td_2_Case_1_Template","BattlesTableComponent_td_8_For_5_td_2_Case_2_Template","BattlesTableComponent_td_8_For_5_td_2_Case_3_Template","BattlesTableComponent_td_8_For_5_td_2_Case_4_Template","_c5","tmp_16_0","BattlesTableComponent_td_8_For_5_th_1_Template","BattlesTableComponent_td_8_For_5_td_2_Template","ɵɵrepeaterCreate","BattlesTableComponent_td_8_For_5_Template","ɵɵrepeaterTrackByIndex","BattlesTableComponent_td_8_th_7_Template","BattlesTableComponent_td_8_td_8_Template","BattlesTableComponent_td_8_tr_9_Template","BattlesTableComponent_td_8_tr_10_Template","bots","ɵɵrepeater","columnsToDisplay","columnsToDisplayWithExpand","BattlesTableComponent","constructor","breakpointService","inject","BreakpointService","renderer","Renderer2","injector","Injector","expandedEl","viewChildren","breakpoint","toSignal","adjustedBreakPointObserver$","computed","laptop","desktop","desktopFHD","battles","input","required","EBattleStatsColumns","Team","Level","Kills","Deaths","signal","element","index","set","forEach","elRef","i","el","nativeElement","setStyle","scrollHeight","selectors","viewQuery","rf","ctx","BattlesTableComponent_For_3_Template","BattlesTableComponent_th_5_Template","BattlesTableComponent_td_6_Template","BattlesTableComponent_td_8_Template","BattlesTableComponent_tr_9_Template","BattlesTableComponent_tr_10_Template","BattlesTableComponent_tr_11_Template","ɵɵpureFunction0","_c1","MatTableModule","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatButtonModule","MatMiniFabButton","MatIconModule","MatIcon","MapBattlePipe","NgOptimizedImage","DatePipe","NgClass","NgScrollbar","styles","changeDetection","_c0","_c1","_c2","MatMenuItem_Conditional_4_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","_c3","MatMenu_ng_template_0_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","$event","ɵɵprojection","ɵɵclassMap","ɵɵclassProp","ɵɵproperty","ɵɵattribute","MAT_MENU_PANEL","InjectionToken","MatMenuItem","inject","ElementRef","DOCUMENT","FocusMonitor","ChangeDetectorRef","Subject","_CdkPrivateStyleLoader","_StructuralStylesLoader","origin","options","event","clone","icons","isHighlighted","triggersSubmenu","__ngFactoryType__","ɵɵdefineComponent","booleanAttribute","ɵɵprojectionDef","ɵɵtemplate","ɵɵadvance","ɵɵconditional","MatRipple","MAT_MENU_CONTENT","InjectionToken","MAT_MENU_DEFAULT_OPTIONS","InjectionToken","MAT_MENU_DEFAULT_OPTIONS_FACTORY","ENTER_ANIMATION","EXIT_ANIMATION","MatMenu","inject","ElementRef","ChangeDetectorRef","Injector","QueryList","Subject","value","classes","previousPanelClass","newClassList","__spreadValues","className","EventEmitter","_IdGenerator","defaultOptions","ANIMATION_MODULE_TYPE","FocusKeyManager","startWith","switchMap","items","merge","item","focusedItem","itemsList","manager","index","_item","event","keyCode","hasModifierKey","origin","afterNextRender","menuPanel","_depth","posX","posY","__spreadProps","state","isExit","isOpen","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MAT_MENU_CONTENT","MatMenuItem","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","TemplateRef","ɵɵattribute","booleanAttribute","ɵɵProvidersFeature","MAT_MENU_PANEL","_c3","ɵɵprojectionDef","ɵɵtemplate","MatMenu_ng_template_0_Template","MAT_MENU_SCROLL_STRATEGY","overlay","Overlay","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","passiveEventListenerOptions","PANELS_TO_TRIGGERS","MatMenuTrigger","inject","Overlay","ElementRef","ViewContainerRef","MatMenuItem","Directionality","FocusMonitor","NgZone","MAT_MENU_SCROLL_STRATEGY","ChangeDetectorRef","Subscription","v","menu","reason","EventEmitter","parentMenu","MAT_MENU_PANEL","renderer","Renderer2","MatMenu","_bindEventWithOptions","event","isFakeTouchstartFromScreenReader","passiveEventListenerOptions","previousTrigger","overlayRef","overlayConfig","positionStrategy","takeUntil","origin","options","take","isOpen","config","OverlayConfig","position","change","posX","posY","originX","originFallbackX","overlayY","overlayFallbackY","originY","originFallbackY","overlayX","overlayFallbackX","offsetY","firstItem","backdrop","detachments","parentClose","of","hover","filter","active","merge","isFakeMousedownFromScreenReader","keyCode","TemplatePortal","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵattribute","MatMenuModule","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MatRippleModule","MatCommonModule","OverlayModule","CdkScrollableModule","matMenuAnimations","fadeInItems","transformMenu","QuantityMenuComponent","constructor","validationService","inject","ValidationService","quantityChange","output","inputText","viewChild","InputTextComponent","quantity","signal","quantityControl","FormControl","updateValidators","set","toString","setValidators","Validators","required","min","max","multipleOf","updateValueAndValidity","patchValue","cdr","detectChanges","onCancel","emit","status","onSubmit","valid","value","selectors","viewQuery","rf","ctx","ɵɵelementStart","ɵɵlistener","$event","stopImmediatePropagation","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ReactiveFormsModule","NgControlStatus","FormControlDirective","MatButton","MatMiniFabButton","MatIconModule","MatIcon","styles","changeDetection","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","invention_r3","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onDragEnter","onDragLeave","ɵɵtemplate","TankInventionsComponent_For_4_Conditional_1_Template","ɵɵadvance","ɵɵconditional","TankInventionsComponent","constructor","renderer","inject","Renderer2","inventions","input","required","event","stopImmediatePropagation","el","target","setStyle","selectors","inputs","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","TankInventionsComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","NgOptimizedImage","NgClass","styles","changeDetection","ɵɵelement","ɵɵproperty","ctx_r2","iconSrc","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","quantity","TankItemSlotComponent","constructor","renderer","inject","Renderer2","tankItem","input","multipleItems","dragStart","output","dragEnd","computed","path","onDragEnter","contentEl","setStyle","onDragLeave","onDrop","onDragStart","emit","onDragEnd","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵlistener","ɵɵrestoreView","_r1","container_r2","ɵɵreference","ɵɵresetView","i0","ɵɵtemplate","TankItemSlotComponent_Conditional_4_Template","TankItemSlotComponent_Conditional_5_Template","TankItemSlotComponent_Conditional_6_Template","ɵɵpureFunction1","_c0","ɵɵconditional","NgOptimizedImage","NgClass","styles","changeDetection","ɵɵelementStart","ɵɵlistener","$event","i0","ɵɵrestoreView","_r1","ɵɵresetView","preventDefault","$index_r2","$index","ctx_r2","ɵɵnextContext","onBulletSlotDragStart","onBulletSlotDragEnd","onBulletChange","onBulletDoubleClick","ɵɵelementEnd","onMenuClosed","ɵɵtext","onItemQuantityChange","ɵɵadvance","ɵɵproperty","bullet_r4","menu_r5","ɵɵelement","tankClone","inventions","TankInventoryComponent","constructor","tankItemTransactionService","inject","TankItemTransactionService","dr","DestroyRef","itemQuantityChanged","bulletActiveIndex","tank","input","required","saveTank","output","matTriggers","viewChildren","MatMenuTrigger","quantityMenus","QuantityMenuComponent","computed","copy","ngOnInit","observeInventoryItem","observeTankInventoryTransactionReady","observeTransactionResult","onTurretChange","transactionTankItemType","ETankItemType","TankTurret","startTransaction","turret","ETankTransactionTargets","Tank","tankTransactionItem","fillTransaction","newItem","destroyTransaction","onHullChange","TankHull","hull","index","Bullet","newBullet","transactionNewItem","possibleIndex","bullets","findIndex","bullet","name","actualIndex","oldBullet","host","ETankTransactionHosts","Inventory","remainedItem","openMenu","updateValidators","quantity","swap","emit","quantityResult","status","closeMenu","item","createTransaction","transactionInProgress","tankItemClicked$","next","inventoryItemClicked$","pipe","takeUntilDestroyed","subscribe","tankInventoryTransactionReady$","itemType","updatedTankItems","handleTransactionCompletion","merge","tankInventoryTransactionCompleted$","inventoryTankTransactionCompleted$","delay","result","selectors","viewQuery","rf","ctx","ɵɵrepeaterCreate","TankInventoryComponent_For_5_Template","ɵɵrepeaterTrackByIndex","ɵɵtemplate","TankInventoryComponent_Conditional_6_Template","tmp_0_0","tmp_1_0","ɵɵrepeater","tmp_2_0","ɵɵconditional","TankItemSlotComponent","MatButton","MatMenuModule","MatMenu","TankInventionsComponent","styles","changeDetection","ɵɵelement","ɵɵstyleProp","ctx_r0","rotateValue","ɵɵproperty","iconSrc2","iconSrc3","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","name","price","GameItemBtnComponent","constructor","iconSrc1","input","required","blocked","priced","focused","rounded","smallIcon","largeIcon","rotate","onClick","output","computed","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵtemplate","GameItemBtnComponent_Conditional_4_Template","GameItemBtnComponent_Conditional_5_Template","GameItemBtnComponent_Conditional_6_Template","GameItemBtnComponent_Conditional_7_Template","GameItemBtnComponent_Conditional_8_Template","ɵɵlistener","$event","emit","ɵɵpureFunction1","_c0","ɵɵpureFunction3","_c1","ɵɵpureFunction2","_c2","ɵɵconditional","MatButtonModule","MatButton","NgOptimizedImage","MatIconModule","MatIcon","NgClass","styles","changeDetection","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r1","$index_r2","ɵɵnextContext","$index","ctx_r2","ɵɵresetView","onSelectTank","ɵɵelementEnd","ɵɵproperty","tank_r4","hull","path","turret","name","chosenAsPlayer","_r5","$implicit","onBuyTank","ɵɵelement","ɵɵtemplate","TankListComponent_For_3_Conditional_0_Conditional_0_Template","TankListComponent_For_3_Conditional_0_Conditional_1_Template","TankListComponent_For_3_Conditional_0_Conditional_2_Template","ɵɵconditional","game","tanks","length","TankListComponent_For_3_Conditional_0_Template","tmp_10_0","TankListComponent","constructor","input","required","buyTank","output","selectTank","tank","emit","index","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","TankListComponent_For_3_Template","ɵɵrepeaterTrackByIndex","ɵɵadvance","ɵɵrepeater","GameItemBtnComponent","styles","changeDetection","ShopDealDialogComponent","constructor","dr","inject","DestroyRef","dialogRef","MatDialogRef","validationService","ValidationService","data","MAT_DIALOG_DATA","quantityControl","FormControl","Validators","required","min","max","price","signal","shopItem","isDeal","computed","playerCoins","isBullet","item","itemType","ETankItemType","Bullet","ngOnInit","observeQuantity","multipleOf","onCancel","close","quantity","result","onConfirm","valid","value","valueChanges","pipe","takeUntilDestroyed","subscribe","set","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵpureFunction1","_c0","path","invalid","MatButton","GameItemBtnComponent","NgOptimizedImage","InputTextComponent","ReactiveFormsModule","NgControlStatus","FormControlDirective","NgClass","styles","changeDetection","ɵɵelementStart","ɵɵlistener","shopItem_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onBuyItem","ɵɵelementEnd","ɵɵproperty","item","path","price","rotatePictures","smallIcons","largeIcons","ShopComponent","constructor","shopItems","input","required","buyItem","output","shopItem","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","ShopComponent_For_2_Template","_forTrack0","ɵɵadvance","ɵɵrepeater","GameItemBtnComponent","styles","changeDetection","turretPrices","ETankTurretNames","RegularRed","RegularBlue","USAStyle","ForestStyle","UkraineStyle","hullPrices","ETankHullNames","bulletPrices","ETankBulletNames","Gray","Green","Golden","Blue","Red","tankTurretsShop","tankTurrets","map","turret","item","price","name","tankHullsShop","tankHulls","hull","tankBulletsShop","tankBullets","bullet","TankShopsComponent","constructor","dialog","inject","MatDialog","tankHullsShop","tankTurretsShop","tankBulletsShop","player","input","required","savePlayer","output","selectedTab","signal","onBuyItem","shopItem","arenas","price","showShopDealDialog","playerCoins","subscribe","result","putItemInInventory","emit","dealResult","dealPrice","existingItemIndex","inventory","findIndex","item","quantity","path","freeItemIndex","dataConfig","open","ShopDealDialogComponent","data","hasBackdrop","panelClass","afterClosed","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","$event","set","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance","MatTab","MatTabGroup","ShopComponent","styles","changeDetection","WarRoomHeaderComponent","constructor","validationService","inject","ValidationService","dr","DestroyRef","locker","player","input","required","savePlayerName","output","userNameControl","signal","FormControl","validators","userNameLength","userName","nonNullable","effect","hasOwnProperty","setValue","name","ngOnInit","observeUserName","valueChanges","pipe","debounceTime","takeUntilDestroyed","subscribe","value","valid","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ɵɵtextInterpolate","totalBattles","totalWins","zrists","arenas","InputTextComponent","TranslatePipe","ValidationComponent","ReactiveFormsModule","NgControlStatus","FormControlDirective","NgOptimizedImage","styles","changeDetection","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","onSaveTank","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","chosenTank","_r4","ɵɵelement","ɵɵtext","_r1","onBuyTank","onSelectTank","onTankNameChange","ɵɵtemplate","WarRoomComponent_Conditional_6_Conditional_6_Template","onSaveInventory","WarRoomComponent_Conditional_6_Conditional_11_Template","WarRoomComponent_Conditional_6_Conditional_12_Template","onSavePlayer","WarRoomComponent_Conditional_6_Conditional_17_Template","game","tanks","tmp_3_0","name","tmp_4_0","hull","tmp_5_0","turret","ɵɵconditional","isSmallScreen","inventory","player","battles","WarRoomComponent","constructor","tanksQuantity","stateService","inject","StateService","warRoomService","WarRoomService","breakpointService","BreakpointService","toSignal","adjustedBreakPointObserver$","pipe","map","state","mobile","tablet","defaultTanks","Array","fill","copy","defaultDemoTank","computed","demoPlayer","__spreadValues","demoBattles","demoGame","reduce","acc","item","index","tank","find","chosenAsPlayer","onSavePlayerName","updateDemoPlayerState","changedTank","findIndex","updateDemoGameState","forEach","tankNameLocker","tankPrice","arenas","push","selectors","decls","vars","consts","template","rf","ctx","WarRoomComponent_Conditional_6_Template","WarRoomComponent_Conditional_10_Template","WarRoomComponent_Conditional_11_Template","length","ReactiveFormsModule","BattlesTableComponent","MatIconModule","MatButtonModule","WarRoomHeaderComponent","TankListComponent","MatTabsModule","PlayerInventoryComponent","TankViewComponent","TankInventoryComponent","TankShopsComponent","TankModernizationComponent","styles","changeDetection","DemoSettingsComponent","constructor","signInClick","output","router","inject","Router","stateService","StateService","ngOnInit","inDemo","onDemo","navigate","then","selectors","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","ɵɵtext","emit","PositionSettingsComponent","MatButtonModule","MatButton","WarRoomComponent","styles","changeDetection","_c0","_c1","MatToolbarRow","__ngFactoryType__","ɵɵdefineDirective","MatToolbar","inject","ElementRef","Platform","DOCUMENT","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵclassMap","ɵɵclassProp","ɵɵprojectionDef","ɵɵprojection","MatToolbarModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","_c0","_c1","_c2","_c3","MatSelect_Conditional_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","MatSelect_Conditional_5_Conditional_1_Template","ɵɵprojection","MatSelect_Conditional_5_Conditional_2_Template","MatSelect_Conditional_5_Template","ɵɵtemplate","ɵɵconditional","MatSelect_ng_template_10_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵclassMapInterpolate1","ɵɵclassProp","ɵɵproperty","ɵɵattribute","MAT_SELECT_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_TRIGGER","MatSelectChange","source","value","MatSelect","ViewportRuler","ChangeDetectorRef","ElementRef","Directionality","_IdGenerator","Renderer2","MAT_FORM_FIELD","NgControl","LiveAnnouncer","ANIMATION_MODULE_TYPE","Subject","index","option","panel","labelCount","_countGroupLabelsBeforeOption","element","_getOptionScrollPosition","o1","o2","Validators","fn","newValue","defer","options","startWith","switchMap","merge","EventEmitter","filter","o","map","defaultErrorStateMatcher","ErrorStateMatcher","parentForm","NgForm","parentFormGroup","FormGroupDirective","tabIndex","HostAttributeToken","_ErrorStateTracker","SelectionModel","takeUntil","event","newAriaLabelledby","ngControl","changes","take","modal","panelId","removeAriaReferencedId","addAriaReferencedId","cleanupEvent","exitFallbackTimer","isDisabled","selectedOptions","keyCode","isArrowKey","isOpenKey","manager","hasModifierKey","previouslySelectedOption","selectedOption","isTyping","hasDeselectedOptions","opt","previouslyFocusedIndex","currentValue","correspondingOption","preferredOrigin","CdkOverlayOrigin","ActiveDescendantKeyManager","changedOrDestroyed","isUserInput","wasSelected","a","b","fallbackValue","valueToEmit","firstEnabledOptionIndex","labelId","labelExpression","ids","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatOption","MAT_OPTGROUP","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c0","_c1","CdkConnectedOverlay","ɵɵlistener","$event","ɵɵattribute","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","MatFormFieldControl","MAT_OPTION_PARENT_COMPONENT","ɵɵNgOnChangesFeature","_c3","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","_c2","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","MatSelect_Conditional_4_Template","MatSelect_Conditional_5_Template","ɵɵelementEnd","ɵɵnamespaceSVG","ɵɵelement","MatSelect_ng_template_10_Template","fallbackOverlayOrigin_r4","ɵɵreference","ɵɵadvance","ɵɵconditional","ɵɵproperty","NgClass","MatSelectTrigger","ɵɵdefineDirective","MatSelectModule","ɵɵdefineNgModule","ɵɵdefineInjector","OverlayModule","MatOptionModule","MatCommonModule","CdkScrollableModule","MatFormFieldModule","SvgMaterialModule","constructor","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","ɵɵinject","MatIconRegistry","DomSanitizer","languages","icon","name","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","lang_r1","ɵɵadvance","icon","ɵɵtextInterpolate1","name","SelectLanguageComponent","constructor","translateService","inject","TranslateService","languages","ngOnInit","initLanguage","currLangName","currentLang","currLanguage","find","lang","language","onLanguageChange","use","selectors","decls","vars","consts","template","rf","ctx","ɵɵtwoWayListener","$event","i0","ɵɵtwoWayBindingSet","ɵɵlistener","ɵɵrepeaterCreate","SelectLanguageComponent_For_4_Template","ɵɵrepeaterTrackByIndex","ɵɵtwoWayProperty","ɵɵrepeater","FormsModule","NgControlStatus","NgModel","SvgMaterialModule","MatIconModule","MatIcon","MatSelectModule","MatSelect","MatSelectTrigger","MatOption","styles","changeDetection","WelcomeHeaderComponent","constructor","signInClick","output","onSignInBtnClick","emit","selectors","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵtextInterpolate1","NgOptimizedImage","TranslatePipe","SelectLanguageComponent","MatToolbarModule","MatToolbar","MatButtonModule","MatButton","styles","changeDetection","WelcomePageComponent","constructor","router","inject","Router","authService","AuthService","onSignIn","signIn$","next","onRefreshRoute","navigate","then","onUserLoggedIn","user","userName","selectors","features","ɵɵProvidersFeature","WarRoomService","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","ɵɵelementEnd","$event","ɵɵelement","ɵɵtext","WelcomeHeaderComponent","TranslateModule","NgScrollbarModule","NgScrollbar","NgOptimizedImage","DemoSettingsComponent","FooterComponent","AuthDirective","styles","changeDetection"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,37,38,39,40,41,42,43,44,45,46,53,65,66,71,97,98]}