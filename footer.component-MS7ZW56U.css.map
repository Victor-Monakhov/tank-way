{
  "version": 3,
  "sources": ["src/app/common/footer/footer.component.scss", "src/assets/styles/mixins.scss"],
  "sourcesContent": ["@use 'mixins' as mixins;\n\n:host {\n  font-family: \"Roboto Light\", sans-serif;\n  .wrapper {\n    display: flex;\n    justify-content: space-between;\n    background: var(--mat-sys-background);\n    @include mixins.vm-media(\n        horizontal,\n          (padding, (\n            40px 25px,\n            50px 50px,\n            55px 65px,\n            64px 100px\n            ))\n    );\n    .left-content, .right-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      flex: 50% 1 0;\n      .title {\n        font-size: 18px;\n        color: var(--mat-sys-primary);\n        margin-bottom: 15px;\n      }\n      .list {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        & > * {\n          font-size: 14px;\n        }\n\n        .left-item {\n          position: relative;\n          text-decoration: none;\n          color: var(--mat-sys-on-background);\n          @include mixins.hover-underline(1px, 2px, var(--mat-sys-primary));\n        }\n      }\n    }\n  }\n}\n", "@use 'variables' as *;\n\n@mixin hover-underline($line-width, $offset, $color, $opacity: 1) {\n  bottom: $offset;\n  &:before {\n    content: '';\n    box-sizing: border-box;\n    position: absolute;\n    top: $offset;\n    left: 50%;\n    transform: translateX(-50%);\n    border-bottom: $line-width solid $color;\n    height: 100%;\n    width: 0;\n    opacity: $opacity;\n  }\n\n  &:hover:before {\n    width: 100%;\n    transition: width 300ms;\n  }\n}\n\n@mixin vm-media($direction, $properties...) {\n  $breakpoints: ($xs, $sm, $md, $lg, $xl);\n  @if ($direction == vertical) {\n    $direction: min-height;\n  } @else if ($direction == horizontal) {\n    $direction: min-width;\n  }\n  @for $i from 1 through length($breakpoints) {\n    $list: ();\n    @each $property in $properties {\n      $name: nth($property, 1);\n      $values: nth($property, 2);\n      @if length($values) >= $i {\n        $list: append($list, ($name, nth($values, $i)));\n      }\n    }\n    @if length($list) {\n      @media screen and (#{$direction}: nth($breakpoints, $i)) {\n        @each $prop in $list {\n          $name: nth($prop, 1);\n          $value: nth($prop, 2);\n          #{$name}: $value;\n        }\n      }\n    }\n  }\n}\n"],
  "mappings": "AAEA,MACE,YAAA,YAAA,CAAA,WACA,MAAA,CAAA,QACE,QAAA,KACA,gBAAA,cACA,WAAA,IAAA,sBCiCE,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,GDpCJ,MAAA,CAAA,QAFF,QCyCkB,KAAA,MAHZ,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,ODpCJ,MAAA,CAAA,QAFF,QCyCkB,MAHZ,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,ODpCJ,MAAA,CAAA,QAFF,QCyCkB,KAAA,MAHZ,OAAA,OAAA,IAAA,CAAA,SAAA,EAAA,ODpCJ,MAAA,CAAA,QAFF,QCyCkB,KAAA,OD1Bd,MAAA,CAbF,QAaE,CAAA,aAAA,MAAA,CAbF,QAaE,CAAA,cACE,QAAA,KACA,eAAA,OACA,YAAA,OACA,KAAA,IAAA,EAAA,EACA,MAAA,CAlBJ,QAkBI,CALF,aAKE,CAAA,MAAA,MAAA,CAlBJ,QAkBI,CALF,cAKE,CAAA,MACE,UAAA,KACA,MAAA,IAAA,mBACA,cAAA,KAEF,MAAA,CAvBJ,QAuBI,CAVF,aAUE,CAAA,KAAA,MAAA,CAvBJ,QAuBI,CAVF,cAUE,CAAA,KACE,QAAA,KACA,eAAA,OACA,IAAA,KAEA,MAAA,CA5BN,QA4BM,CAfJ,aAeI,CALF,IAKE,CAAA,EAAA,MAAA,CA5BN,QA4BM,CAfJ,cAeI,CALF,IAKE,CAAA,EACE,UAAA,KAGF,MAAA,CAhCN,QAgCM,CAnBJ,aAmBI,CATF,KASE,CAAA,UAAA,MAAA,CAhCN,QAgCM,CAnBJ,cAmBI,CATF,KASE,CAAA,UACE,SAAA,SACA,gBAAA,KACA,MAAA,IAAA,yBCpCR,ODqC6C,ICpC7C,MAAA,CDAA,QCAA,CDaE,aCbF,CDuBI,KCvBJ,CDgCM,SChCN,QAAA,MAAA,CDAA,QCAA,CDaE,cCbF,CDuBI,KCvBJ,CDgCM,SChCN,QACE,QAAA,GACA,WAAA,WACA,SAAA,SACA,IDgC2C,IC/B3C,KAAA,IACA,UAAA,UAAA,MACA,cAAA,IAAA,MAAA,IAAA,mBACA,OAAA,KACA,MAAA,EACA,QAZ2D,EAe7D,MAAA,CDbA,QCaA,CDAE,aCAF,CDUI,KCVJ,CDmBM,SCnBN,MAAA,QAAA,MAAA,CDbA,QCaA,CDAE,cCAF,CDUI,KCVJ,CDmBM,SCnBN,MAAA,QACE,MAAA,KACA,WAAA,MAAA",
  "names": []
}
